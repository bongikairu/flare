var Module;if(typeof Module==="undefined")Module=eval("(function() { try { return Module || {} } catch(e) { return {} } })()");if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0;Module.finishedDataFileDownloads=0}Module.expectedDataFileDownloads++;((function(){function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module["FS_createPath"]("/","testbin",true,true);fileData0=[];fileData0.push.apply(fileData0,[7,0,0,0,24,0,0,0,53,0,9,0,3,0,0,0,226,19,110,233,2,0,0,0,108,24,1,0,1,0,0,0,36,0,0,0,1,0,0,0,8,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,24,0,0,0,0,0,0,0,1,0,0,0,21,0,0,0,0,0,128,63,2,0,0,0,18,0,0,0,0,1,0,0,0,75,0,0,0,0,27,3,0,0,204,0,0,0,23,16,0,0,154,134,0,0,1,0,0,0,99,0,0,0,6,0,0,0,0,30,24,1,0,189,6,0,0,158,28,0,0,251,31,0,0,167,166,0,0,1,0,0,0,101,0,0,0,2,0,0,0,0,253,23,1,0,6,5,0,0,34,89,0,0,40,23,0,0,124,230,0,0,1,0,0,0,103,0,0,0,2,0,0,0,0,220,23,1,0,23,16,0,0,0,0,0,0,27,3,0,0,0,0,0,0,3,0,1,12,0,0,0,171,20,1,0,0,0,0,0,0,0,0,0,251,31,0,0,0,0,0,0,189,6,0,0,0,0,0,0,3,0,1,41,0,0,0,232,20,1,0,0,0,0,0,0,0,0,0,40,23,0,0,0,0,0,0,6,5,0,0,0,0,0,0,3,0,1,43,0,0,0,13,22,1,0,0,0,0,0,0,0,0,0,0,1,2,1,107,7,5,0,0,0,1,2,1,128,0,5,0,0,0,1,2,1,108,7,5,0,0,0,1,2,1,105,7,5,0,0,0,1,2,1,127,0,5,0,0,0,1,2,1,98,7,5,0,0,0,1,2,1,97,7,5,0,0,0,1,2,1,244,6,5,0,0,0,1,2,1,242,6,5,0,0,0,1,2,1,243,6,5,0,0,0,1,2,1,240,6,5,0,0,0,1,2,1,255,6,5,0,0,0,1,2,1,253,6,5,0,0,0,1,2,1,1,7,5,0,0,0,1,2,1,121,0,5,0,0,0,1,2,1,180,6,5,0,0,0,1,2,1,238,6,5,0,0,0,1,2,1,183,6,5,0,0,0,1,2,1,176,6,5,0,0,0,1,2,1,174,6,5,0,0,0,1,2,1,137,6,5,0,0,0,1,2,1,177,6,5,0,0,0,1,2,1,182,6,5,0,0,0,1,2,1,245,6,5,0,0,0,1,2,1,0,7,5,0,0,0,1,2,1,2,7,5,0,0,0,1,2,1,41,7,9,0,0,0,1,2,1,42,7,9,0,0,0,1,2,1,43,7,9,0,0,0,1,2,1,37,7,9,0,0,0,1,2,2,38,7,9,4,0,0,1,2,1,36,7,9,0,0,0,1,2,3,67,7,5,4,9,0,1,2,2,181,6,5,4,0,0,1,2,2,179,6,5,4,0,0,1,2,2,191,6,5,4,0,0,1,2,1,190,6,5,0,0,0,1,2,1,178,6,5,0,0,0,1,2,1,175,6,5,0,0,0,1,2,1,135,6,5,0,0,0,1,2,2,192,6,4,5,0,0,1,2,2,189,6,4,5,0,0,1,2,1,188,7,4,0,0,0,1,2,1,189,7,4,0,0,0,1,2,1,190,7,4,0,0,0,1,2,1,192,7,4,0,0,0,1,2,1,194,7,4,0,0,0,1,2,1,196,7,4,0,0,0,1,2,1,195,7,4,0,0,0,1,2,1,69,7,4,0,0,0,1,2,1,251,6,4,0,0,0,1,2,1,250,6,4,0,0,0,1,2,1,188,6,4,0,0,0,1,2,2,81,0,4,5,0,0,1,2,2,80,0,4,5,0,0,1,2,2,82,0,4,5,0,0,1,2,1,68,7,4,0,0,0,1,2,1,46,7,9,0,0,0,1,2,1,252,6,4,0,0,0,1,2,1,201,7,4,0,0,0,1,2,1,131,6,4,0,0,0,1,2,1,124,6,4,0,0,0,1,2,1,118,6,4,0,0,0,1,2,1,80,6,4,0,0,0,1,2,1,116,6,4,0,0,0,1,2,1,119,6,4,0,0,0,1,2,1,122,6,4,0,0,0,1,2,1,90,0,4,0,0,0,1,2,1,254,6,4,0,0,0,1,2,2,249,6,9,4,0,0,1,2,1,115,6,4,0,0,0,1,2,1,193,7,4,0,0,0,1,2,1,133,6,4,0,0,0,1,2,1,132,6,4,0,0,0,1,2,1,167,7,4,0,0,0,1,2,1,166,7,4,0,0,0,1,2,1,168,7,4,0,0,0,1,2,1,165,7,4,0,0,0,1,2,1,186,7,4,0,0,0,1,2,1,185,7,4,0,0,0,1,2,1,191,7,4,0,0,0,1,2,1,69,0,4,0,0,0,1,2,1,134,6,4,0,0,0,1,2,1,121,6,4,0,0,0,1,2,1,120,6,4,0,0,0,1,2,1,76,6,4,0,0,0,1,2,1,79,6,4,0,0,0,1,2,1,77,6,4,0,0,0,1,2,1,205,6,4,0,0,0,1,2,1,65,0,4,0,0,0,1,2,1,112,6,4,0,0,0,1,2,1,114,6,4,0,0,0,1,2,1,109,6,4,0,0,0,1,2,1,110,6,4,0,0,0,1,2,1,91,6,4,0,0,0,1,2,1,108,6,4,0,0,0,1,2,1,82,6,4,0,0,0,1,2,1,51,0,4,0,0,0,1,2,1,50,0,4,0,0,0,1,2,1,78,6,4,0,0,0,1,2,1,85,6,4,0,0,0,1,2,1,52,0,4,0,0,0,1,2,1,84,6,4,0,0,0,1,2,1,86,6,4,0,0,0,1,2,1,95,6,4,0,0,0,1,2,1,96,6,4,0,0,0,1,2,1,94,6,4,0,0,0,1,2,1,97,6,4,0,0,0,1,2,1,206,6,4,0,0,0,1,2,1,204,6,4,0,0,0,1,2,1,107,6,4,0,0,0,1,2,1,106,6,4,0,0,0,1,2,1,233,6,4,0,0,0,1,2,1,215,6,4,0,0,0,1,2,1,234,6,4,0,0,0,1,2,1,214,6,4,0,0,0,1,2,1,213,6,4,0,0,0,1,2,1,105,6,4,0,0,0,1,2,1,103,6,4,0,0,0,1,2,1,104,6,4,0,0,0,1,2,1,62,0,4,0,0,0,1,2,1,88,6,4,0,0,0,1,2,1,87,6,4,0,0,0,1,2,1,89,6,4,0,0,0,1,2,1,99,6,4,0,0,0,1,2,1,101,6,4,0,0,0,1,2,1,100,6,4,0,0,0,1,2,1,102,6,4,0,0,0,1,2,1,5,7,4,0,0,0,1,2,1,216,6,4,0,0,0,1,2,1,85,0,4,0,0,0,1,2,1,89,0,4,0,0,0,1,2,1,220,6,4,0,0,0,1,2,1,232,6,4,0,0,0,1,2,1,91,0,4,0,0,0,1,2,1,90,6,4,0,0,0,1,2,1,125,6,4,0,0,0,1,2,1,6,7,4,0,0,0,1,2,1,8,7,4,0,0,0,1,2,1,92,0,4,0,0,0,1,2,1,217,6,4,0,0,0,1,2,1,218,6,4,0,0,0,1,2,2,231,6,4,10,0,0,1,2,1,83,6,4,0,0,0,1,2,1,81,6,4,0,0,0,1,2,1,92,6,4,0,0,0,1,2,1,68,0,4,0,0,0,1,2,1,127,6,4,0,0,0,1,2,1,237,6,4,0,0,0,1,2,1,3,7,4,0,0,0,1,2,1,4,7,4,0,0,0,1,2,1,7,7,4,0,0,0,1,2,1,10,7,4,0,0,0,1,2,1,246,6,4,0,0,0,1,2,2,248,6,4,9,0,0,1,2,1,11,7,4,0,0,0,1,2,1,13,7,4,0,0,0,1,2,1,67,0,4,0,0,0,1,2,1,9,7,4,0,0,0,1,2,1,12,7,4,0,0,0,1,2,1,40,8,4,0,0,0,1,2,1,48,7,4,0,0,0,1,2,3,49,7,4,9,2,0,1,2,3,106,0,9,2,4,0,1,2,2,111,0,9,4,0,0,1,2,3,108,0,9,2,1,0,1,2,3,109,0,9,2,1,0,1,2,3,107,0,9,1,2,0,1,2,3,110,0,9,1,2,0,1,2,3,45,7,9,4,1,0,1,2,1,44,7,9,0,0,0,1,2,1,58,7,9,0,0,0,1,2,3,35,7,1,2,9,0,1,2,3,115,0,4,2,3,0,1,2,1,116,0,4,0,0,0,1,2,1,113,0,4,0,0,0,1,2,1,88,0,4,0,0,0,1,2,1,93,0,4,0,0,0,1,2,1,95,0,4,0,0,0,1,2,1,47,7,4,0,0,0,1,2,1,112,0,4,0,0,0,1,2,1,16,8,4,0,0,0,1,2,1,173,0,4,0,0,0,1,2,1,174,0,4,0,0,0,1,2,1,17,8,4,0,0,0,1,2,1,23,8,4,0,0,0,1,2,1,22,8,4,0,0,0,1,2,1,21,8,4,0,0,0,1,2,3,119,0,4,2,11,0,1,2,3,52,7,4,0,2,0,1,2,2,51,7,4,10,0,0,1,2,1,230,6,4,0,0,0,1,2,1,20,8,4,0,0,0,1,2,1,18,8,4,0,0,0,1,2,1,19,8,4,0,0,0,1,2,1,94,0,4,0,0,0,1,2,1,219,6,4,0,0,0,1,2,1,228,6,4,0,0,0,1,2,1,229,6,4,0,0,0,1,2,3,22,7,4,0,2,0,1,2,3,24,7,4,0,2,0,1,2,3,26,7,4,0,2,0,1,2,3,97,0,4,0,3,0,1,2,3,96,0,4,0,2,0,1,2,3,28,7,4,0,3,0,1,2,3,63,7,0,2,4,0,1,2,3,64,7,0,3,2,0,1,2,3,27,7,4,0,2,0,1,2,3,25,7,4,0,2,0,1,2,3,20,7,4,0,2,0,1,2,1,21,7,4,0,0,0,1,2,1,17,7,4,0,0,0,1,2,2,118,0,10,4,0,0,1,2,2,227,6,4,10,0,0,1,2,2,224,6,10,4,0,0,1,2,1,222,6,4,0,0,0,1,2,1,14,7,4,0,0,0,1,2,1,18,7,4,0,0,0,1,2,2,62,7,0,4,0,0,1,2,1,23,7,4,0,0,0,1,2,2,15,7,4,0,0,0,1,2,2,16,7,4,0,0,0,1,2,2,118,7,4,0,0,0,1,2,1,120,7,4,0,0,0,1,2,1,157,7,4,0,0,0,1,2,1,124,7,4,0,0,0,1,2,1,134,0,4,0,0,0,1,2,1,129,7,4,0,0,0,1,2,1,135,0,4,0,0,0,1,2,1,127,7,4,0,0,0,1,2,1,128,7,4,0,0,0,1,2,1,126,7,4,0,0,0,1,2,1,158,7,4,0,0,0,1,2,1,122,7,4,0,0,0,1,2,1,121,7,4,0,0,0,1,2,1,119,7,4,0,0,0,1,2,1,19,7,4,0,0,0,1,2,1,53,7,4,0,0,0,1,2,2,117,0,10,4,0,0,1,2,1,159,7,0,0,0,0,1,2,1,136,0,4,0,0,0,1,2,1,160,7,0,0,0,0,1,2,1,125,7,4,0,0,0,1,2,1,123,7,4,0,0,0,1,2,1,139,0,4,0,0,0,1,2,1,140,0,4,0,0,0,1,2,1,141,0,4,0,0,0,1,2,1,138,0,4,0,0,0,1,2,1,133,7,4,0,0,0,1,2,1,137,0,4,0,0,0,1,2,1,131,7,4,0,0,0,1,2,1,132,7,4,0,0,0,1,2,1,130,7,4,0,0,0,1,2,1,149,7,4,0,0,0,1,2,1,148,7,4,0,0,0,1,2,1,147,7,4,0,0,0,1,2,1,167,0,4,0,0,0,1,2,1,164,0,4,0,0,0,1,2,2,85,7,10,4,0,0,1,2,2,225,6,10,4,0,0,1,2,1,226,6,4,0,0,0,1,2,2,86,7,4,10,0,0,1,2,1,123,0,4,0,0,0,1,2,1,124,0,4,0,0,0,1,2,1,133,0,4,0,0,0,1,2,1,145,7,4,0,0,0,1,2,1,142,7,4,0,0,0,1,2,1,235,7,4,0,0,0,1,2,1,229,7,4,0,0,0,1,2,1,234,7,4,0,0,0,1,2,1,230,7,4,0,0,0,1,2,1,233,7,4,0,0,0,1,2,1,231,7,4,0,0,0,1,2,1,114,7,4,0,0,0,1,2,2,89,7,10,4,0,0,1,2,1,90,7,4,0,0,0,1,2,1,171,0,4,0,0,0,1,2,1,232,7,4,0,0,0,1,2,1,112,7,4,0,0,0,1,2,1,131,0,4,0,0,0,1,2,1,88,7,4,0,0,0,1,2,1,87,7,4,0,0,0,1,2,1,80,7,4,0,0,0,1,2,1,122,0,4,0,0,0,1,2,1,79,7,4,0,0,0,1,2,1,77,7,4,0,0,0,1,2,1,129,0,4,0,0,0,1,2,1,111,7,4,0,0,0,1,2,1,109,7,4,0,0,0,1,2,1,94,7,4,0,0,0,1,2,1,48,0,4,0,0,0,1,2,1,67,6,4,0,0,0,1,2,1,47,0,4,0,0,0,1,2,1,33,6,4,0,0,0,1,2,1,110,7,4,0,0,0,1,2,1,81,7,4,0,0,0,1,2,1,130,0,4,0,0,0,1,2,1,44,6,4,0,0,0,1,2,1,45,6,4,0,0,0,1,2,1,75,7,4,0,0,0,1,2,1,76,7,4,0,0,0,1,2,1,68,6,4,0,0,0,1,2,1,71,6,4,0,0,0,1,2,1,223,6,4,0,0,0,1,2,1,84,7,4,0,0,0,1,2,1,125,0,4,0,0,0,1,2,1,92,7,4,0,0,0,1,2,1,78,7,4,0,0,0,1,2,1,47,6,4,0,0,0,1,2,1,42,6,4,0,0,0,1,2,1,43,6,4,0,0,0,1,2,1,87,0,4,0,0,0,1,2,1,83,7,4,0,0,0,1,2,1,221,6,4,0,0,0,1,2,1,86,0,4,0,0,0,1,2,1,82,7,4,0,0,0,1,2,1,74,7,4,0,0,0,1,2,1,211,6,4,0,0,0,1,2,1,91,7,4,0,0,0,1,2,1,73,7,4,0,0,0,1,2,1,210,6,4,0,0,0,1,2,1,49,6,4,0,0,0,1,2,1,48,6,4,0,0,0,1,2,1,46,6,4,0,0,0,1,2,1,40,6,4,0,0,0,1,2,1,41,6,4,0,0,0,1,2,1,31,6,4,0,0,0,1,2,1,29,6,4,0,0,0,1,2,1,32,6,4,0,0,0,1,2,1,30,6,4,0,0,0,1,2,1,38,0,4,0,0,0,1,2,1,37,0,4,0,0,0,1,2,1,36,6,4,0,0,0,1,2,1,34,0,4,0,0,0,1,2,1,36,0,4,0,0,0,1,2,1,33,0,4,0,0,0,1,2,1,39,0,4,0,0,0,1,2,1,37,6,4,0,0,0,1,2,1,35,6,4,0,0,0,1,2,1,41,0,4,0,0,0,1,2,1,40,0,4,0,0,0,1,2,1,28,6,4,0,0,0,1,2,1,35,0,4,0,0,0,1,2,1,43,0,4,0,0,0,1,2,1,42,0,4,0,0,0,1,2,1,52,6,4,0,0,0,1,2,1,51,6,4,0,0,0,1,2,1,56,6,4,0,0,0,1,2,1,55,6,4,0,0,0,1,2,1,44,0,4,0,0,0,1,2,1,25,6,4,0,0,0,1,2,1,50,6,4,0,0,0,1,2,1,54,6,4,0,0,0,1,2,1,45,0,4,0,0,0,1,2,1,53,6,4,0,0,0,1,2,1,46,0,4,0,0,0,1,2,1,26,6,4,0,0,0,1,2,1,27,6,4,0,0,0,1,2,1,32,0,4,0,0,0,1,2,1,30,0,4,0,0,0,1,2,1,19,6,4,0,0,0,1,2,1,63,6,4,0,0,0,1,2,1,62,6,4,0,0,0,1,2,1,20,6,4,0,0,0,1,2,1,18,6,4,0,0,0,1,2,1,21,6,4,0,0,0,1,2,1,31,0,4,0,0,0,1,2,1,34,6,4,0,0,0,1,2,1,23,6,4,0,0,0,1,2,1,24,6,4,0,0,0,1,2,1,22,6,4,0,0,0,1,2,1,66,6,4,0,0,0,1,2,1,61,6,4,0,0,0,1,2,1,74,6,4,0,0,0,1,2,1,72,6,4,0,0,0,1,2,1,64,6,4,0,0,0,1,2,1,126,0,4,0,0,0,1,2,1,65,6,4,0,0,0,1,2,1,100,7,4,0,0,0,1,2,1,69,6,4,0,0,0,1,2,1,57,6,4,0,0,0,1,2,1,59,6,4,0,0,0,1,2,1,58,6,4,0,0,0,1,2,1,60,6,4,0,0,0,1,2,1,70,6,4,0,0,0,1,2,1,99,7,4,0,0,0,1,2,1,132,0,4,0,0,0,1,2,1,116,7,4,0,0,0,1,2,2,101,7,4,8,0,0,1,2,2,102,7,4,8,0,0,1,2,1,106,7,4,0,0,0,1,2,1,163,7,4,0,0,0,1,2,2,73,0,4,5,0,0,1,2,3,162,7,5,4,8,0,1,2,2,146,6,5,4,0,0,1,2,1,170,0,5,0,0,0,1,2,1,144,6,5,0,0,0,1,2,2,146,7,4,8,0,0,1,2,2,166,0,4,8,0,0,1,2,2,147,0,4,8,0,0,1,2,2,150,0,8,4,0,0,1,2,2,146,0,4,8,0,0,1,2,2,136,7,4,8,0,0,1,2,2,145,0,4,8,0,0,1,2,1,143,7,4,0,0,0,1,2,1,144,7,4,0,0,0,1,2,1,115,7,4,0,0,0,1,2,1,117,7,4,0,0,0,1,2,1,202,7,4,0,0,0,1,2,1,113,7,4,0,0,0,1,2,1,165,0,4,0,0,0,1,2,2,144,0,4,8,0,0,1,2,2,135,7,4,8,0,0,1,2,2,134,7,4,8,0,0,1,2,1,143,0,4,0,0,0,1,2,1,142,0,4,0,0,0,1,2,1,227,7,4,0,0,0,1,2,1,228,7,4,0,0,0,1,2,2,137,7,4,8,0,0,1,2,2,148,0,4,8,0,0,1,2,2,149,0,4,8,0,0,1,2,1,150,7,4,0,0,0,1,2,2,151,7,0,4,0,0,1,2,1,161,7,0,0,0,0,1,2,1,152,0,8,0,0,0,1,2,1,151,0,8,0,0,0,1,2,1,153,0,8,0,0,0,1,2,2,162,0,8,4,0,0,1,2,1,141,7,8,0,0,0,1,2,1,154,0,8,0,0,0,1,2,1,160,0,8,0,0,0,1,2,2,163,0,8,4,0,0,1,2,1,159,0,8,0,0,0,1,2,2,156,0,8,4,0,0,1,2,1,139,7,8,0,0,0,1,2,1,157,0,8,0,0,0,1,2,2,161,0,8,4,0,0,1,2,2,158,0,8,4,0,0,1,2,1,152,7,8,0,0,0,1,2,1,154,7,8,0,0,0,1,2,1,156,7,4,0,0,0,1,2,1,155,7,5,0,0,0,1,2,1,169,0,5,0,0,0,1,2,1,153,7,8,0,0,0,1,2,1,168,0,8,0,0,0,1,2,1,140,7,8,0,0,0,1,2,1,155,0,8,0,0,0,1,2,1,138,7,8,0,0,0,1,2,1,136,6,5,0,0,0,1,2,1,139,6,5,0,0,0,1,2,1,147,6,5,0,0,0,1,2,1,95,7,5,0,0,0,1,2,1,141,6,5,0,0,0,1,2,1,145,6,5,0,0,0,1,2,2,143,6,5,4,0,0,1,2,2,158,6,5,4,0,0,1,2,1,157,6,5,0,0,0,1,2,1,142,6,5,0,0,0,1,2,1,138,6,5,0,0,0,1,2,2,159,6,4,5,0,0,1,2,2,156,6,4,5,0,0,1,2,2,72,0,4,5,0,0,1,2,1,103,7,4,0,0,0,1,2,1,154,6,4,0,0,0,1,2,1,104,7,4,0,0,0,1,2,1,152,6,4,0,0,0,1,2,1,70,0,4,0,0,0,1,2,2,71,0,4,5,0,0,1,2,2,160,6,4,5,0,0,1,2,1,184,7,4,0,0,0,1,2,1,178,7,4,0,0,0,1,2,1,182,7,4,0,0,0,1,2,1,180,7,4,0,0,0,1,2,1,93,7,4,0,0,0,1,2,1,153,6,4,0,0,0,1,2,1,151,6,4,0,0,0,1,2,1,149,6,4,0,0,0,1,2,1,148,6,4,0,0,0,1,2,1,150,6,4,0,0,0,1,2,1,184,6,4,0,0,0,1,2,1,185,6,4,0,0,0,1,2,1,186,6,4,0,0,0,1,2,1,155,6,4,0,0,0,1,2,1,236,6,4,0,0,0,1,2,1,75,6,4,0,0,0,1,2,1,73,6,4,0,0,0,1,2,1,183,7,4,0,0,0,1,2,1,177,7,4,0,0,0,1,2,1,176,7,4,0,0,0,1,2,1,179,7,4,0,0,0,1,2,1,181,7,4,0,0,0,1,2,1,170,7,4,0,0,0,1,2,1,212,6,4,0,0,0,1,2,1,209,6,4,0,0,0,1,2,1,207,6,4,0,0,0,1,2,1,208,6,4,0,0,0,1,2,1,164,7,4,0,0,0,1,2,1,171,7,4,0,0,0,1,2,1,172,7,4,0,0,0,1,2,1,174,7,4,0,0,0,1,2,1,175,7,4,0,0,0,1,2,1,49,0,4,0,0,0,1,2,1,38,6,4,0,0,0,1,2,1,173,7,4,0,0,0,1,2,1,71,7,4,0,0,0,1,2,1,72,7,4,0,0,0,1,2,1,70,7,4,0,0,0,1,2,1,39,6,4,0,0,0,1,2,3,35,5,0,4,3,0,1,2,2,18,5,0,2,0,0,1,2,3,17,5,0,3,2,0,1,2,1,6,5,0,0,0,0,1,2,2,7,5,0,1,0,0,1,2,1,8,5,0,0,0,0,1,2,2,13,5,0,1,0,0,1,2,1,15,5,0,0,0,0,1,2,1,14,5,0,0,0,0,1,2,1,37,5,4,0,0,0,1,2,1,36,5,4,0,0,0,1,2,1,10,5,0,0,0,0,1,2,1,12,5,0,0,0,0,1,2,2,29,5,0,2,0,0,1,2,2,30,5,0,2,0,0,1,2,2,16,5,0,2,0,0,1,2,3,19,5,0,3,2,0,1,2,3,20,5,0,3,2,0,1,2,3,21,5,0,2,3,0,1,2,3,22,5,0,2,4,0,1,2,3,32,5,1,0,2,0,1,2,3,11,5,0,2,1,0,1,2,1,39,5,5,0,0,0,1,2,1,38,5,5,0,0,0,1,2,1,33,5,5,0,0,0,1,2,1,34,5,5,0,0,0,1,2,1,174,5,5,0,0,0,1,2,1,151,5,0,0,0,0,1,2,1,178,5,5,0,0,0,1,2,1,157,5,0,0,0,0,1,2,1,179,5,5,0,0,0,1,2,1,177,5,4,0,0,0,1,2,1,152,5,0,0,0,0,1,2,1,176,5,4,0,0,0,1,2,2,175,5,0,4,0,0,1,2,1,156,5,0,0,0,0,1,2,3,154,5,0,1,6,0,1,2,3,150,5,0,1,6,0,1,2,2,9,5,0,1,0,0,1,2,1,158,5,0,0,0,0,1,2,3,159,5,4,0,6,0,1,2,1,160,5,0,0,0,0,1,2,1,155,5,0,0,0,0,1,2,3,153,5,0,6,1,0,1,2,3,173,5,1,0,6,0,1,2,3,188,5,1,6,7,0,1,2,2,187,5,1,6,0,0,1,2,2,180,5,1,6,0,0,1,2,1,41,5,1,0,0,0,1,2,1,40,5,1,0,0,0,1,2,2,50,5,1,2,0,0,1,2,3,171,5,0,6,4,0,1,2,2,170,5,0,6,0,0,1,2,1,23,5,4,0,0,0,1,2,2,25,5,4,0,0,0,1,2,2,28,5,0,4,0,0,1,2,2,24,5,4,0,0,0,1,2,3,26,5,0,4,1,0,1,2,2,27,5,4,0,0,0,1,2,3,0,0,0,4,1,0,1,2,3,167,5,4,0,1,0,1,2,2,166,5,4,0,0,0,1,2,2,168,5,4,0,0,0,1,2,1,169,5,4,0,0,0,1,2,1,164,5,4,0,0,0,1,2,3,165,5,4,0,6,0,1,2,3,163,5,4,0,6,0,1,2,1,162,5,0,0,0,0,1,2,1,161,5,0,0,0,0,1,2,1,52,1,5,0,0,0,1,2,1,53,1,5,0,0,0,1,2,1,54,1,5,0,0,0,1,2,1,51,1,5,0,0,0,1,2,1,48,1,5,0,0,0,1,2,1,49,1,5,0,0,0,1,2,1,47,1,5,0,0,0,1,2,1,56,1,5,0,0,0,1,2,1,135,13,5,0,0,0,1,2,1,43,1,5,0,0,0,1,2,1,44,1,5,0,0,0,1,2,1,128,13,5,0,0,0,1,2,1,36,1,5,0,0,0,1,2,1,40,1,5,0,0,0,1,2,1,37,1,5,0,0,0,1,2,1,31,1,5,0,0,0,1,2,1,33,1,5,0,0,0,1,2,1,32,1,5,0,0,0,1,2,1,35,1,5,0,0,0,1,2,1,38,1,5,0,0,0,1,2,1,125,13,5,0,0,0,1,2,1,127,13,5,0,0,0,1,2,1,129,13,5,0,0,0,1,2,1,39,1,5,0,0,0,1,2,1,130,13,5,0,0,0,1,2,1,133,13,5,0,0,0,1,2,1,134,13,5,0,0,0,1,2,1,55,1,5,0,0,0,1,2,1,132,13,5,0,0,0,1,2,1,50,1,5,0,0,0,1,2,1,46,1,5,0,0,0,1,2,1,45,1,5,0,0,0,1,2,1,28,1,5,0,0,0,1,2,1,29,1,5,0,0,0,1,2,1,34,1,5,0,0,0,1,2,1,126,13,5,0,0,0,1,2,1,136,13,5,0,0,0,1,2,1,137,13,5,0,0,0,1,2,1,58,1,5,0,0,0,1,2,1,57,1,5,0,0,0,1,2,1,131,13,5,0,0,0,1,2,1,30,1,5,0,0,0,1,2,1,124,13,5,0,0,0,1,2,1,42,1,5,0,0,0,1,2,1,41,1,5,0,0,0,1,2,1,76,0,5,0,0,0,1,2,1,74,0,5,0,0,0,1,2,1,77,0,5,0,0,0,1,2,1,78,0,5,0,0,0,1,2,2,173,6,0,4,0,0,1,2,2,172,6,4,8,0,0,1,2,2,168,6,4,5,0,0,1,2,1,75,0,4,0,0,0,1,2,2,199,6,4,5,0,0,1,2,1,84,0,5,0,0,0,1,2,2,203,6,4,9,0,0,1,2,1,83,0,5,0,0,0,1,2,1,195,6,5,0,0,0,1,2,1,194,6,5,0,0,0,1,2,1,163,6,5,0,0,0,1,2,1,161,6,5,0,0,0,1,2,1,162,6,5,0,0,0,1,2,1,167,6,5,0,0,0,1,2,2,169,6,5,4,0,0,1,2,2,170,6,4,5,0,0,1,2,2,171,6,4,5,0,0,1,2,1,164,6,4,0,0,0,1,2,1,165,6,4,0,0,0,1,2,1,166,6,4,0,0,0,1,2,1,197,6,4,0,0,0,1,2,1,196,6,4,0,0,0,1,2,2,202,6,4,5,0,0,1,2,2,201,6,4,5,0,0,1,2,2,200,6,5,4,0,0,1,2,1,198,6,5,0,0,0,1,2,1,140,6,5,0,0,0,1,2,1,239,6,5,0,0,0,1,2,1,96,7,5,0,0,0,1,2,1,241,6,5,0,0,0,1,2,1,7,8,4,0,0,0,1,2,1,8,8,4,0,0,0,1,2,1,172,0,4,0,0,0,1,2,1,30,8,4,0,0,0,1,2,1,11,8,4,0,0,0,1,2,1,31,8,4,0,0,0,1,2,1,28,8,4,0,0,0,1,2,1,27,8,4,0,0,0,1,2,1,29,8,4,0,0,0,1,2,1,36,8,4,0,0,0,1,2,1,37,8,4,0,0,0,1,2,1,35,8,4,0,0,0,1,2,1,25,8,4,0,0,0,1,2,1,9,8,4,0,0,0,1,2,1,26,8,4,0,0,0,1,2,1,12,8,4,0,0,0,1,2,1,13,8,4,0,0,0,1,2,1,14,8,4,0,0,0,1,2,1,15,8,4,0,0,0,1,2,1,24,8,4,0,0,0,1,2,1,41,8,4,0,0,0,1,2,1,255,7,4,0,0,0,1,2,1,0,8,4,0,0,0,1,2,1,2,8,4,0,0,0,1,2,1,4,8,4,0,0,0,1,2,1,6,8,4,0,0,0,1,2,1,5,8,4,0,0,0,1,2,1,3,8,4,0,0,0,1,2,1,1,8,4,0,0,0,1,2,1,254,7,4,0,0,0,1,2,1,252,7,4,0,0,0,1,2,1,33,8,4,0,0,0,1,2,1,34,8,4,0,0,0,1,2,1,10,8,4,0,0,0,1,2,1,250,7,4,0,0,0,1,2,1,251,7,4,0,0,0,1,2,1,253,7,4,0,0,0,1,2,1,32,8,4,0,0,0,1,2,1,220,7,4,0,0,0,1,2,1,211,7,4,0,0,0,1,2,1,213,7,4,0,0,0,1,2,1,216,7,4,0,0,0,1,2,1,249,7,4,0,0,0,1,2,1,246,7,4,0,0,0,1,2,1,247,7,4,0,0,0,1,2,1,225,7,4,0,0,0,1,2,1,238,7,4,0,0,0,1,2,1,219,7,4,0,0,0,1,2,1,209,7,4,0,0,0,1,2,1,208,7,4,0,0,0,1,2,1,245,7,4,0,0,0,1,2,1,223,7,4,0,0,0,1,2,1,214,7,4,0,0,0,1,2,1,215,7,4,0,0,0,1,2,1,212,7,4,0,0,0,1,2,1,210,7,4,0,0,0,1,2,1,207,7,4,0,0,0,1,2,1,205,7,4,0,0,0,1,2,1,244,7,4,0,0,0,1,2,1,243,7,4,0,0,0,1,2,1,222,7,4,0,0,0,1,2,1,221,7,4,0,0,0,1,2,1,226,7,4,0,0,0,1,2,1,204,7,4,0,0,0,1,2,1,203,7,4,0,0,0,1,2,1,237,7,4,0,0,0,1,2,1,224,7,4,0,0,0,1,2,1,241,7,4,0,0,0,1,2,1,239,7,4,0,0,0,1,2,1,242,7,4,0,0,0,1,2,1,248,7,4,0,0,0,1,2,1,218,7,4,0,0,0,1,2,1,217,7,4,0,0,0,1,2,1,240,7,4,0,0,0,1,2,1,236,7,4,0,0,0,1,2,1,206,7,4,0,0,0,1,2,1,130,6,4,0,0,0,1,2,1,123,6,4,0,0,0,1,2,1,247,6,4,0,0,0,1,2,1,117,6,4,0,0,0,1,2,1,128,6,4,0,0,0,1,2,1,129,6,4,0,0,0,1,2,1,126,6,4,0,0,0,1,2,3,29,7,2,3,0,0,1,2,1,54,7,4,0,0,0,1,2,3,55,7,0,4,3,0,1,2,3,66,7,0,3,2,0,1,2,3,120,0,1,2,3,0,1,2,3,65,7,0,3,2,0,1,2,3,101,0,11,2,3,0,1,2,3,98,0,4,0,11,0,1,2,3,100,0,4,2,11,0,1,2,3,99,0,4,11,2,0,1,2,3,30,7,2,3,1,0,1,2,3,105,0,2,1,3,0,1,2,3,114,0,4,2,1,0,1,2,3,104,0,1,2,3,0,1,2,3,103,0,2,11,1,0,1,2,3,102,0,2,11,4,0,1,2,3,31,7,9,3,1,0,1,2,2,32,7,2,3,0,0,1,2,3,33,7,9,2,3,0,1,2,2,34,7,9,3,0,0,1,2,3,50,7,2,9,3,0,1,2,1,61,7,4,0,0,0,1,2,1,60,7,5,0,0,0,1,2,1,59,7,5,0,0,0,1,2,1,57,7,9,0,0,0,1,2,1,56,7,9,0,0,0,1,2,1,40,7,9,0,0,0,1,2,1,39,7,9,0,0,0,1,2,1,197,7,4,0,0,0,1,2,1,198,7,4,0,0,0,1,2,1,199,7,4,0,0,0,1,2,1,200,7,4,0,0,0,1,2,1,235,6,4,0,0,0,1,2,1,187,7,4,0,0,0,1,2,1,169,7,4,0,0,0,1,2,1,187,6,4,0,0,0,1,2,1,79,0,4,0,0,0,1,2,2,193,6,4,5,0,0,1,2,1,59,0,4,0,0,0,1,2,1,53,0,4,0,0,0,1,2,1,55,0,4,0,0,0,1,2,1,56,0,4,0,0,0,1,2,1,54,0,4,0,0,0,1,2,1,57,0,4,0,0,0,1,2,1,60,0,4,0,0,0,1,2,1,93,6,4,0,0,0,1,2,1,61,0,4,0,0,0,1,2,1,98,6,4,0,0,0,1,2,1,66,0,4,0,0,0,1,2,1,111,6,4,0,0,0,1,2,1,113,6,4,0,0,0,1,2,1,58,0,4,0,0,0,1,2,1,63,0,4,0,0,0,1,2,1,64,0,4,0,0,0,1,2,1,38,8,4,0,0,0,1,2,1,39,8,4,0,0,0,1,2,3,171,5,0,6,4,0,1,2,3,159,5,4,0,6,0,1,2,3,163,5,4,0,6,0,1,2,3,183,5,6,0,3,0,1,2,2,170,5,0,6,0,0,1,2,2,196,5,9,6,0,0,1,2,3,202,5,6,3,9,0,1,2,3,24,0,6,9,3,0,1,2,3,190,5,6,3,9,0,1,2,3,17,0,6,0,9,0,1,2,3,182,5,6,3,0,0,1,2,3,153,5,0,6,3,0,1,2,3,172,5,0,4,6,0,1,2,3,184,5,4,6,0,0,1,2,3,185,5,6,0,9,0,1,2,3,19,0,6,9,0,0,1,2,3,195,5,6,3,9,0,1,2,2,197,5,9,6,0,0,1,2,3,165,5,4,0,6,0,1,2,3,14,0,4,6,0,0,1,2,2,18,0,6,9,0,0,1,2,2,222,5,6,9,0,0,1,2,1,212,5,9,0,0,0,1,2,1,199,5,9,0,0,0,1,2,1,198,5,9,0,0,0,1,2,2,203,5,9,6,0,0,1,2,1,213,5,9,0,0,0,1,2,2,220,5,6,9,0,0,1,2,1,214,5,9,0,0,0,1,2,1,215,5,9,0,0,0,1,2,3,188,5,3,6,9,0,1,2,3,173,5,3,0,6,0,1,2,3,189,5,3,6,9,0,1,2,3,205,5,6,3,9,0,1,2,3,204,5,9,3,6,0,1,2,1,206,5,9,0,0,0,1,2,1,200,5,9,0,0,0,1,2,1,201,5,9,0,0,0,1,2,1,225,5,9,0,0,0,1,2,1,25,0,9,0,0,0,1,2,1,227,5,9,0,0,0,1,2,1,207,5,9,0,0,0,1,2,3,1,6,9,3,6,0,1,2,3,2,6,3,6,9,0,1,2,3,254,5,3,6,9,0,1,2,2,191,5,3,6,0,0,1,2,2,0,6,3,6,0,0,1,2,2,181,5,3,6,0,0,1,2,2,192,5,3,6,0,0,1,2,2,253,5,3,6,0,0,1,2,2,187,5,3,6,0,0,1,2,2,180,5,3,6,0,0,1,2,1,41,5,3,0,0,0,1,2,2,43,5,3,1,0,0,1,2,2,42,5,3,1,0,0,1,2,1,92,5,3,0,0,0,1,2,2,223,5,3,6,0,0,1,2,2,255,5,3,6,0,0,1,2,2,251,5,3,8,0,0,1,2,3,252,5,3,6,9,0,1,2,2,129,5,3,1,0,0,1,2,1,91,5,3,0,0,0,1,2,2,90,5,3,1,0,0,1,2,2,224,5,3,6,0,0,1,2,2,241,5,3,8,0,0,1,2,3,250,5,3,8,9,0,1,2,2,3,6,9,3,0,0,1,2,2,248,5,9,3,0,0,1,2,1,247,5,9,0,0,0,1,2,2,246,5,9,3,0,0,1,2,2,245,5,9,3,0,0,1,2,3,238,5,3,9,7,0,1,2,2,249,5,3,9,0,0,1,2,3,243,5,3,8,9,0,1,2,3,239,5,3,6,9,0,1,2,3,237,5,7,3,9,0,1,2,3,240,5,3,7,8,0,1,2,2,14,6,7,3,0,0,1,2,3,8,6,7,8,3,0,1,2,3,242,5,3,8,7,0,1,2,3,113,5,3,8,7,0,1,2,2,93,5,3,1,0,0,1,2,2,128,5,3,1,0,0,1,2,3,139,5,7,3,8,0,1,2,3,10,6,7,3,9,0,1,2,2,244,5,9,3,0,0,1,2,3,236,5,7,9,3,0,1,2,3,235,5,7,9,3,0,1,2,1,11,6,7,0,0,0,1,2,1,12,6,7,0,0,0,1,2,1,15,6,7,0,0,0,1,2,1,13,6,7,0,0,0,1,2,1,144,5,7,0,0,0,1,2,2,138,5,7,8,0,0,1,2,3,115,5,3,8,7,0,1,2,2,114,5,3,8,0,0,1,2,2,116,5,3,8,0,0,1,2,1,145,5,7,0,0,0,1,2,2,16,6,7,10,0,0,1,2,3,234,5,7,3,9,0,1,2,2,119,5,5,3,0,0,1,2,2,121,5,5,3,0,0,1,2,2,122,5,3,5,0,0,1,2,2,112,5,3,1,0,0,1,2,3,111,5,3,7,8,0,1,2,1,146,5,7,0,0,0,1,2,1,147,5,7,0,0,0,1,2,1,143,5,7,0,0,0,1,2,1,141,5,7,0,0,0,1,2,1,142,5,7,0,0,0,1,2,1,108,5,7,0,0,0,1,2,1,148,5,7,0,0,0,1,2,2,106,5,7,3,0,0,1,2,3,107,5,7,5,3,0,1,2,3,109,5,7,3,5,0,1,2,3,110,5,3,5,7,0,1,2,2,118,5,5,3,0,0,1,2,1,120,5,5,0,0,0,1,2,1,74,5,5,0,0,0,1,2,2,117,5,5,3,0,0,1,2,2,123,5,3,8,0,0,1,2,2,132,5,5,3,0,0,1,2,3,130,5,5,3,1,0,1,2,3,71,5,5,3,1,0,1,2,1,73,5,5,0,0,0,1,2,2,125,5,3,1,0,0,1,2,2,124,5,3,8,0,0,1,2,2,126,5,3,1,0,0,1,2,2,54,5,3,1,0,0,1,2,2,127,5,3,1,0,0,1,2,3,52,5,3,1,5,0,1,2,3,72,5,1,3,5,0,1,2,3,131,5,3,1,5,0,1,2,2,51,5,3,1,0,0,1,2,1,67,5,5,0,0,0,1,2,1,68,5,5,0,0,0,1,2,1,66,5,5,0,0,0,1,2,1,65,5,5,0,0,0,1,2,1,70,5,5,0,0,0,1,2,2,69,5,1,3,0,0,1,2,3,53,5,1,3,5,0,1,2,3,44,5,1,3,0,0,1,2,3,11,5,0,1,3,0,1,2,3,32,5,3,0,1,0,1,2,2,50,5,3,1,0,0,1,2,2,55,5,3,1,0,0,1,2,2,29,5,0,1,0,0,1,2,2,30,5,0,1,0,0,1,2,2,45,5,0,1,0,0,1,2,1,40,5,3,0,0,0,1,2,3,21,5,0,1,2,0,1,2,2,16,5,0,1,0,0,1,2,2,89,5,1,5,0,0,1,2,1,80,5,5,0,0,0,1,2,1,82,5,5,0,0,0,1,2,1,81,5,5,0,0,0,1,2,1,64,5,5,0,0,0,1,2,1,63,5,5,0,0,0,1,2,3,9,0,1,5,3,0,1,2,3,4,0,1,0,5,0,1,2,2,47,5,1,0,0,0,1,2,1,31,5,1,0,0,0,1,2,1,23,5,4,0,0,0,1,2,2,1,0,1,4,0,0,1,2,3,6,0,1,5,0,0,1,2,2,62,5,1,3,0,0,1,2,3,3,0,1,4,3,0,1,2,2,59,5,1,5,0,0,1,2,1,58,5,1,0,0,0,1,2,1,88,5,1,0,0,0,1,2,1,84,5,1,0,0,0,1,2,1,86,5,5,0,0,0,1,2,2,11,0,1,5,0,0,1,2,2,5,0,1,5,0,0,1,2,3,46,5,1,5,0,0,1,2,1,78,5,1,0,0,0,1,2,2,57,5,1,3,0,0,1,2,1,61,5,3,0,0,0,1,2,3,193,5,3,6,0,0,1,2,3,7,0,3,0,6,0,1,2,3,56,5,3,1,0,0,1,2,2,60,5,3,1,0,0,1,2,2,8,0,1,3,0,0,1,2,2,79,5,1,2,0,0,1,2,1,85,5,5,0,0,0,1,2,1,87,5,5,0,0,0,1,2,1,83,5,5,0,0,0,1,2,1,12,0,5,0,0,0,1,2,1,94,5,5,0,0,0,1,2,2,100,5,1,5,0,0,1,2,2,97,5,1,3,0,0,1,2,1,77,5,3,0,0,0,1,2,1,10,0,3,0,0,0,1,2,1,96,5,5,0,0,0,1,2,1,95,5,5,0,0,0,1,2,1,13,0,5,0,0,0,1,2,2,101,5,5,1,0,0,1,2,2,98,5,1,7,0,0,1,2,3,99,5,7,1,3,0,1,2,3,75,5,3,7,8,0,1,2,3,76,5,3,7,8,0,1,2,1,133,5,5,0,0,0,1,2,2,134,5,5,3,0,0,1,2,3,105,5,7,5,3,0,1,2,3,102,5,5,1,3,0,1,2,3,104,5,7,1,8,0,1,2,1,135,5,7,0,0,0,1,2,1,136,5,7,0,0,0,1,2,1,137,5,7,0,0,0,1,2,1,7,6,7,0,0,0,1,2,3,208,5,3,7,8,0,1,2,2,209,5,3,6,0,0,1,2,2,194,5,3,6,0,0,1,2,2,103,5,7,3,0,0,1,2,1,140,5,7,0,0,0,1,2,1,149,5,7,0,0,0,1,2,2,6,6,7,6,0,0,1,2,3,229,5,7,6,3,0,1,2,3,26,0,6,3,7,0,1,2,2,23,0,6,3,0,0,1,2,2,20,0,6,3,0,0,1,2,1,211,5,6,0,0,0,1,2,1,21,0,6,0,0,0,1,2,1,216,5,6,0,0,0,1,2,1,210,5,6,0,0,0,1,2,1,217,5,9,0,0,0,1,2,2,226,5,9,6,0,0,1,2,2,27,0,6,9,0,0,1,2,2,29,0,9,6,0,0,1,2,2,28,0,9,6,0,0,1,2,3,228,5,6,7,9,0,1,2,3,230,5,6,9,3,0,1,2,3,232,5,7,6,8,0,1,2,2,9,6,7,3,0,0,1,2,3,231,5,7,3,9,0,1,2,2,17,6,7,10,0,0,1,2,3,233,5,7,9,3,0,1,2,2,4,6,9,6,0,0,1,2,2,5,6,9,3,0,0,1,2,3,186,5,3,0,4,0,1,2,3,15,0,4,3,0,0,1,2,3,16,0,4,6,0,0,1,2,2,22,0,6,9,0,0,1,2,1,221,5,6,0,0,0,1,2,1,218,5,9,0,0,0,1,2,1,219,5,9,0,0,0,1,2,2,168,5,4,0,0,0,1,2,3,167,5,4,0,3,0,1,2,3,0,0,0,4,3,0,1,2,3,2,0,3,0,4,0,1,2,3,48,5,3,0,1,0,1,2,2,49,5,1,3,0,0,1,2,2,25,5,4,0,0,0,1,2,3,26,5,0,4,3,0,1,2,1,110,13,4,0,0,0,1,2,1,111,13,4,0,0,0,1,2,1,112,13,4,0,0,0,1,2,1,114,13,4,0,0,0,1,2,1,121,13,4,0,0,0,1,2,1,122,13,4,0,0,0,1,2,2,117,13,4,38,0,0,1,2,2,120,13,38,4,0,0,1,2,2,118,13,4,38,0,0,1,2,2,123,13,4,38,0,0,1,2,1,113,13,4,0,0,0,1,2,2,119,13,4,38,0,0,1,2,2,103,13,4,37,0,0,1,2,2,106,13,4,37,0,0,1,2,2,104,13,4,37,0,0,1,2,1,105,13,4,0,0,0,1,2,1,109,13,4,0,0,0,1,2,1,95,13,4,0,0,0,1,2,1,98,13,4,0,0,0,1,2,1,97,13,4,0,0,0,1,2,1,99,13,4,0,0,0,1,2,1,96,13,4,0,0,0,1,2,1,107,13,4,0,0,0,1,2,1,108,13,4,0,0,0,1,2,1,101,13,4,0,0,0,1,2,1,100,13,4,0,0,0,1,2,1,27,1,4,0,0,0,1,2,1,102,13,4,0,0,0,1,2,1,115,13,4,0,0,0,1,2,1,116,13,4,0,0,0,1,2,2,184,10,39,40,0,0,1,2,2,77,11,39,40,0,0,1,2,2,79,11,39,40,0,0,1,2,2,78,11,39,40,0,0,1,2,2,73,11,39,40,0,0,1,2,2,72,11,39,40,0,0,1,2,1,176,10,18,0,0,0,1,2,2,179,10,17,18,0,0,1,2,2,180,10,39,40,0,0,1,2,2,181,10,17,18,0,0,1,2,2,182,10,39,40,0,0,1,2,2,76,11,39,40,0,0,1,2,2,62,11,39,40,0,0,1,2,2,81,11,39,40,0,0,1,2,2,86,11,39,40,0,0,1,2,2,82,11,39,40,0,0,1,2,2,85,11,39,40,0,0,1,2,2,80,11,39,40,0,0,1,2,2,83,11,39,40,0,0,1,2,2,87,11,39,40,0,0,1,2,2,185,10,39,40,0,0,1,2,1,178,10,18,0,0,0,1,2,2,177,10,17,18,0,0,1,2,2,74,11,39,40,0,0,1,2,2,75,11,39,40,0,0,1,2,2,84,11]);fileData0.push.apply(fileData0,[39,40,0,0,1,2,2,187,10,39,40,0,0,1,2,2,188,10,39,40,0,0,1,2,3,99,11,19,20,18,0,1,2,2,100,11,18,19,0,0,1,2,2,101,11,18,19,0,0,1,2,1,103,11,18,0,0,0,1,2,1,97,11,18,0,0,0,1,2,1,89,11,18,0,0,0,1,2,1,94,11,18,0,0,0,1,2,2,90,11,17,18,0,0,1,2,2,12,11,17,18,0,0,1,2,2,233,10,17,18,0,0,1,2,2,250,10,17,18,0,0,1,2,1,231,10,17,0,0,0,1,2,1,237,10,17,0,0,0,1,2,1,228,10,17,0,0,0,1,2,2,198,10,17,9,0,0,1,2,2,195,10,17,9,0,0,1,2,2,197,10,9,17,0,0,1,2,2,193,10,9,17,0,0,1,2,1,221,10,17,0,0,0,1,2,2,220,10,9,17,0,0,1,2,2,194,10,9,17,0,0,1,2,2,234,10,17,18,0,0,1,2,1,232,10,17,0,0,0,1,2,1,222,10,17,0,0,0,1,2,1,219,10,17,0,0,0,1,2,2,207,10,17,9,0,0,1,2,2,196,10,9,17,0,0,1,2,2,160,10,9,17,0,0,1,2,2,162,10,9,17,0,0,1,2,1,158,10,9,0,0,0,1,2,1,163,10,9,0,0,0,1,2,2,153,10,9,17,0,0,1,2,1,151,10,9,0,0,0,1,2,1,232,0,9,0,0,0,1,2,2,8,11,18,17,0,0,1,2,2,11,11,17,18,0,0,1,2,2,9,11,17,18,0,0,1,2,2,88,11,18,17,0,0,1,2,2,13,11,17,18,0,0,1,2,2,236,10,17,18,0,0,1,2,1,235,10,17,0,0,0,1,2,1,230,10,17,0,0,0,1,2,1,206,10,17,0,0,0,1,2,2,209,10,17,9,0,0,1,2,2,208,10,9,17,0,0,1,2,1,91,11,18,0,0,0,1,2,2,3,11,17,18,0,0,1,2,2,15,11,17,18,0,0,1,2,2,248,10,17,18,0,0,1,2,2,249,10,17,18,0,0,1,2,1,246,10,17,0,0,0,1,2,2,203,10,9,17,0,0,1,2,2,205,10,17,9,0,0,1,2,1,229,10,17,0,0,0,1,2,1,247,10,17,0,0,0,1,2,2,0,11,17,18,0,0,1,2,2,254,10,17,18,0,0,1,2,2,4,11,17,18,0,0,1,2,2,2,11,18,17,0,0,1,2,1,5,11,18,0,0,0,1,2,2,10,11,18,17,0,0,1,2,1,109,11,18,0,0,0,1,2,1,98,11,18,0,0,0,1,2,2,213,10,17,9,0,0,1,2,1,217,10,17,0,0,0,1,2,1,215,10,17,0,0,0,1,2,1,227,10,17,0,0,0,1,2,1,242,10,17,0,0,0,1,2,1,243,10,17,0,0,0,1,2,1,244,10,17,0,0,0,1,2,2,255,10,17,18,0,0,1,2,2,7,11,17,18,0,0,1,2,2,6,11,17,18,0,0,1,2,1,40,11,18,0,0,0,1,2,1,39,11,18,0,0,0,1,2,1,172,11,18,0,0,0,1,2,1,108,11,18,0,0,0,1,2,1,110,11,18,0,0,0,1,2,2,43,11,23,22,0,0,1,2,2,47,11,23,22,0,0,1,2,2,46,11,23,22,0,0,1,2,2,50,11,22,24,0,0,1,2,2,49,11,22,24,0,0,1,2,2,48,11,22,24,0,0,1,2,1,41,11,18,0,0,0,1,2,1,38,11,18,0,0,0,1,2,1,42,11,18,0,0,0,1,2,2,71,11,22,24,0,0,1,2,1,171,11,18,0,0,0,1,2,2,180,11,22,24,0,0,1,2,2,179,11,22,24,0,0,1,2,2,69,11,22,24,0,0,1,2,2,54,11,22,24,0,0,1,2,2,55,11,22,24,0,0,1,2,2,158,11,22,24,0,0,1,2,2,159,11,22,24,0,0,1,2,2,160,11,22,24,0,0,1,2,2,161,11,22,24,0,0,1,2,2,191,11,22,24,0,0,1,2,2,188,11,22,24,0,0,1,2,2,57,11,22,24,0,0,1,2,1,56,11,22,0,0,0,1,2,2,187,11,23,22,0,0,1,2,2,192,11,22,24,0,0,1,2,1,93,11,18,0,0,0,1,2,1,95,11,18,0,0,0,1,2,1,107,11,18,0,0,0,1,2,1,111,11,18,0,0,0,1,2,2,146,11,22,24,0,0,1,2,2,147,11,22,24,0,0,1,2,2,184,11,22,24,0,0,1,2,2,70,11,22,24,0,0,1,2,2,162,11,22,24,0,0,1,2,1,96,11,18,0,0,0,1,2,1,92,11,18,0,0,0,1,2,1,105,11,18,0,0,0,1,2,1,106,11,18,0,0,0,1,2,2,155,11,22,24,0,0,1,2,2,156,11,22,24,0,0,1,2,2,154,11,22,24,0,0,1,2,2,145,11,22,24,0,0,1,2,2,148,11,22,24,0,0,1,2,1,164,11,18,0,0,0,1,2,2,104,11,18,19,0,0,1,2,2,149,11,22,24,0,0,1,2,3,165,11,19,20,18,0,1,2,2,166,11,19,20,0,0,1,2,3,173,11,19,20,18,0,1,2,2,157,11,22,24,0,0,1,2,2,151,11,22,24,0,0,1,2,2,153,11,22,24,0,0,1,2,2,175,11,22,24,0,0,1,2,1,170,11,18,0,0,0,1,2,3,169,11,19,20,21,0,1,2,3,167,11,19,20,18,0,1,2,3,168,11,19,20,21,0,1,2,3,174,11,19,20,21,0,1,2,2,150,11,22,24,0,0,1,2,2,152,11,22,24,0,0,1,2,2,183,11,22,24,0,0,1,2,2,182,11,22,24,0,0,1,2,2,177,11,22,24,0,0,1,2,2,176,11,22,24,0,0,1,2,1,178,11,22,0,0,0,1,2,1,21,11,18,0,0,0,1,2,1,22,11,18,0,0,0,1,2,1,102,11,18,0,0,0,1,2,2,189,11,19,20,0,0,1,2,3,163,11,19,20,21,0,1,2,3,190,11,19,20,21,0,1,2,2,63,11,40,39,0,0,1,2,2,61,11,39,40,0,0,1,2,2,65,11,39,40,0,0,1,2,2,24,11,39,40,0,0,1,2,2,25,11,39,40,0,0,1,2,2,23,11,39,40,0,0,1,2,2,18,11,19,20,0,0,1,2,1,36,11,18,0,0,0,1,2,2,44,11,17,18,0,0,1,2,2,16,11,17,18,0,0,1,2,2,252,10,17,18,0,0,1,2,2,14,11,17,18,0,0,1,2,2,186,10,17,18,0,0,1,2,2,59,11,39,40,0,0,1,2,2,58,11,39,40,0,0,1,2,2,68,11,39,40,0,0,1,2,2,66,11,39,40,0,0,1,2,2,64,11,39,40,0,0,1,2,1,26,11,18,0,0,0,1,2,2,60,11,39,40,0,0,1,2,3,29,11,19,20,22,0,1,2,2,34,11,23,22,0,0,1,2,2,31,11,23,22,0,0,1,2,2,20,11,19,20,0,0,1,2,2,35,11,23,22,0,0,1,2,1,37,11,18,0,0,0,1,2,2,45,11,17,18,0,0,1,2,3,27,11,19,20,21,0,1,2,2,30,11,20,21,0,0,1,2,2,28,11,20,21,0,0,1,2,2,51,11,20,21,0,0,1,2,2,53,11,20,21,0,0,1,2,2,120,11,20,21,0,0,1,2,1,118,11,21,0,0,0,1,2,3,119,11,19,20,22,0,1,2,2,122,11,20,21,0,0,1,2,1,19,11,18,0,0,0,1,2,2,17,11,19,20,0,0,1,2,3,32,11,19,20,21,0,1,2,2,67,11,20,21,0,0,1,2,2,52,11,20,21,0,0,1,2,2,133,11,20,21,0,0,1,2,2,142,11,20,21,0,0,1,2,1,141,11,21,0,0,0,1,2,1,138,11,21,0,0,0,1,2,2,137,11,20,21,0,0,1,2,2,136,11,20,21,0,0,1,2,2,139,11,20,21,0,0,1,2,1,140,11,21,0,0,0,1,2,2,143,11,20,21,0,0,1,2,2,132,11,20,21,0,0,1,2,2,130,11,20,21,0,0,1,2,2,131,11,20,21,0,0,1,2,3,116,11,19,20,21,0,1,2,2,117,11,20,21,0,0,1,2,2,127,11,20,21,0,0,1,2,2,129,11,20,21,0,0,1,2,2,135,11,20,21,0,0,1,2,2,134,11,20,21,0,0,1,2,2,128,11,20,21,0,0,1,2,2,126,11,20,21,0,0,1,2,2,114,11,20,21,0,0,1,2,2,124,11,20,21,0,0,1,2,3,123,11,19,20,18,0,1,2,3,125,11,19,20,21,0,1,2,3,121,11,19,20,22,0,1,2,3,113,11,19,20,21,0,1,2,2,33,11,23,22,0,0,1,2,1,186,11,22,0,0,0,1,2,1,185,11,18,0,0,0,1,2,2,144,11,20,21,0,0,1,2,2,112,11,20,21,0,0,1,2,3,115,11,19,20,21,0,1,2,2,181,11,20,21,0,0,1,2,1,15,13,35,0,0,0,1,2,1,9,13,35,0,0,0,1,2,1,12,13,35,0,0,0,1,2,1,11,13,35,0,0,0,1,2,1,5,13,35,0,0,0,1,2,1,21,13,35,0,0,0,1,2,1,251,12,35,0,0,0,1,2,1,16,13,35,0,0,0,1,2,1,14,1,36,0,0,0,1,2,1,27,13,36,0,0,0,1,2,1,254,12,36,0,0,0,1,2,1,252,12,36,0,0,0,1,2,1,28,13,36,0,0,0,1,2,1,9,1,36,0,0,0,1,2,1,12,1,35,0,0,0,1,2,1,8,13,35,0,0,0,1,2,1,234,12,35,0,0,0,1,2,1,7,13,35,0,0,0,1,2,1,13,13,35,0,0,0,1,2,1,238,12,35,0,0,0,1,2,1,237,12,12,0,0,0,1,2,1,236,12,35,0,0,0,1,2,1,2,13,35,0,0,0,1,2,1,249,12,35,0,0,0,1,2,1,250,12,36,0,0,0,1,2,1,253,12,36,0,0,0,1,2,1,255,12,36,0,0,0,1,2,1,11,1,36,0,0,0,1,2,1,10,1,35,0,0,0,1,2,1,233,12,35,0,0,0,1,2,1,235,12,35,0,0,0,1,2,1,10,13,35,0,0,0,1,2,1,14,13,35,0,0,0,1,2,1,245,12,35,0,0,0,1,2,1,248,12,35,0,0,0,1,2,1,246,12,35,0,0,0,1,2,1,247,12,35,0,0,0,1,2,1,6,13,35,0,0,0,1,2,1,52,13,35,0,0,0,1,2,1,1,13,35,0,0,0,1,2,1,50,13,35,0,0,0,1,2,1,0,13,35,0,0,0,1,2,1,53,13,12,0,0,0,1,2,1,62,13,12,0,0,0,1,2,1,64,13,12,0,0,0,1,2,1,63,13,12,0,0,0,1,2,1,70,13,12,0,0,0,1,2,1,73,13,12,0,0,0,1,2,1,74,13,12,0,0,0,1,2,1,79,13,12,0,0,0,1,2,1,218,12,12,0,0,0,1,2,1,94,13,12,0,0,0,1,2,1,78,13,12,0,0,0,1,2,1,49,13,12,0,0,0,1,2,1,65,13,12,0,0,0,1,2,1,32,13,12,0,0,0,1,2,1,15,1,12,0,0,0,1,2,1,66,13,12,0,0,0,1,2,1,67,13,12,0,0,0,1,2,1,21,1,12,0,0,0,1,2,1,34,13,12,0,0,0,1,2,1,33,13,12,0,0,0,1,2,1,31,13,12,0,0,0,1,2,1,48,13,12,0,0,0,1,2,1,217,12,12,0,0,0,1,2,1,216,12,12,0,0,0,1,2,1,83,13,12,0,0,0,1,2,1,82,13,12,0,0,0,1,2,1,35,13,12,0,0,0,1,2,1,36,13,12,0,0,0,1,2,1,37,13,12,0,0,0,1,2,1,38,13,12,0,0,0,1,2,1,39,13,12,0,0,0,1,2,1,40,13,12,0,0,0,1,2,1,41,13,12,0,0,0,1,2,1,230,12,12,0,0,0,1,2,1,19,1,12,0,0,0,1,2,1,76,13,12,0,0,0,1,2,1,20,1,12,0,0,0,1,2,1,42,13,12,0,0,0,1,2,1,44,13,12,0,0,0,1,2,1,18,1,12,0,0,0,1,2,1,16,1,12,0,0,0,1,2,1,75,13,12,0,0,0,1,2,1,47,13,12,0,0,0,1,2,1,45,13,12,0,0,0,1,2,1,46,13,12,0,0,0,1,2,1,43,13,12,0,0,0,1,2,1,231,12,12,0,0,0,1,2,1,229,12,12,0,0,0,1,2,1,232,12,12,0,0,0,1,2,1,84,13,12,0,0,0,1,2,1,81,13,12,0,0,0,1,2,1,80,13,12,0,0,0,1,2,1,72,13,12,0,0,0,1,2,1,71,13,12,0,0,0,1,2,1,55,13,12,0,0,0,1,2,1,69,13,12,0,0,0,1,2,1,56,13,12,0,0,0,1,2,1,240,12,12,0,0,0,1,2,1,242,12,35,0,0,0,1,2,1,241,12,35,0,0,0,1,2,1,239,12,35,0,0,0,1,2,1,243,12,35,0,0,0,1,2,1,244,12,35,0,0,0,1,2,1,4,1,35,0,0,0,1,2,1,13,1,35,0,0,0,1,2,1,7,1,35,0,0,0,1,2,1,6,1,35,0,0,0,1,2,1,5,1,35,0,0,0,1,2,1,8,1,35,0,0,0,1,2,1,24,13,35,0,0,0,1,2,1,25,13,35,0,0,0,1,2,1,19,13,35,0,0,0,1,2,1,29,13,35,0,0,0,1,2,1,4,13,35,0,0,0,1,2,1,3,13,35,0,0,0,1,2,1,17,1,12,0,0,0,1,2,1,3,1,12,0,0,0,1,2,1,58,13,12,0,0,0,1,2,1,59,13,12,0,0,0,1,2,1,57,13,12,0,0,0,1,2,1,219,12,12,0,0,0,1,2,1,221,12,12,0,0,0,1,2,1,220,12,35,0,0,0,1,2,1,222,12,12,0,0,0,1,2,1,225,12,12,0,0,0,1,2,1,224,12,12,0,0,0,1,2,1,60,13,12,0,0,0,1,2,1,228,12,12,0,0,0,1,2,1,18,13,35,0,0,0,1,2,1,17,13,35,0,0,0,1,2,1,30,13,35,0,0,0,1,2,1,26,13,35,0,0,0,1,2,1,20,13,35,0,0,0,1,2,1,23,13,35,0,0,0,1,2,1,22,13,12,0,0,0,1,2,1,61,13,12,0,0,0,1,2,1,68,13,12,0,0,0,1,2,1,77,13,12,0,0,0,1,2,1,223,12,12,0,0,0,1,2,1,226,12,12,0,0,0,1,2,1,227,12,12,0,0,0,1,2,2,173,12,32,34,0,0,1,2,2,176,12,32,34,0,0,1,2,2,174,12,32,34,0,0,1,2,2,206,12,32,34,0,0,1,2,2,205,12,32,34,0,0,1,2,2,171,12,32,34,0,0,1,2,2,193,12,26,32,0,0,1,2,2,198,12,32,34,0,0,1,2,2,172,12,32,34,0,0,1,2,2,175,12,32,34,0,0,1,2,2,168,12,32,34,0,0,1,2,2,179,12,32,34,0,0,1,2,2,169,12,32,34,0,0,1,2,2,177,12,32,34,0,0,1,2,2,178,12,32,34,0,0,1,2,2,180,12,32,34,0,0,1,2,2,201,12,32,34,0,0,1,2,2,199,12,32,34,0,0,1,2,1,200,12,32,0,0,0,1,2,2,170,12,32,34,0,0,1,2,2,135,12,26,32,0,0,1,2,2,187,12,26,32,0,0,1,2,1,130,12,26,0,0,0,1,2,1,128,12,26,0,0,0,1,2,2,188,12,30,31,0,0,1,2,2,189,12,30,31,0,0,1,2,1,129,12,26,0,0,0,1,2,2,185,12,32,34,0,0,1,2,2,207,12,32,34,0,0,1,2,2,202,12,32,34,0,0,1,2,2,203,12,32,34,0,0,1,2,1,194,12,26,0,0,0,1,2,1,134,12,26,0,0,0,1,2,1,131,12,26,0,0,0,1,2,1,120,12,26,0,0,0,1,2,2,112,12,25,26,0,0,1,2,2,127,12,25,26,0,0,1,2,2,124,12,25,26,0,0,1,2,3,196,12,30,31,28,0,1,2,2,113,12,25,26,0,0,1,2,2,114,12,25,26,0,0,1,2,2,214,11,25,26,0,0,1,2,2,39,12,25,26,0,0,1,2,2,118,12,25,26,0,0,1,2,1,121,12,26,0,0,0,1,2,1,125,12,26,0,0,0,1,2,3,123,12,30,26,29,0,1,2,3,197,12,30,31,28,0,1,2,2,191,12,30,31,0,0,1,2,2,190,12,30,31,0,0,1,2,2,192,12,30,31,0,0,1,2,1,126,12,26,0,0,0,1,2,3,186,12,30,26,25,0,1,2,1,48,12,26,0,0,0,1,2,2,213,12,30,31,0,0,1,2,2,212,12,29,30,0,0,1,2,1,49,12,26,0,0,0,1,2,1,216,11,26,0,0,0,1,2,3,220,11,27,28,25,0,1,2,3,221,11,27,28,25,0,1,2,1,215,11,27,0,0,0,1,2,2,217,11,25,26,0,0,1,2,2,4,12,25,26,0,0,1,2,2,22,12,25,26,0,0,1,2,1,2,12,25,0,0,0,1,2,1,119,12,26,0,0,0,1,2,1,132,12,26,0,0,0,1,2,2,116,12,25,26,0,0,1,2,2,115,12,25,26,0,0,1,2,2,40,12,25,26,0,0,1,2,2,5,12,25,26,0,0,1,2,1,3,12,25,0,0,0,1,2,1,249,11,25,0,0,0,1,2,1,248,11,25,0,0,0,1,2,1,246,11,25,0,0,0,1,2,2,247,11,25,5,0,0,1,2,2,249,0,25,5,0,0,1,2,2,227,11,25,5,0,0,1,2,1,195,12,26,0,0,0,1,2,1,133,12,26,0,0,0,1,2,2,117,12,25,26,0,0,1,2,1,1,12,25,0,0,0,1,2,1,6,12,25,0,0,0,1,2,2,7,12,25,26,0,0,1,2,2,38,12,25,26,0,0,1,2,2,36,12,25,26,0,0,1,2,2,37,12,25,26,0,0,1,2,2,122,12,25,26,0,0,1,2,2,32,12,25,26,0,0,1,2,2,65,12,26,25,0,0,1,2,1,66,12,26,0,0,0,1,2,2,74,12,32,34,0,0,1,2,1,17,12,25,0,0,0,1,2,1,0,12,25,0,0,0,1,2,2,20,12,25,26,0,0,1,2,2,35,12,25,26,0,0,1,2,2,42,12,25,26,0,0,1,2,2,29,12,25,26,0,0,1,2,2,19,12,25,26,0,0,1,2,2,27,12,25,26,0,0,1,2,1,18,12,25,0,0,0,1,2,1,16,12,25,0,0,0,1,2,1,251,11,25,0,0,0,1,2,2,26,12,25,26,0,0,1,2,1,14,12,25,0,0,0,1,2,2,94,12,32,34,0,0,1,2,2,96,12,32,34,0,0,1,2,2,79,12,32,34,0,0,1,2,2,75,12,32,34,0,0,1,2,2,95,12,32,34,0,0,1,2,2,72,12,33,32,0,0,1,2,1,64,12,26,0,0,0,1,2,1,67,12,26,0,0,0,1,2,2,30,12,25,26,0,0,1,2,2,31,12,25,26,0,0,1,2,2,25,12,25,26,0,0,1,2,1,15,12,25,0,0,0,1,2,1,13,12,25,0,0,0,1,2,2,76,12,32,34,0,0,1,2,2,80,12,32,34,0,0,1,2,2,34,12,25,26,0,0,1,2,2,33,12,25,26,0,0,1,2,1,68,12,26,0,0,0,1,2,2,69,12,33,32,0,0,1,2,2,73,12,33,32,0,0,1,2,1,81,12,32,0,0,0,1,2,2,82,12,32,34,0,0,1,2,2,211,12,32,34,0,0,1,2,2,214,12,32,34,0,0,1,2,2,184,12,32,34,0,0,1,2,2,215,12,32,34,0,0,1,2,2,210,12,33,32,0,0,1,2,2,183,12,32,34,0,0,1,2,2,181,12,32,34,0,0,1,2,2,182,12,32,34,0,0,1,2,2,208,12,26,32,0,0,1,2,2,149,12,30,31,0,0,1,2,1,145,12,32,0,0,0,1,2,1,209,12,32,0,0,0,1,2,2,59,12,33,32,0,0,1,2,2,60,12,33,32,0,0,1,2,2,57,12,33,32,0,0,1,2,1,143,12,31,0,0,0,1,2,2,142,12,32,31,0,0,1,2,2,55,12,32,31,0,0,1,2,2,46,12,29,30,0,0,1,2,1,45,12,29,0,0,0,1,2,2,61,12,33,32,0,0,1,2,2,62,12,26,27,0,0,1,2,1,63,12,26,0,0,0,1,2,2,70,12,25,26,0,0,1,2,1,71,12,25,0,0,0,1,2,2,255,0,27,28,0,0,1,2,2,245,0,27,28,0,0,1,2,3,54,12,30,31,32,0,1,2,1,146,12,31,0,0,0,1,2,1,78,12,31,0,0,0,1,2,1,0,1,31,0,0,0,1,2,2,56,12,30,31,0,0,1,2,1,53,12,31,0,0,0,1,2,1,144,12,31,0,0,0,1,2,2,51,12,27,28,0,0,1,2,2,50,12,27,28,0,0,1,2,1,52,12,26,0,0,0,1,2,1,47,12,26,0,0,0,1,2,2,44,12,29,30,0,0,1,2,2,58,12,30,31,0,0,1,2,2,92,12,30,31,0,0,1,2,1,77,12,31,0,0,0,1,2,1,156,12,31,0,0,0,1,2,1,165,12,31,0,0,0,1,2,1,164,12,31,0,0,0,1,2,1,161,12,31,0,0,0,1,2,3,90,12,27,28,25,0,1,2,1,154,12,31,0,0,0,1,2,2,153,12,30,31,0,0,1,2,2,155,12,30,31,0,0,1,2,2,141,12,30,31,0,0,1,2,3,140,12,30,31,28,0,1,2,1,163,12,31,0,0,0,1,2,1,160,12,31,0,0,0,1,2,1,162,12,31,0,0,0,1,2,1,166,12,31,0,0,0,1,2,2,159,12,30,31,0,0,1,2,1,158,12,31,0,0,0,1,2,1,157,12,31,0,0,0,1,2,1,2,1,31,0,0,0,1,2,1,152,12,31,0,0,0,1,2,2,150,12,30,31,0,0,1,2,2,151,12,30,31,0,0,1,2,2,139,12,30,31,0,0,1,2,2,148,12,30,31,0,0,1,2,2,147,12,30,31,0,0,1,2,2,167,12,30,31,0,0,1,2,2,137,12,30,31,0,0,1,2,2,136,12,30,31,0,0,1,2,2,204,12,30,31,0,0,1,2,3,138,12,30,31,28,0,1,2,1,224,10,17,0,0,0,1,2,1,214,10,17,0,0,0,1,2,2,204,10,9,17,0,0,1,2,2,170,10,9,17,0,0,1,2,2,210,10,9,17,0,0,1,2,1,168,10,9,0,0,0,1,2,2,169,10,9,17,0,0,1,2,2,211,10,9,17,0,0,1,2,1,223,10,17,0,0,0,1,2,1,245,10,17,0,0,0,1,2,1,161,10,9,0,0,0,1,2,2,159,10,9,17,0,0,1,2,2,233,0,9,17,0,0,1,2,2,165,10,9,17,0,0,1,2,2,164,10,9,6,0,0,1,2,2,235,0,9,6,0,0,1,2,2,167,10,9,6,0,0,1,2,2,173,10,9,6,0,0,1,2,2,174,10,9,17,0,0,1,2,2,175,10,9,3,0,0,1,2,1,234,0,9,0,0,0,1,2,1,166,10,9,0,0,0,1,2,1,91,13,36,0,0,0,1,2,1,92,13,36,0,0,0,1,2,1,93,13,36,0,0,0,1,2,1,25,1,35,0,0,0,1,2,1,26,1,36,0,0,0,1,2,1,87,13,35,0,0,0,1,2,1,89,13,35,0,0,0,1,2,1,24,1,35,0,0,0,1,2,1,88,13,35,0,0,0,1,2,1,23,1,35,0,0,0,1,2,1,85,13,35,0,0,0,1,2,1,22,1,35,0,0,0,1,2,1,86,13,35,0,0,0,1,2,1,90,13,35,0,0,0,1,2,2,105,12,27,28,0,0,1,2,3,98,12,27,28,25,0,1,2,2,97,12,27,28,0,0,1,2,2,1,1,27,28,0,0,1,2,2,107,12,27,28,0,0,1,2,2,106,12,27,28,0,0,1,2,2,224,11,27,28,0,0,1,2,2,223,11,27,28,0,0,1,2,2,103,12,27,28,0,0,1,2,2,110,12,27,28,0,0,1,2,2,104,12,27,28,0,0,1,2,2,102,12,27,28,0,0,1,2,2,244,0,27,28,0,0,1,2,2,101,12,27,28,0,0,1,2,2,87,12,27,28,0,0,1,2,2,100,12,27,28,0,0,1,2,2,99,12,27,28,0,0,1,2,2,109,12,27,28,0,0,1,2,2,108,12,27,28,0,0,1,2,2,111,12,27,28,0,0,1,2,2,88,12,27,28,0,0,1,2,2,89,12,27,28,0,0,1,2,2,91,12,27,28,0,0,1,2,2,93,12,27,28,0,0,1,2,2,86,12,27,28,0,0,1,2,2,84,12,27,28,0,0,1,2,2,83,12,27,28,0,0,1,2,2,85,12,27,28,0,0,1,2,1,255,11,25,0,0,0,1,2,1,8,12,25,0,0,0,1,2,1,21,12,26,0,0,0,1,2,1,218,11,26,0,0,0,1,2,1,219,11,26,0,0,0,1,2,2,222,11,26,25,0,0,1,2,2,41,12,26,25,0,0,1,2,2,43,12,25,26,0,0,1,2,2,24,12,26,25,0,0,1,2,2,28,12,25,26,0,0,1,2,1,12,12,25,0,0,0,1,2,2,9,12,25,5,0,0,1,2,2,252,11,25,5,0,0,1,2,1,253,11,25,0,0,0,1,2,2,245,11,25,5,0,0,1,2,1,229,11,25,0,0,0,1,2,2,231,11,25,5,0,0,1,2,1,10,12,25,0,0,0,1,2,1,23,12,26,0,0,0,1,2,2,11,12,25,5,0,0,1,2,1,233,11,5,0,0,0,1,2,2,243,11,25,5,0,0,1,2,2,235,11,25,5,0,0,1,2,2,234,11,25,5,0,0,1,2,2,248,0,25,5,0,0,1,2,1,247,0,25,0,0,0,1,2,1,230,11,5,0,0,0,1,2,1,226,11,5,0,0,0,1,2,1,232,11,5,0,0,0,1,2,1,246,0,5,0,0,0,1,2,1,225,11,5,0,0,0,1,2,1,199,11,5,0,0,0,1,2,1,228,11,5,0,0,0,1,2,1,203,11,5,0,0,0,1,2,1,204,11,5,0,0,0,1,2,1,194,11,5,0,0,0,1,2,1,236,0,5,0,0,0,1,2,1,196,11,5,0,0,0,1,2,2,198,11,5,3,0,0,1,2,2,211,11,5,3,0,0,1,2,1,242,0,5,0,0,0,1,2,1,251,0,5,0,0,0,1,2,1,200,11,5,0,0,0,1,2,1,205,11,5,0,0,0,1,2,1,193,11,5,0,0,0,1,2,1,195,11,5,0,0,0,1,2,1,197,11,5,0,0,0,1,2,1,254,11,25,0,0,0,1,2,1,250,11,25,0,0,0,1,2,2,253,0,25,5,0,0,1,2,2,238,11,25,5,0,0,1,2,2,239,11,25,5,0,0,1,2,2,241,11,25,5,0,0,1,2,1,240,11,5,0,0,0,1,2,1,201,11,5,0,0,0,1,2,1,212,11,5,0,0,0,1,2,1,243,0,5,0,0,0,1,2,2,213,11,5,3,0,0,1,2,1,240,0,5,0,0,0,1,2,1,242,11,5,0,0,0,1,2,1,250,0,5,0,0,0,1,2,1,237,11,5,0,0,0,1,2,2,236,11,5,25,0,0,1,2,1,237,0,5,0,0,0,1,2,1,202,11,5,0,0,0,1,2,2,210,11,5,1,0,0,1,2,1,239,0,5,0,0,0,1,2,1,206,11,5,0,0,0,1,2,1,208,11,5,0,0,0,1,2,1,207,11,5,0,0,0,1,2,1,238,0,5,0,0,0,1,2,1,241,0,5,0,0,0,1,2,1,209,11,5,0,0,0,1,2,1,252,0,5,0,0,0,1,2,2,254,0,25,5,0,0,1,2,2,244,11,25,5,0,0,1,2,1,31,10,15,0,0,0,1,2,1,32,10,15,0,0,0,1,2,1,18,10,15,0,0,0,1,2,1,21,10,15,0,0,0,1,2,1,20,10,14,0,0,0,1,2,1,22,10,15,0,0,0,1,2,1,102,10,14,0,0,0,1,2,1,89,10,14,0,0,0,1,2,1,90,10,14,0,0,0,1,2,1,91,10,14,0,0,0,1,2,1,94,10,14,0,0,0,1,2,2,230,0,14,13,0,0,1,2,2,92,10,14,13,0,0,1,2,2,93,10,14,13,0,0,1,2,1,123,10,14,0,0,0,1,2,1,231,0,14,0,0,0,1,2,1,120,10,14,0,0,0,1,2,1,119,10,14,0,0,0,1,2,1,103,10,14,0,0,0,1,2,1,17,10,14,0,0,0,1,2,1,19,10,15,0,0,0,1,2,1,33,10,15,0,0,0,1,2,1,25,10,15,0,0,0,1,2,1,124,10,14,0,0,0,1,2,1,2,10,14,0,0,0,1,2,1,4,10,14,0,0,0,1,2,1,5,10,14,0,0,0,1,2,1,128,10,14,0,0,0,1,2,1,3,10,14,0,0,0,1,2,1,125,10,14,0,0,0,1,2,1,117,10,14,0,0,0,1,2,1,1,10,14,0,0,0,1,2,1,116,10,14,0,0,0,1,2,1,115,10,14,0,0,0,1,2,1,126,10,14,0,0,0,1,2,1,86,10,14,0,0,0,1,2,1,84,10,14,0,0,0,1,2,1,85,10,14,0,0,0,1,2,1,83,10,14,0,0,0,1,2,1,81,10,14,0,0,0,1,2,1,127,10,14,0,0,0,1,2,1,77,10,14,0,0,0,1,2,1,129,10,14,0,0,0,1,2,1,80,10,14,0,0,0,1,2,1,112,10,14,0,0,0,1,2,1,95,10,14,0,0,0,1,2,1,78,10,14,0,0,0,1,2,1,79,10,14,0,0,0,1,2,1,82,10,14,0,0,0,1,2,1,131,10,14,0,0,0,1,2,1,132,10,14,0,0,0,1,2,1,135,10,14,0,0,0,1,2,1,87,10,14,0,0,0,1,2,1,88,10,14,0,0,0,1,2,1,8,10,14,0,0,0,1,2,1,10,10,14,0,0,0,1,2,1,7,10,14,0,0,0,1,2,1,9,10,14,0,0,0,1,2,1,250,9,14,0,0,0,1,2,1,134,10,14,0,0,0,1,2,1,133,10,14,0,0,0,1,2,1,110,10,14,0,0,0,1,2,1,113,10,14,0,0,0,1,2,1,111,10,14,0,0,0,1,2,1,122,10,14,0,0,0,1,2,1,96,10,14,0,0,0,1,2,1,251,9,14,0,0,0,1,2,2,252,9,14,13,0,0,1,2,2,150,10,14,13,0,0,1,2,2,130,10,14,13,0,0,1,2,1,121,10,14,0,0,0,1,2,1,118,10,14,0,0,0,1,2,1,101,10,14,0,0,0,1,2,1,98,10,14,0,0,0,1,2,1,99,10,14,0,0,0,1,2,1,51,10,15,0,0,0,1,2,1,29,10,15,0,0,0,1,2,2,11,10,16,15,0,0,1,2,2,13,10,15,16,0,0,1,2,2,12,10,15,16,0,0,1,2,2,55,10,15,16,0,0,1,2,2,56,10,15,16,0,0,1,2,2,61,10,15,16,0,0,1,2,2,60,10,15,16,0,0,1,2,1,57,10,15,0,0,0,1,2,1,34,10,15,0,0,0,1,2,1,52,10,15,0,0,0,1,2,1,36,10,15,0,0,0,1,2,1,16,10,14,0,0,0,1,2,1,97,10,14,0,0,0,1,2,1,100,10,14,0,0,0,1,2,2,37,10,15,14,0,0,1,2,1,35,10,15,0,0,0,1,2,1,53,10,15,0,0,0,1,2,1,59,10,15,0,0,0,1,2,1,48,10,14,0,0,0,1,2,1,14,10,15,0,0,0,1,2,1,15,10,15,0,0,0,1,2,1,58,10,15,0,0,0,1,2,1,106,10,14,0,0,0,1,2,1,107,10,14,0,0,0,1,2,1,108,10,14,0,0,0,1,2,1,109,10,14,0,0,0,1,2,1,114,10,14,0,0,0,1,2,1,46,10,14,0,0,0,1,2,1,47,10,14,0,0,0,1,2,1,104,10,14,0,0,0,1,2,1,105,10,14,0,0,0,1,2,1,50,10,15,0,0,0,1,2,1,75,10,15,0,0,0,1,2,1,76,10,15,0,0,0,1,2,1,63,10,15,0,0,0,1,2,1,49,10,15,0,0,0,1,2,1,65,10,15,0,0,0,1,2,1,253,9,15,0,0,0,1,2,1,255,9,14,0,0,0,1,2,1,254,9,14,0,0,0,1,2,1,0,10,14,0,0,0,1,2,1,6,10,14,0,0,0,1,2,1,69,10,14,0,0,0,1,2,1,68,10,15,0,0,0,1,2,1,62,10,15,0,0,0,1,2,1,64,10,15,0,0,0,1,2,2,70,10,15,16,0,0,1,2,1,24,10,15,0,0,0,1,2,1,66,10,15,0,0,0,1,2,2,67,10,15,16,0,0,1,2,2,72,10,15,16,0,0,1,2,1,73,10,16,0,0,0,1,2,2,74,10,16,15,0,0,1,2,2,54,10,15,16,0,0,1,2,2,27,10,16,15,0,0,1,2,2,43,10,16,15,0,0,1,2,2,44,10,16,15,0,0,1,2,1,38,10,16,0,0,0,1,2,1,41,10,15,0,0,0,1,2,1,23,10,15,0,0,0,1,2,1,26,10,15,0,0,0,1,2,2,71,10,15,16,0,0,1,2,2,39,10,15,16,0,0,1,2,1,40,10,16,0,0,0,1,2,1,42,10,16,0,0,0,1,2,2,45,10,16,15,0,0,1,2,2,30,10,16,15,0,0,1,2,2,28,10,16,15,0,0,1,2,1,145,10,16,0,0,0,1,2,2,147,10,16,15,0,0,1,2,1,148,10,16,0,0,0,1,2,2,146,10,16,15,0,0,1,2,2,149,10,16,15,0,0,1,2,2,143,10,16,15,0,0,1,2,2,141,10,15,16,0,0,1,2,1,140,10,15,0,0,0,1,2,2,144,10,15,14,0,0,1,2,1,139,10,15,0,0,0,1,2,1,136,10,15,0,0,0,1,2,1,137,10,15,0,0,0,1,2,1,138,10,15,0,0,0,1,2,2,142,10,15,16,0,0,1,2,1,162,9,13,0,0,0,1,2,1,223,0,14,0,0,0,1,2,1,219,0,14,0,0,0,1,2,1,161,9,13,0,0,0,1,2,1,164,9,13,0,0,0,1,2,2,220,0,14,13,0,0,1,2,1,157,9,14,0,0,0,1,2,1,218,0,14,0,0,0,1,2,2,158,9,13,14,0,0,1,2,1,175,9,14,0,0,0,1,2,1,185,9,14,0,0,0,1,2,1,184,9,14,0,0,0,1,2,1,186,9,14,0,0,0,1,2,1,188,9,14,0,0,0,1,2,1,189,9,14,0,0,0,1,2,1,187,9,14,0,0,0,1,2,1,179,9,14,0,0,0,1,2,1,178,9,14,0,0,0,1,2,2,176,9,14,13,0,0,1,2,1,160,9,13,0,0,0,1,2,1,159,9,13,0,0,0,1,2,1,191,9,13,0,0,0,1,2,1,195,9,13,0,0,0,1,2,1,170,9,13,0,0,0,1,2,1,196,9,13,0,0,0,1,2,1,86,8,13,0,0,0,1,2,1,200,9,13,0,0,0,1,2,1,84,8,13,0,0,0,1,2,1,190,9,13,0,0,0,1,2,1,163,9,13,0,0,0,1,2,1,192,9,13,0,0,0,1,2,1,95,8,13,0,0,0,1,2,2,80,8,13,7,0,0,1,2,2,182,0,7,13,0,0,1,2,1,83,8,13,0,0,0,1,2,1,81,8,13,0,0,0,1,2,1,88,8,13,0,0,0,1,2,1,87,8,7,0,0,0,1,2,1,154,8,7,0,0,0,1,2,1,157,8,7,0,0,0,1,2,1,248,8,7,0,0,0,1,2,1,159,8,7,0,0,0,1,2,1,249,8,7,0,0,0,1,2,1,255,8,7,0,0,0,1,2,1,251,8,7,0,0,0,1,2,1,79,8,13,0,0,0,1,2,1,206,0,7,0,0,0,1,2,1,89,8,7,0,0,0,1,2,1,82,8,7,0,0,0,1,2,1,0,9,7,0,0,0,1,2,1,161,8,7,0,0,0,1,2,1,12,9,7,0,0,0,1,2,1,9,9,7,0,0,0,1,2,1,156,8,7,0,0,0,1,2,1,158,8,7,0,0,0,1,2,1,160,8,7,0,0,0,1,2,1,162,8,7,0,0,0,1,2,1,224,8,7,0,0,0,1,2,1,225,8,7,0,0,0,1,2,1,13,9,7,0,0,0,1,2,1,11,9,7,0,0,0,1,2,1,8,9,7,0,0,0,1,2,1,96,8,7,0,0,0,1,2,1,44,8,7,0,0,0,1,2,1,77,8,7,0,0,0,1,2,1,176,0,7,0,0,0,1,2,1,78,8,13,0,0,0,1,2,1,85,8,13,0,0,0,1,2,2,178,0,7,13,0,0,1,2,2,179,0,7,13,0,0,1,2,1,204,0,7,0,0,0,1,2,1,250,8,7,0,0,0,1,2,1,253,8,7,0,0,0,1,2,1,155,8,7,0,0,0,1,2,1,153,8,7,0,0,0,1,2,1,42,8,7,0,0,0,1,2,1,252,8,7,0,0,0,1,2,1,254,8,7,0,0,0,1,2,1,61,9,7,0,0,0,1,2,1,63,9,7,0,0,0,1,2,1,120,9,7,0,0,0,1,2,1,122,9,7,0,0,0,1,2,1,141,9,7,0,0,0,1,2,1,133,9,7,0,0,0,1,2,1,135,9,7,0,0,0,1,2,2,132,9,7,11,0,0,1,2,2,136,9,7,11,0,0,1,2,1,137,9,7,0,0,0,1,2,1,48,8,11,0,0,0,1,2,1,58,8,7,0,0,0,1,2,1,56,8,7,0,0,0,1,2,1,175,0,7,0,0,0,1,2,1,43,8,7,0,0,0,1,2,1,213,0,7,0,0,0,1,2,1,131,9,7,0,0,0,1,2,1,138,9,7,0,0,0,1,2,1,59,9,7,0,0,0,1,2,1,57,9,7,0,0,0,1,2,1,55,9,7,0,0,0,1,2,1,56,9,7,0,0,0,1,2,1,62,9,7,0,0,0,1,2,1,60,9,7,0,0,0,1,2,1,58,9,7,0,0,0,1,2,1,108,9,7,0,0,0,1,2,1,71,8,7,0,0,0,1,2,1,183,0,7,0,0,0,1,2,1,72,8,7,0,0,0,1,2,1,70,8,7,0,0,0,1,2,1,66,8,7,0,0,0,1,2,1,64,8,11,0,0,0,1,2,1,177,0,7,0,0,0,1,2,2,62,8,7,11,0,0,1,2,1,50,8,7,0,0,0,1,2,2,49,8,11,7,0,0,1,2,1,51,8,11,0,0,0,1,2,1,57,8,11,0,0,0,1,2,1,55,8,11,0,0,0,1,2,1,45,8,7,0,0,0,1,2,1,54,8,11,0,0,0,1,2,1,46,8,11,0,0,0,1,2,1,47,8,7,0,0,0,1,2,1,52,8,11,0,0,0,1,2,1,53,8,11,0,0,0,1,2,1,65,8,11,0,0,0,1,2,1,63,8,11,0,0,0,1,2,2,73,8,11,7,0,0,1,2,2,68,8,11,7,0,0,1,2,1,67,8,7,0,0,0,1,2,1,98,8,7,0,0,0,1,2,1,181,0,7,0,0,0,1,2,1,92,8,13,0,0,0,1,2,1,94,8,7,0,0,0,1,2,2,180,0,7,13,0,0,1,2,1,91,8,13,0,0,0,1,2,1,93,8,13,0,0,0,1,2,2,75,8,11,12,0,0,1,2,1,74,8,11,0,0,0,1,2,1,99,8,13,0,0,0,1,2,1,97,8,13,0,0,0,1,2,1,69,8,7,0,0,0,1,2,1,60,8,7,0,0,0,1,2,1,61,8,11,0,0,0,1,2,1,76,8,11,0,0,0,1,2,1,90,8,13,0,0,0,1,2,1,100,8,13,0,0,0,1,2,1,59,8,7,0,0,0,1,2,1,101,8,13,0,0,0,1,2,1,102,8,13,0,0,0,1,2,1,16,9,7,0,0,0,1,2,1,23,9,7,0,0,0,1,2,1,17,9,7,0,0,0,1,2,1,18,9,7,0,0,0,1,2,2,210,0,7,10,0,0,1,2,1,209,0,7,0,0,0,1,2,1,6,9,7,0,0,0,1,2,1,207,0,7,0,0,0,1,2,1,10,9,7,0,0,0,1,2,1,3,9,7,0,0,0,1,2,1,2,9,7,0,0,0,1,2,1,208,0,7,0,0,0,1,2,1,4,9,7,0,0,0,1,2,1,7,9,7,0,0,0,1,2,1,24,9,7,0,0,0,1,2,1,202,8,7,0,0,0,1,2,1,203,8,7,0,0,0,1,2,1,19,9,7,0,0,0,1,2,1,15,9,7,0,0,0,1,2,2,212,0,7,10,0,0,1,2,2,20,9,7,10,0,0,1,2,1,5,9,7,0,0,0,1,2,1,21,9,7,0,0,0,1,2,1,201,8,7,0,0,0,1,2,1,196,0,7,0,0,0,1,2,1,204,8,7,0,0,0,1,2,1,25,9,7,0,0,0,1,2,1,115,9,7,0,0,0,1,2,1,112,9,7,0,0,0,1,2,1,111,9,7,0,0,0,1,2,2,114,9,7,10,0,0,1,2,1,110,9,7,0,0,0,1,2,1,113,9,7,0,0,0,1,2,1,109,9,7,0,0,0,1,2,1,39,9,7,0,0,0,1,2,1,36,9,7,0,0,0,1,2,1,38,9,7,0,0,0,1,2,1,34,9,7,0,0,0,1,2,1,207,8,7,0,0,0,1,2,1,27,9,7,0,0,0,1,2,1,29,9,7,0,0,0,1,2,2,117,9,7,10,0,0,1,2,2,127,9,7,10,0,0,1,2,1,41,9,7,0,0,0,1,2,2,43,9,7,10,0,0,1,2,1,116,9,7,0,0,0,1,2,1,119,9,7,0,0,0,1,2,1,118,9,7,0,0,0,1,2,1,121,9,7,0,0,0,1,2,1,54,9,7,0,0,0,1,2,1,51,9,7,0,0,0,1,2,1,50,9,7,0,0,0,1,2,1,47,9,7,0,0,0,1,2,1,45,9,7,0,0,0,1,2,1,40,9,7,0,0,0,1,2,1,42,9,7,0,0,0,1,2,1,44,9,7,0,0,0,1,2,1,46,9,7,0,0,0,1,2,1,48,9,7,0,0,0,1,2,1,49,9,7,0,0,0,1,2,1,52,9,7,0,0,0,1,2,1,53,9,7,0,0,0,1,2,1,37,9,7,0,0,0,1,2,1,33,9,7,0,0,0,1,2,1,32,9,7,0,0,0,1,2,1,31,9,7,0,0,0,1,2,1,30,9,7,0,0,0,1,2,1,28,9,7,0,0,0,1,2,1,26,9,7,0,0,0,1,2,1,208,8,7,0,0,0,1,2,1,206,8,7,0,0,0,1,2,1,205,8,7,0,0,0,1,2,1,35,9,7,0,0,0,1,2,1,165,9,13,0,0,0,1,2,2,155,9,13,14,0,0,1,2,1,154,9,13,0,0,0,1,2,1,173,9,14,0,0,0,1,2,1,180,9,14,0,0,0,1,2,1,182,9,14,0,0,0,1,2,1,174,9,14,0,0,0,1,2,2,181,9,14,13,0,0,1,2,2,177,9,14,13,0,0,1,2,1,167,9,13,0,0,0,1,2,2,221,0,13,14,0,0,1,2,2,156,9,13,14,0,0,1,2,1,168,9,13,0,0,0,1,2,1,166,9,13,0,0,0,1,2,1,171,9,13,0,0,0,1,2,1,194,9,13,0,0,0,1,2,1,197,9,13,0,0,0,1,2,1,198,9,13,0,0,0,1,2,1,199,9,13,0,0,0,1,2,1,193,9,13,0,0,0,1,2,1,169,9,13,0,0,0,1,2,1,172,9,13,0,0,0,1,2,1,222,0,14,0,0,0,1,2,1,183,9,14,0,0,0,1,2,1,54,13,12,0,0,0,1,2,1,51,13,12,0,0,0,1,2,1,221,9,12,0,0,0,1,2,1,227,9,12,0,0,0,1,2,1,228,9,12,0,0,0,1,2,1,224,9,12,0,0,0,1,2,1,215,9,11,0,0,0,1,2,1,217,9,11,0,0,0,1,2,1,216,9,11,0,0,0,1,2,1,241,9,11,0,0,0,1,2,1,247,9,11,0,0,0,1,2,2,246,9,11,7,0,0,1,2,2,201,9,11,12,0,0,1,2,2,245,9,11,12,0,0,1,2,2,214,9,11,12,0,0,1,2,1,242,9,11,0,0,0,1,2,1,219,9,11,0,0,0,1,2,2,213,9,11,12,0,0,1,2,1,220,9,12,0,0,0,1,2,1,229,9,12,0,0,0,1,2,2,227,0,12,11,0,0,1,2,1,230,9,12,0,0,0,1,2,1,228,0,12,0,0,0,1,2,1,226,0,11,0,0,0,1,2,2,202,9,12,11,0,0,1,2,1,203,9,12,0,0,0,1,2,1]);fileData0.push.apply(fileData0,[238,9,11,0,0,0,1,2,1,211,9,11,0,0,0,1,2,1,240,9,11,0,0,0,1,2,1,224,0,11,0,0,0,1,2,1,209,9,11,0,0,0,1,2,1,237,9,11,0,0,0,1,2,1,212,9,11,0,0,0,1,2,1,239,9,11,0,0,0,1,2,1,210,9,12,0,0,0,1,2,1,229,0,12,0,0,0,1,2,1,231,9,12,0,0,0,1,2,1,232,9,12,0,0,0,1,2,1,225,0,12,0,0,0,1,2,1,233,9,12,0,0,0,1,2,1,204,9,12,0,0,0,1,2,1,206,9,12,0,0,0,1,2,1,243,9,11,0,0,0,1,2,1,207,9,11,0,0,0,1,2,1,205,9,11,0,0,0,1,2,1,222,9,12,0,0,0,1,2,1,235,9,12,0,0,0,1,2,1,236,9,12,0,0,0,1,2,1,234,9,12,0,0,0,1,2,1,226,9,12,0,0,0,1,2,1,225,9,12,0,0,0,1,2,1,223,9,12,0,0,0,1,2,1,208,9,11,0,0,0,1,2,1,218,9,11,0,0,0,1,2,1,244,9,11,0,0,0,1,2,1,248,9,11,0,0,0,1,2,1,249,9,11,0,0,0,1,2,1,222,8,7,0,0,0,1,2,1,171,8,7,0,0,0,1,2,1,173,8,7,0,0,0,1,2,1,170,8,7,0,0,0,1,2,1,172,8,7,0,0,0,1,2,1,179,8,7,0,0,0,1,2,1,221,8,7,0,0,0,1,2,1,220,8,7,0,0,0,1,2,2,104,9,7,10,0,0,1,2,1,223,8,7,0,0,0,1,2,1,174,8,7,0,0,0,1,2,1,175,8,7,0,0,0,1,2,1,176,8,7,0,0,0,1,2,1,177,8,7,0,0,0,1,2,1,178,8,7,0,0,0,1,2,1,180,8,7,0,0,0,1,2,1,194,8,7,0,0,0,1,2,1,184,8,7,0,0,0,1,2,1,182,8,7,0,0,0,1,2,1,209,8,7,0,0,0,1,2,1,181,8,7,0,0,0,1,2,2,210,8,7,3,0,0,1,2,2,211,8,7,6,0,0,1,2,1,214,0,7,0,0,0,1,2,1,87,9,7,0,0,0,1,2,1,86,9,7,0,0,0,1,2,1,215,0,7,0,0,0,1,2,1,105,9,7,0,0,0,1,2,3,213,8,7,3,6,0,1,2,1,212,8,7,0,0,0,1,2,1,195,8,7,0,0,0,1,2,1,186,8,7,0,0,0,1,2,1,185,8,7,0,0,0,1,2,1,183,8,7,0,0,0,1,2,1,187,8,7,0,0,0,1,2,1,199,0,7,0,0,0,1,2,1,219,8,7,0,0,0,1,2,1,218,8,7,0,0,0,1,2,1,214,8,7,0,0,0,1,2,1,197,0,7,0,0,0,1,2,1,216,8,7,0,0,0,1,2,1,88,9,7,0,0,0,1,2,1,84,9,7,0,0,0,1,2,1,91,9,7,0,0,0,1,2,1,93,9,7,0,0,0,1,2,1,99,9,7,0,0,0,1,2,1,97,9,7,0,0,0,1,2,1,100,9,7,0,0,0,1,2,1,90,9,7,0,0,0,1,2,1,89,9,7,0,0,0,1,2,1,217,8,7,0,0,0,1,2,1,198,0,7,0,0,0,1,2,1,215,8,7,0,0,0,1,2,1,79,9,7,0,0,0,1,2,1,80,9,7,0,0,0,1,2,1,78,9,7,0,0,0,1,2,1,76,9,7,0,0,0,1,2,1,77,9,7,0,0,0,1,2,1,75,9,7,0,0,0,1,2,1,101,9,7,0,0,0,1,2,1,92,9,7,0,0,0,1,2,1,98,9,7,0,0,0,1,2,1,95,9,7,0,0,0,1,2,1,96,9,7,0,0,0,1,2,1,94,9,7,0,0,0,1,2,1,70,9,7,0,0,0,1,2,1,85,9,7,0,0,0,1,2,1,73,9,7,0,0,0,1,2,1,69,9,7,0,0,0,1,2,1,71,9,7,0,0,0,1,2,1,74,9,7,0,0,0,1,2,1,135,8,7,0,0,0,1,2,1,68,9,7,0,0,0,1,2,1,127,8,7,0,0,0,1,2,1,192,0,7,0,0,0,1,2,1,190,0,7,0,0,0,1,2,1,189,0,7,0,0,0,1,2,1,124,8,7,0,0,0,1,2,1,188,0,7,0,0,0,1,2,1,123,8,7,0,0,0,1,2,1,122,8,7,0,0,0,1,2,1,152,9,7,0,0,0,1,2,1,153,9,7,0,0,0,1,2,1,126,8,7,0,0,0,1,2,1,134,8,7,0,0,0,1,2,1,136,8,7,0,0,0,1,2,1,137,8,7,0,0,0,1,2,1,67,9,7,0,0,0,1,2,1,125,8,7,0,0,0,1,2,1,142,8,7,0,0,0,1,2,1,140,8,7,0,0,0,1,2,1,141,8,7,0,0,0,1,2,1,139,8,7,0,0,0,1,2,1,138,8,7,0,0,0,1,2,1,65,9,7,0,0,0,1,2,1,64,9,7,0,0,0,1,2,1,66,9,7,0,0,0,1,2,1,72,9,7,0,0,0,1,2,1,82,9,7,0,0,0,1,2,1,81,9,7,0,0,0,1,2,1,83,9,7,0,0,0,1,2,1,126,9,7,0,0,0,1,2,1,125,9,7,0,0,0,1,2,1,124,9,7,0,0,0,1,2,1,123,9,7,0,0,0,1,2,1,111,8,7,0,0,0,1,2,1,129,8,7,0,0,0,1,2,1,191,0,7,0,0,0,1,2,1,128,8,7,0,0,0,1,2,1,186,0,7,0,0,0,1,2,1,121,8,7,0,0,0,1,2,1,187,0,7,0,0,0,1,2,1,132,8,7,0,0,0,1,2,1,133,8,7,0,0,0,1,2,1,245,8,7,0,0,0,1,2,1,246,8,7,0,0,0,1,2,1,205,0,7,0,0,0,1,2,1,106,8,7,0,0,0,1,2,1,105,8,7,0,0,0,1,2,1,130,8,7,0,0,0,1,2,1,131,8,7,0,0,0,1,2,1,247,8,7,0,0,0,1,2,1,244,8,7,0,0,0,1,2,1,102,9,7,0,0,0,1,2,2,107,9,7,10,0,0,1,2,1,106,9,7,0,0,0,1,2,1,169,8,7,0,0,0,1,2,1,1,9,7,0,0,0,1,2,1,103,9,7,0,0,0,1,2,1,232,8,7,0,0,0,1,2,1,151,9,7,0,0,0,1,2,1,201,0,7,0,0,0,1,2,1,108,8,7,0,0,0,1,2,1,144,8,7,0,0,0,1,2,1,143,8,7,0,0,0,1,2,1,185,0,7,0,0,0,1,2,1,107,8,7,0,0,0,1,2,1,150,8,7,0,0,0,1,2,1,151,8,7,0,0,0,1,2,1,152,8,7,0,0,0,1,2,1,149,8,7,0,0,0,1,2,1,148,8,7,0,0,0,1,2,1,147,8,7,0,0,0,1,2,1,145,8,7,0,0,0,1,2,1,195,0,7,0,0,0,1,2,1,194,0,7,0,0,0,1,2,1,193,0,7,0,0,0,1,2,1,103,8,7,0,0,0,1,2,1,184,0,7,0,0,0,1,2,1,146,8,7,0,0,0,1,2,1,104,8,7,0,0,0,1,2,1,109,8,7,0,0,0,1,2,1,110,8,7,0,0,0,1,2,1,113,8,7,0,0,0,1,2,1,114,8,7,0,0,0,1,2,1,115,8,7,0,0,0,1,2,1,112,8,7,0,0,0,1,2,1,227,8,7,0,0,0,1,2,1,228,8,7,0,0,0,1,2,1,231,8,7,0,0,0,1,2,1,229,8,7,0,0,0,1,2,1,230,8,7,0,0,0,1,2,1,226,8,7,0,0,0,1,2,1,200,0,7,0,0,0,1,2,1,163,8,7,0,0,0,1,2,1,166,8,7,0,0,0,1,2,1,164,8,7,0,0,0,1,2,1,167,8,7,0,0,0,1,2,1,168,8,7,0,0,0,1,2,1,165,8,7,0,0,0,1,2,1,192,8,7,0,0,0,1,2,1,197,8,7,0,0,0,1,2,1,196,8,7,0,0,0,1,2,1,198,8,7,0,0,0,1,2,1,199,8,7,0,0,0,1,2,1,200,8,7,0,0,0,1,2,1,211,0,7,0,0,0,1,2,1,14,9,7,0,0,0,1,2,1,188,8,7,0,0,0,1,2,1,190,8,7,0,0,0,1,2,1,189,8,7,0,0,0,1,2,1,193,8,7,0,0,0,1,2,1,191,8,7,0,0,0,1,2,1,22,9,7,0,0,0,1,2,1,120,8,7,0,0,0,1,2,1,117,8,7,0,0,0,1,2,1,234,8,7,0,0,0,1,2,1,235,8,7,0,0,0,1,2,1,233,8,7,0,0,0,1,2,1,202,0,7,0,0,0,1,2,1,203,0,7,0,0,0,1,2,1,239,8,7,0,0,0,1,2,1,241,8,7,0,0,0,1,2,1,238,8,7,0,0,0,1,2,1,240,8,7,0,0,0,1,2,1,237,8,7,0,0,0,1,2,1,116,8,7,0,0,0,1,2,1,118,8,7,0,0,0,1,2,1,119,8,7,0,0,0,1,2,1,236,8,7,0,0,0,1,2,1,242,8,7,0,0,0,1,2,1,145,9,7,0,0,0,1,2,1,147,9,7,0,0,0,1,2,1,243,8,7,0,0,0,1,2,1,143,9,7,0,0,0,1,2,1,148,9,7,0,0,0,1,2,1,217,0,7,0,0,0,1,2,1,146,9,7,0,0,0,1,2,1,149,9,7,0,0,0,1,2,1,150,9,7,0,0,0,1,2,1,144,9,7,0,0,0,1,2,1,142,9,7,0,0,0,1,2,1,140,9,7,0,0,0,1,2,1,134,9,7,0,0,0,1,2,1,128,9,7,0,0,0,1,2,1,130,9,7,0,0,0,1,2,1,216,0,7,0,0,0,1,2,1,129,9,7,0,0,0,1,2,1,139,9,7,0,0,0,1,2,2,183,10,17,18,0,0,1,2,2,253,10,17,18,0,0,1,2,2,251,10,17,18,0,0,1,2,1,239,10,17,0,0,0,1,2,2,240,10,17,9,0,0,1,2,2,191,10,17,9,0,0,1,2,2,192,10,17,9,0,0,1,2,1,238,10,17,0,0,0,1,2,1,201,10,17,0,0,0,1,2,2,199,10,9,17,0,0,1,2,2,189,10,9,17,0,0,1,2,2,190,10,9,17,0,0,1,2,1,154,10,9,0,0,0,1,2,1,157,10,9,0,0,0,1,2,2,200,10,17,9,0,0,1,2,2,202,10,17,9,0,0,1,2,1,226,10,17,0,0,0,1,2,1,216,10,17,0,0,0,1,2,1,152,10,9,0,0,0,1,2,1,155,10,9,0,0,0,1,2,2,156,10,9,3,0,0,1,2,2,171,10,9,3,0,0,1,2,2,172,10,9,17,0,0,1,2,2,212,10,17,9,0,0,1,2,1,218,10,17,0,0,0,1,2,1,225,10,17,0,0,0,1,2,1,241,10,17,0,0,0,1,2,2,1,11,17,18,0,0,1,2,1,124,4,0,0,0,0,1,2,1,130,4,0,0,0,0,1,2,1,3,5,0,0,0,0,1,2,1,123,4,0,0,0,0,1,2,1,172,0,0,0,0,0,1,2,1,128,4,0,0,0,0,1,2,1,129,4,0,0,0,0,1,2,1,127,4,0,0,0,0,1,2,1,125,4,0,0,0,0,1,2,1,126,4,0,0,0,0,1,2,1,135,4,0,0,0,0,1,2,1,136,4,0,0,0,0,1,2,1,7,4,0,0,0,0,1,2,1,32,4,0,0,0,0,1,2,1,73,4,0,0,0,0,1,2,1,8,4,0,0,0,0,1,2,1,31,0,0,0,0,0,1,2,1,222,3,0,0,0,0,1,2,1,208,3,0,0,0,0,1,2,1,38,0,0,0,0,0,1,2,1,37,0,0,0,0,0,1,2,1,213,3,0,0,0,0,1,2,1,40,0,0,0,0,0,1,2,1,216,3,0,0,0,0,1,2,1,41,0,0,0,0,0,1,2,1,39,0,0,0,0,0,1,2,1,214,3,0,0,0,0,1,2,1,215,3,0,0,0,0,1,2,1,24,4,0,0,0,0,1,2,1,49,0,0,0,0,0,1,2,1,108,4,0,0,0,0,1,2,1,107,4,0,0,0,0,1,2,1,31,4,0,0,0,0,1,2,1,36,0,0,0,0,0,1,2,1,219,3,0,0,0,0,1,2,1,33,0,0,0,0,0,1,2,1,34,0,0,0,0,0,1,2,1,69,0,0,0,0,0,1,2,1,240,3,0,0,0,0,1,2,1,52,0,0,0,0,0,1,2,1,251,3,0,0,0,0,1,2,1,57,0,0,0,0,0,1,2,1,55,0,0,0,0,0,1,2,1,54,0,0,0,0,0,1,2,1,59,0,0,0,0,0,1,2,1,53,0,0,0,0,0,1,2,1,237,3,0,0,0,0,1,2,1,235,3,0,0,0,0,1,2,1,231,3,0,0,0,0,1,2,1,250,3,0,0,0,0,1,2,1,110,4,0,0,0,0,1,2,1,253,3,0,0,0,0,1,2,1,16,4,0,0,0,0,1,2,1,90,0,0,0,0,0,1,2,2,81,0,0,5,0,0,1,2,1,26,4,0,0,0,0,1,2,1,56,0,0,0,0,0,1,2,1,252,3,0,0,0,0,1,2,1,248,3,0,0,0,0,1,2,1,50,0,0,0,0,0,1,2,1,236,3,0,0,0,0,1,2,1,66,0,0,0,0,0,1,2,3,107,0,2,4,24,0,1,2,3,109,0,2,24,4,0,1,2,3,110,0,2,4,24,0,1,2,3,108,0,2,24,4,0,1,2,3,106,0,2,24,0,0,1,2,2,111,0,2,0,0,0,1,2,3,29,4,24,0,2,0,1,2,2,28,4,0,2,0,0,1,2,1,27,4,0,0,0,0,1,2,1,67,0,0,0,0,0,1,2,1,249,3,0,0,0,0,1,2,1,233,3,0,0,0,0,1,2,1,51,0,0,0,0,0,1,2,1,232,3,0,0,0,0,1,2,3,47,4,24,27,2,0,1,2,1,234,3,0,0,0,0,1,2,1,68,0,0,0,0,0,1,2,1,38,4,0,0,0,0,1,2,1,242,3,0,0,0,0,1,2,1,238,3,0,0,0,0,1,2,1,58,0,0,0,0,0,1,2,1,63,0,0,0,0,0,1,2,1,64,0,0,0,0,0,1,2,1,246,3,0,0,0,0,1,2,1,65,0,0,0,0,0,1,2,1,247,3,0,0,0,0,1,2,1,245,3,0,0,0,0,1,2,1,62,0,0,0,0,0,1,2,1,60,0,0,0,0,0,1,2,1,86,0,0,0,0,0,1,2,1,220,3,0,0,0,0,1,2,1,221,3,0,0,0,0,1,2,1,239,3,0,0,0,0,1,2,1,61,0,0,0,0,0,1,2,1,241,3,0,0,0,0,1,2,1,243,3,0,0,0,0,1,2,1,91,0,0,0,0,0,1,2,1,42,4,0,0,0,0,1,2,1,39,4,0,0,0,0,1,2,1,92,0,0,0,0,0,1,2,1,93,0,0,0,0,0,1,2,1,94,0,0,0,0,0,1,2,1,85,0,0,0,0,0,1,2,1,19,4,0,0,0,0,1,2,1,244,3,0,0,0,0,1,2,1,89,0,0,0,0,0,1,2,1,87,0,0,0,0,0,1,2,1,134,4,0,0,0,0,1,2,1,112,0,0,0,0,0,1,2,1,57,4,0,0,0,0,1,2,1,133,4,0,0,0,0,1,2,1,132,4,0,0,0,0,1,2,1,174,0,0,0,0,0,1,2,1,58,4,0,0,0,0,1,2,1,131,4,0,0,0,0,1,2,1,173,0,0,0,0,0,1,2,1,116,0,0,0,0,0,1,2,1,113,0,0,0,0,0,1,2,1,95,0,0,0,0,0,1,2,1,88,0,0,0,0,0,1,2,2,20,4,0,29,0,0,1,2,2,23,4,0,29,0,0,1,2,2,22,4,0,29,0,0,1,2,1,125,0,0,0,0,0,1,2,1,66,4,0,0,0,0,1,2,3,100,0,0,24,28,0,1,2,3,119,0,0,24,28,0,1,2,3,59,4,3,0,29,0,1,2,2,21,4,0,29,0,0,1,2,2,25,4,0,29,0,0,1,2,2,68,4,0,29,0,0,1,2,1,122,0,0,0,0,0,1,2,1,61,4,0,0,0,0,1,2,2,117,0,29,0,0,0,1,2,2,118,0,29,0,0,0,1,2,3,44,4,24,3,0,0,1,2,2,60,4,3,0,0,0,1,2,1,81,4,0,0,0,0,1,2,1,134,0,0,0,0,0,1,2,1,135,0,0,0,0,0,1,2,1,82,4,0,0,0,0,1,2,1,167,0,0,0,0,0,1,2,3,46,4,24,27,2,0,1,2,3,56,4,4,0,2,0,1,2,3,62,4,24,3,27,0,1,2,3,120,0,4,24,27,0,1,2,3,101,0,28,24,27,0,1,2,3,98,0,0,3,28,0,1,2,3,99,0,0,28,24,0,1,2,3,97,0,0,3,27,0,1,2,3,43,4,24,3,0,0,1,2,3,104,4,4,3,0,0,1,2,2,105,4,3,0,0,0,1,2,2,83,4,3,0,0,0,1,2,1,84,4,0,0,0,0,1,2,3,45,4,3,27,0,0,1,2,3,96,0,0,3,24,0,1,2,3,115,0,0,24,27,0,1,2,3,114,0,0,24,4,0,1,2,3,102,0,24,28,0,0,1,2,3,103,0,24,28,4,0,1,2,3,104,0,4,24,27,0,1,2,3,105,0,24,4,27,0,1,2,2,41,4,0,2,0,0,1,2,1,40,4,0,0,0,0,1,2,2,30,4,0,2,0,0,1,2,3,51,4,4,24,2,0,1,2,2,55,4,0,2,0,0,1,2,3,54,4,4,0,2,0,1,2,3,50,4,4,24,2,0,1,2,3,49,4,4,24,2,0,1,2,3,48,4,24,27,2,0,1,2,2,80,0,0,5,0,0,1,2,3,17,4,0,2,5,0,1,2,2,82,0,0,5,0,0,1,2,1,65,4,5,0,0,0,1,2,1,37,4,5,0,0,0,1,2,2,52,4,4,2,0,0,1,2,1,53,4,2,0,0,0,1,2,2,64,4,4,2,0,0,1,2,1,63,4,5,0,0,0,1,2,1,79,0,0,0,0,0,1,2,1,15,4,0,0,0,0,1,2,3,18,4,0,2,5,0,1,2,3,14,4,0,2,5,0,1,2,1,13,4,5,0,0,0,1,2,1,12,4,5,0,0,0,1,2,1,11,4,5,0,0,0,1,2,1,254,3,5,0,0,0,1,2,1,0,4,5,0,0,0,1,2,1,255,3,5,0,0,0,1,2,1,127,0,5,0,0,0,1,2,1,170,0,5,0,0,0,1,2,1,128,0,5,0,0,0,1,2,1,106,4,5,0,0,0,1,2,1,2,4,5,0,0,0,1,2,1,1,4,5,0,0,0,1,2,3,3,4,0,1,5,0,1,2,1,137,4,5,0,0,0,1,2,1,138,4,5,0,0,0,1,2,1,139,4,5,0,0,0,1,2,3,10,4,0,1,5,0,1,2,1,34,4,5,0,0,0,1,2,2,74,4,3,0,0,0,1,2,1,121,0,5,0,0,0,1,2,1,33,4,5,0,0,0,1,2,3,35,4,4,0,2,0,1,2,1,36,4,5,0,0,0,1,2,2,73,0,0,5,0,0,1,2,3,9,4,0,1,5,0,1,2,2,72,0,0,5,0,0,1,2,2,71,0,0,5,0,0,1,2,1,70,0,0,0,0,0,1,2,1,6,4,0,0,0,0,1,2,1,4,4,0,0,0,0,1,2,1,5,4,0,0,0,0,1,2,1,210,3,0,0,0,0,1,2,1,35,0,0,0,0,0,1,2,1,211,3,0,0,0,0,1,2,1,30,0,0,0,0,0,1,2,1,207,3,0,0,0,0,1,2,1,228,3,0,0,0,0,1,2,1,227,3,0,0,0,0,1,2,1,109,4,0,0,0,0,1,2,1,230,3,0,0,0,0,1,2,1,126,0,0,0,0,0,1,2,2,70,4,0,1,0,0,1,2,2,72,4,0,1,0,0,1,2,2,156,0,1,0,0,0,1,2,2,71,4,0,1,0,0,1,2,1,46,0,0,0,0,0,1,2,1,223,3,0,0,0,0,1,2,1,218,3,0,0,0,0,1,2,1,217,3,0,0,0,0,1,2,1,47,0,0,0,0,0,1,2,1,209,3,0,0,0,0,1,2,1,206,3,0,0,0,0,1,2,1,45,0,0,0,0,0,1,2,1,44,0,0,0,0,0,1,2,1,131,0,0,0,0,0,1,2,1,130,0,0,0,0,0,1,2,1,129,0,0,0,0,0,1,2,1,75,4,0,0,0,0,1,2,1,48,0,0,0,0,0,1,2,1,226,3,0,0,0,0,1,2,1,225,3,0,0,0,0,1,2,1,229,3,0,0,0,0,1,2,2,69,4,0,1,0,0,1,2,1,132,0,0,0,0,0,1,2,2,79,4,0,1,0,0,1,2,2,95,4,0,1,0,0,1,2,1,96,4,0,0,0,0,1,2,1,78,4,0,0,0,0,1,2,1,80,4,0,0,0,0,1,2,1,77,4,0,0,0,0,1,2,1,76,4,0,0,0,0,1,2,1,171,0,0,0,0,0,1,2,1,118,4,0,0,0,0,1,2,1,119,4,0,0,0,0,1,2,1,97,4,0,0,0,0,1,2,1,94,4,0,0,0,0,1,2,2,88,4,0,1,0,0,1,2,3,87,4,3,0,1,0,1,2,2,89,4,0,1,0,0,1,2,2,145,0,0,1,0,0,1,2,2,86,4,0,1,0,0,1,2,2,144,0,0,1,0,0,1,2,1,142,0,0,0,0,0,1,2,1,141,0,0,0,0,0,1,2,1,165,0,0,0,0,0,1,2,1,117,4,0,0,0,0,1,2,1,164,0,0,0,0,0,1,2,1,133,0,0,0,0,0,1,2,2,166,0,0,1,0,0,1,2,2,146,0,0,1,0,0,1,2,1,99,4,0,0,0,0,1,2,1,140,0,0,0,0,0,1,2,1,143,0,0,0,0,0,1,2,1,136,0,0,0,0,0,1,2,1,137,0,0,0,0,0,1,2,1,139,0,0,0,0,0,1,2,1,138,0,0,0,0,0,1,2,1,85,4,0,0,0,0,1,2,1,123,0,0,0,0,0,1,2,1,67,4,0,0,0,0,1,2,1,124,0,0,0,0,0,1,2,1,98,4,0,0,0,0,1,2,2,61,1,0,1,0,0,1,2,2,60,1,0,1,0,0,1,2,2,63,1,0,1,0,0,1,2,2,64,1,0,1,0,0,1,2,2,59,1,0,1,0,0,1,2,2,62,1,0,1,0,0,1,2,1,66,1,0,0,0,0,1,2,1,27,1,0,0,0,0,1,2,2,65,1,0,2,0,0,1,2,2,74,1,0,2,0,0,1,2,1,75,1,0,0,0,0,1,2,2,73,1,0,2,0,0,1,2,2,72,1,0,2,0,0,1,2,2,70,1,0,2,0,0,1,2,2,69,1,0,2,0,0,1,2,2,71,1,0,2,0,0,1,2,3,67,1,4,3,0,0,1,2,3,68,1,4,3,0,0,1,2,1,5,5,0,0,0,0,1,2,3,76,1,3,0,2,0,1,2,3,77,1,3,0,2,0,1,2,1,78,1,0,0,0,0,1,2,2,144,2,41,42,0,0,1,2,3,145,2,15,41,42,0,1,2,1,128,2,15,0,0,0,1,2,2,146,2,41,42,0,0,1,2,2,150,2,41,42,0,0,1,2,2,149,2,41,42,0,0,1,2,2,147,2,41,42,0,0,1,2,2,148,2,41,42,0,0,1,2,3,155,2,40,41,42,0,1,2,2,156,2,41,42,0,0,1,2,2,152,2,41,42,0,0,1,2,2,101,2,41,42,0,0,1,2,2,158,2,41,42,0,0,1,2,2,99,2,41,42,0,0,1,2,2,151,2,41,42,0,0,1,2,2,100,2,41,42,0,0,1,2,2,106,2,41,42,0,0,1,2,2,105,2,41,42,0,0,1,2,1,95,2,15,0,0,0,1,2,1,93,2,15,0,0,0,1,2,1,127,2,15,0,0,0,1,2,3,94,2,21,40,41,0,1,2,2,77,2,16,15,0,0,1,2,3,102,2,40,41,42,0,1,2,2,206,2,18,17,0,0,1,2,2,204,2,18,17,0,0,1,2,3,50,2,18,17,16,0,1,2,3,53,2,4,17,16,0,1,2,2,51,2,17,16,0,0,1,2,2,54,2,17,16,0,0,1,2,2,56,2,17,16,0,0,1,2,1,57,2,16,0,0,0,1,2,1,61,2,16,0,0,0,1,2,2,78,2,16,15,0,0,1,2,1,126,2,15,0,0,0,1,2,1,125,2,15,0,0,0,1,2,1,124,2,15,0,0,0,1,2,3,154,2,15,22,23,0,1,2,3,121,2,15,22,23,0,1,2,2,205,2,4,17,0,0,1,2,1,120,2,15,0,0,0,1,2,1,118,2,15,0,0,0,1,2,1,123,2,15,0,0,0,1,2,1,117,2,15,0,0,0,1,2,2,75,2,16,15,0,0,1,2,1,62,2,16,0,0,0,1,2,1,59,2,16,0,0,0,1,2,2,74,2,16,15,0,0,1,2,1,60,2,16,0,0,0,1,2,3,66,2,16,15,19,0,1,2,2,116,2,16,15,0,0,1,2,3,119,2,15,21,22,0,1,2,3,122,2,15,21,22,0,1,2,3,153,2,21,22,23,0,1,2,3,84,2,15,21,22,0,1,2,2,69,2,16,15,0,0,1,2,3,67,2,16,19,20,0,1,2,2,107,2,19,20,0,0,1,2,2,108,2,19,20,0,0,1,2,2,111,2,19,20,0,0,1,2,2,112,2,19,20,0,0,1,2,2,110,2,19,20,0,0,1,2,2,109,2,19,20,0,0,1,2,2,73,2,19,20,0,0,1,2,2,113,2,19,20,0,0,1,2,2,72,2,19,20,0,0,1,2,2,115,2,19,20,0,0,1,2,2,114,2,19,20,0,0,1,2,2,103,2,19,20,0,0,1,2,3,70,2,16,19,20,0,1,2,3,68,2,16,15,19,0,1,2,1,63,2,16,0,0,0,1,2,2,58,2,17,16,0,0,1,2,2,46,2,17,16,0,0,1,2,3,55,2,17,16,15,0,1,2,2,48,2,17,16,0,0,1,2,2,49,2,17,16,0,0,1,2,2,47,2,17,16,0,0,1,2,3,250,4,18,17,16,0,1,2,2,52,2,18,17,0,0,1,2,2,235,0,17,18,0,0,1,2,2,2,5,18,17,0,0,1,2,2,233,0,17,16,0,0,1,2,2,41,2,17,16,0,0,1,2,2,42,2,17,16,0,0,1,2,2,39,2,17,16,0,0,1,2,2,38,2,17,16,0,0,1,2,2,37,2,17,16,0,0,1,2,2,36,2,17,16,0,0,1,2,1,232,0,17,0,0,0,1,2,2,202,2,17,16,0,0,1,2,1,252,4,17,0,0,0,1,2,1,234,0,17,0,0,0,1,2,1,203,2,17,0,0,0,1,2,1,199,2,17,0,0,0,1,2,1,200,2,17,0,0,0,1,2,3,43,2,4,17,16,0,1,2,2,201,2,4,17,0,0,1,2,2,44,2,17,16,0,0,1,2,1,45,2,16,0,0,0,1,2,2,65,2,17,16,0,0,1,2,2,79,2,16,15,0,0,1,2,2,76,2,16,15,0,0,1,2,3,88,2,16,19,20,0,1,2,2,71,2,16,15,0,0,1,2,2,64,2,17,16,0,0,1,2,2,40,2,17,16,0,0,1,2,3,91,2,21,40,41,0,1,2,3,133,2,40,41,42,0,1,2,2,90,2,22,23,0,0,1,2,3,82,2,21,22,23,0,1,2,1,80,2,21,0,0,0,1,2,2,85,2,19,20,0,0,1,2,2,96,2,22,23,0,0,1,2,2,92,2,22,23,0,0,1,2,2,86,2,19,20,0,0,1,2,2,87,2,19,20,0,0,1,2,2,89,2,16,15,0,0,1,2,3,83,2,15,21,22,0,1,2,3,81,2,21,22,23,0,1,2,2,104,2,22,23,0,0,1,2,2,97,2,22,23,0,0,1,2,2,143,2,22,23,0,0,1,2,2,142,2,22,23,0,0,1,2,2,98,2,22,23,0,0,1,2,3,132,2,15,21,22,0,1,2,3,134,2,15,22,23,0,1,2,3,157,2,15,41,42,0,1,2,2,129,2,22,23,0,0,1,2,3,130,2,15,21,22,0,1,2,2,131,2,22,23,0,0,1,2,2,135,2,22,23,0,0,1,2,2,141,2,22,23,0,0,1,2,2,140,2,22,23,0,0,1,2,2,139,2,22,23,0,0,1,2,2,137,2,22,23,0,0,1,2,2,138,2,22,23,0,0,1,2,2,136,2,22,23,0,0,1,2,2,204,4,30,31,0,0,1,2,2,195,4,30,31,0,0,1,2,3,157,4,30,31,32,0,1,2,1,207,4,31,0,0,0,1,2,3,211,4,30,31,36,0,1,2,1,208,4,31,0,0,0,1,2,2,212,4,30,31,0,0,1,2,2,164,4,30,31,0,0,1,2,1,163,4,30,0,0,0,1,2,1,155,4,30,0,0,0,1,2,2,159,4,31,32,0,0,1,2,2,244,0,32,33,0,0,1,2,2,143,4,28,30,0,0,1,2,2,144,4,28,30,0,0,1,2,2,151,4,28,30,0,0,1,2,1,152,4,30,0,0,0,1,2,2,165,4,30,31,0,0,1,2,1,205,4,31,0,0,0,1,2,1,206,4,31,0,0,0,1,2,1,154,4,30,0,0,0,1,2,2,147,4,28,30,0,0,1,2,2,168,4,30,31,0,0,1,2,2,182,4,30,31,0,0,1,2,2,203,4,32,33,0,0,1,2,2,202,4,32,33,0,0,1,2,2,1,1,32,33,0,0,1,2,2,191,4,32,33,0,0,1,2,2,197,4,32,33,0,0,1,2,2,245,0,32,33,0,0,1,2,3,160,4,30,31,32,0,1,2,2,156,4,28,30,0,0,1,2,1,247,0,30,0,0,0,1,2,2,142,4,28,30,0,0,1,2,1,13,3,28,0,0,0,1,2,2,249,0,30,28,0,0,1,2,1,8,3,28,0,0,0,1,2,1,236,0,28,0,0,0,1,2,1,246,0,28,0,0,0,1,2,2,248,0,30,28,0,0,1,2,2,145,4,28,30,0,0,1,2,1,242,0,28,0,0,0,1,2,2,10,3,4,28,0,0,1,2,2,11,3,4,28,0,0,1,2,1,9,3,28,0,0,0,1,2,1,7,3,28,0,0,0,1,2,1,12,3,28,0,0,0,1,2,1,237,0,28,0,0,0,1,2,2,148,4,28,30,0,0,1,2,2,253,0,30,28,0,0,1,2,1,153,4,30,0,0,0,1,2,1,167,4,30,0,0,0,1,2,3,183,4,37,39,35,0,1,2,2,254,0,30,28,0,0,1,2,1,150,4,30,0,0,0,1,2,1,252,0,28,0,0,0,1,2,2,149,4,28,30,0,0,1,2,1,250,0,28,0,0,0,1,2,1,14,3,28,0,0,0,1,2,1,238,0,28,0,0,0,1,2,1,243,0,28,0,0,0,1,2,1,240,0,28,0,0,0,1,2,1,239,0,28,0,0,0,1,2,1,15,3,28,0,0,0,1,2,1,241,0,28,0,0,0,1,2,1,16,3,28,0,0,0,1,2,1,17,3,28,0,0,0,1,2,2,18,3,4,28,0,0,1,2,2,189,4,35,34,0,0,1,2,3,190,4,39,35,34,0,1,2,1,186,4,34,0,0,0,1,2,1,239,4,34,0,0,0,1,2,2,245,4,35,34,0,0,1,2,1,238,4,34,0,0,0,1,2,1,187,4,31,0,0,0,1,2,1,188,4,34,0,0,0,1,2,1,194,4,34,0,0,0,1,2,2,193,4,35,34,0,0,1,2,2,232,4,35,34,0,0,1,2,1,216,4,31,0,0,0,1,2,1,215,4,31,0,0,0,1,2,1,214,4,31,0,0,0,1,2,1,213,4,31,0,0,0,1,2,3,210,4,30,31,36,0,1,2,3,209,4,31,36,38,0,1,2,3,241,4,31,36,38,0,1,2,3,231,4,31,35,34,0,1,2,2,233,4,35,34,0,0,1,2,1,237,4,34,0,0,0,1,2,1,235,4,34,0,0,0,1,2,1,234,4,34,0,0,0,1,2,2,236,4,35,34,0,0,1,2,3,242,4,39,35,34,0,1,2,2,243,4,35,34,0,0,1,2,3,240,4,30,31,36,0,1,2,1,174,4,31,0,0,0,1,2,2,158,4,31,32,0,0,1,2,2,196,4,32,33,0,0,1,2,2,200,4,32,33,0,0,1,2,2,199,4,32,33,0,0,1,2,2,198,4,32,33,0,0,1,2,3,161,4,30,32,33,0,1,2,2,201,4,32,33,0,0,1,2,2,162,4,32,33,0,0,1,2,3,244,4,31,35,34,0,1,2,3,222,4,31,36,38,0,1,2,3,221,4,39,35,34,0,1,2,2,217,4,36,38,0,0,1,2,2,218,4,36,38,0,0,1,2,3,219,4,31,36,38,0,1,2,3,170,4,32,37,36,0,1,2,3,180,4,37,39,35,0,1,2,2,173,4,36,38,0,0,1,2,2,179,4,36,38,0,0,1,2,2,185,4,36,38,0,0,1,2,2,223,4,36,38,0,0,1,2,1,227,4,38,0,0,0,1,2,1,2,1,38,0,0,0,1,2,1,226,4,38,0,0,0,1,2,1,225,4,38,0,0,0,1,2,2,224,4,36,38,0,0,1,2,1,228,4,38,0,0,0,1,2,3,166,4,30,31,32,0,1,2,1,146,4,30,0,0,0,1,2,1,169,4,30,0,0,0,1,2,2,255,0,32,33,0,0,1,2,2,176,4,32,33,0,0,1,2,1,251,0,28,0,0,0,1,2,2,175,4,32,33,0,0,1,2,2,177,4,32,33,0,0,1,2,2,178,4,31,32,0,0,1,2,1,172,4,31,0,0,0,1,2,3,171,4,30,31,36,0,1,2,2,181,4,36,38,0,0,1,2,1,0,1,38,0,0,0,1,2,1,229,4,38,0,0,0,1,2,1,230,4,38,0,0,0,1,2,1,184,4,38,0,0,0,1,2,2,192,4,36,38,0,0,1,2,3,220,4,31,36,38,0,1,2,2,215,2,24,3,0,0,1,2,3,219,2,24,3,27,0,1,2,3,227,2,4,0,2,0,1,2,3,220,2,24,3,27,0,1,2,3,224,2,24,3,28,0,1,2,3,217,2,4,24,3,0,1,2,3,4,0,24,3,28,0,1,2,3,226,2,4,24,28,0,1,2,3,9,0,24,28,4,0,1,2,3,6,0,24,28,3,0,1,2,2,5,0,24,28,0,0,1,2,2,1,0,24,0,0,0,1,2,3,233,2,24,28,0,0,1,2,2,242,2,24,28,0,0,1,2,2,11,0,24,28,0,0,1,2,3,234,2,4,24,28,0,1,2,1,235,2,28,0,0,0,1,2,3,239,2,4,24,28,0,1,2,2,225,2,4,24,0,0,1,2,3,216,2,4,24,3,0,1,2,2,218,2,4,3,0,0,1,2,1,228,2,5,0,0,0,1,2,2,174,2,4,24,0,0,1,2,1,0,3,10,0,0,0,1,2,2,21,3,10,4,0,0,1,2,3,20,3,10,4,28,0,1,2,2,254,2,4,28,0,0,1,2,1,255,2,10,0,0,0,1,2,3,1,3,4,24,28,0,1,2,2,6,3,4,28,0,0,1,2,3,5,3,4,24,28,0,1,2,1,240,2,28,0,0,0,1,2,1,237,2,28,0,0,0,1,2,1,236,2,28,0,0,0,1,2,1,243,2,28,0,0,0,1,2,1,241,2,28,0,0,0,1,2,2,232,2,4,24,0,0,1,2,2,244,2,24,27,0,0,1,2,3,230,2,4,24,3,0,1,2,3,3,0,24,0,4,0,1,2,3,231,2,4,24,3,0,1,2,2,8,0,24,4,0,0,1,2,3,249,2,4,24,28,0,1,2,1,245,2,28,0,0,0,1,2,1,12,0,28,0,0,0,1,2,1,238,2,28,0,0,0,1,2,1,13,0,28,0,0,0,1,2,1,251,2,28,0,0,0,1,2,1,250,2,28,0,0,0,1,2,3,247,2,10,25,24,0,1,2,3,252,2,10,4,28,0,1,2,2,253,2,4,28,0,0,1,2,1,19,3,10,0,0,0,1,2,2,22,3,10,4,0,0,1,2,3,248,2,10,4,24,0,1,2,3,246,2,10,4,24,0,1,2,3,222,2,4,3,0,0,1,2,3,229,2,24,3,0,0,1,2,3,2,0,4,3,0,0,1,2,3,7,0,4,3,18,0,1,2,2,175,2,4,18,0,0,1,2,1,10,0,4,0,0,0,1,2,3,184,2,10,25,4,0,1,2,1,208,2,10,0,0,0,1,2,2,207,2,10,18,0,0,1,2,3,183,2,10,4,18,0,1,2,3,188,2,10,25,18,0,1,2,3,26,0,18,4,10,0,1,2,2,27,0,18,17,0,0,1,2,3,209,2,10,26,4,0,1,2,3,221,2,24,3,0,0,1,2,3,247,4,24,3,0,0,1,2,3,214,2,10,26,4,0,1,2,3,186,2,10,4,17,0,1,2,2,185,2,18,17,0,0,1,2,2,28,0,17,18,0,0,1,2,2,29,0,17,18,0,0,1,2,2,1,5,18,17,0,0,1,2,2,255,4,18,17,0,0,1,2,1,182,2,18,0,0,0,1,2,2,187,2,4,17,0,0,1,2,3,249,4,3,27,0,0,1,2,3,248,4,24,3,0,0,1,2,3,246,4,24,3,0,0,1,2,3,223,2,4,3,0,0,1,2,3,0,0,3,0,4,0,1,2,3,168,2,18,3,0,0,1,2,3,15,0,0,4,3,0,1,2,3,166,2,18,3,0,0,1,2,3,16,0,0,18,3,0,1,2,3,169,2,18,3,0,0,1,2,3,160,2,4,18,3,0,1,2,3,164,2,18,3,0,0,1,2,2,163,2,3,0,0,0,1,2,3,167,2,4,3,0,0,1,2,3,14,0,0,18,3,0,1,2,2,18,0,18,17,0,0,1,2,3,159,2,4,18,3,0,1,2,2,162,2,4,3,0,0,1,2,3,161,2,4,18,3,0,1,2,3,170,2,4,18,17,0,1,2,3,165,2,3,0,1,0,1,2,2,140,4,3,0,0,0,1,2,2,171,2,4,3,0,0,1,2,2,172,2,4,3,0,0,1,2,1,141,4,5,0,0,0,1,2,3,173,2,4,18,17,0,1,2,3,179,2,4,18,17,0,1,2,2,178,2,18,17,0,0,1,2,1,180,2,17,0,0,0,1,2,1,251,4,17,0,0,0,1,2,1,181,2,17,0,0,0,1,2,2,22,0,18,17,0,0,1,2,2,254,4,18,17,0,0,1,2,2,253,4,18,17,0,0,1,2,1,0,5,17,0,0,0,1,2,1,25,0,17,0,0,0,1,2,2,177,2,18,17,0,0,1,2,3,24,0,18,17,4,0,1,2,3,17,0,18,3,17,0,1,2,3,176,2,4,18,17,0,1,2,3,19,0,18,17,3,0,1,2,2,23,0,18,4,0,0,1,2,1,21,0,18,0,0,0,1,2,2,20,0,18,4,0,0,1,2,1,46,3,10,0,0,0,1,2,1,146,3,10,0,0,0,1,2,3,144,3,10,26,4,0,1,2,1,145,3,10,0,0,0,1,2,1,185,0,10,0,0,0,1,2,1,28,3,10,0,0,0,1,2,1,24,3,10,0,0,0,1,2,1,193,0,10,0,0,0,1,2,1,194,0,10,0,0,0,1,2,1,43,3,10,0,0,0,1,2,1,195,0,10,0,0,0,1,2,1,44,3,10,0,0,0,1,2,1,201,0,10,0,0,0,1,2,1,71,3,10,0,0,0,1,2,1,72,3,10,0,0,0,1,2,1,73,3,10,0,0,0,1,2,1,74,3,10,0,0,0,1,2,1,70,3,10,0,0,0,1,2,1,200,0,10,0,0,0,1,2,1,69,3,10,0,0,0,1,2,1,45,3,10,0,0,0,1,2,1,92,3,10,0,0,0,1,2,1,168,3,10,0,0,0,1,2,1,25,3,10,0,0,0,1,2,1,23,3,10,0,0,0,1,2,1,191,0,10,0,0,0,1,2,1,36,3,10,0,0,0,1,2,1,37,3,10,0,0,0,1,2,1,192,0,10,0,0,0,1,2,1,82,3,10,0,0,0,1,2,1,205,0,10,0,0,0,1,2,1,190,0,10,0,0,0,1,2,1,154,3,10,0,0,0,1,2,1,189,0,10,0,0,0,1,2,1,155,3,10,0,0,0,1,2,1,42,3,10,0,0,0,1,2,1,34,3,10,0,0,0,1,2,1,35,3,10,0,0,0,1,2,1,188,0,10,0,0,0,1,2,1,187,0,10,0,0,0,1,2,2,32,3,10,25,0,0,1,2,1,186,0,10,0,0,0,1,2,1,184,0,10,0,0,0,1,2,1,41,3,10,0,0,0,1,2,1,4,5,10,0,0,0,1,2,1,26,3,10,0,0,0,1,2,1,27,3,10,0,0,0,1,2,1,31,3,10,0,0,0,1,2,1,29,3,10,0,0,0,1,2,1,30,3,10,0,0,0,1,2,1,136,3,10,0,0,0,1,2,1,134,3,10,0,0,0,1,2,1,135,3,10,0,0,0,1,2,1,131,3,10,0,0,0,1,2,1,130,3,10,0,0,0,1,2,1,40,3,10,0,0,0,1,2,1,129,3,10,0,0,0,1,2,1,38,3,10,0,0,0,1,2,1,33,3,10,0,0,0,1,2,1,169,3,10,0,0,0,1,2,1,39,3,10,0,0,0,1,2,1,140,3,10,0,0,0,1,2,1,142,3,10,0,0,0,1,2,1,141,3,10,0,0,0,1,2,1,133,3,10,0,0,0,1,2,2,132,3,10,4,0,0,1,2,1,205,3,10,0,0,0,1,2,1,143,3,10,0,0,0,1,2,1,214,0,10,0,0,0,1,2,1,137,3,10,0,0,0,1,2,2,60,3,10,18,0,0,1,2,1,215,0,10,0,0,0,1,2,1,61,3,10,0,0,0,1,2,1,138,3,10,0,0,0,1,2,1,68,3,10,0,0,0,1,2,1,67,3,10,0,0,0,1,2,1,64,3,10,0,0,0,1,2,1,66,3,10,0,0,0,1,2,1,65,3,10,0,0,0,1,2,1,50,3,10,0,0,0,1,2,3,59,3,10,26,4,0,1,2,1,48,3,10,0,0,0,1,2,1,199,0,10,0,0,0,1,2,1,197,0,10,0,0,0,1,2,1,63,3,10,0,0,0,1,2,1,198,0,10,0,0,0,1,2,1,62,3,10,0,0,0,1,2,1,139,3,10,0,0,0,1,2,1,51,3,10,0,0,0,1,2,1,49,3,10,0,0,0,1,2,1,47,3,10,0,0,0,1,2,3,170,3,10,26,4,0,1,2,1,119,3,10,0,0,0,1,2,2,151,3,10,26,0,0,1,2,2,117,3,10,26,0,0,1,2,1,52,3,10,0,0,0,1,2,1,54,3,10,0,0,0,1,2,1,107,3,10,0,0,0,1,2,1,53,3,10,0,0,0,1,2,1,196,0,10,0,0,0,1,2,1,55,3,10,0,0,0,1,2,1,56,3,10,0,0,0,1,2,1,57,3,10,0,0,0,1,2,1,58,3,10,0,0,0,1,2,1,110,3,10,0,0,0,1,2,1,111,3,10,0,0,0,1,2,1,112,3,10,0,0,0,1,2,1,114,3,10,0,0,0,1,2,1,113,3,10,0,0,0,1,2,1,116,3,10,0,0,0,1,2,1,118,3,10,0,0,0,1,2,1,120,3,10,0,0,0,1,2,1,121,3,10,0,0,0,1,2,1,115,3,10,0,0,0,1,2,1,160,3,10,0,0,0,1,2,2,165,3,10,9,0,0,1,2,1,159,3,10,0,0,0,1,2,1,153,3,10,0,0,0,1,2,1,124,3,10,0,0,0,1,2,1,128,3,10,0,0,0,1,2,1,152,3,10,0,0,0,1,2,2,150,3,10,26,0,0,1,2,1,148,3,10,0,0,0,1,2,2,149,3,10,9,0,0,1,2,1,167,3,10,0,0,0,1,2,1,147,3,10,0,0,0,1,2,1,213,0,10,0,0,0,1,2,1,177,0,10,0,0,0,1,2,2,186,3,10,14,0,0,1,2,2,185,3,10,14,0,0,1,2,1,127,3,10,0,0,0,1,2,1,123,3,10,0,0,0,1,2,1,122,3,10,0,0,0,1,2,1,125,3,10,0,0,0,1,2,1,156,3,10,0,0,0,1,2,1,161,3,10,0,0,0,1,2,1,166,3,10,0,0,0,1,2,1,217,0,10,0,0,0,1,2,1,175,0,10,0,0,0,1,2,1,162,3,10,0,0,0,1,2,2,163,3,10,14,0,0,1,2,1,75,3,10,0,0,0,1,2,1,126,3,10,0,0,0,1,2,1,79,3,10,0,0,0,1,2,1,77,3,10,0,0,0,1,2,1,164,3,10,0,0,0,1,2,1,157,3,10,0,0,0,1]);fileData0.push.apply(fileData0,[2,1,216,0,10,0,0,0,1,2,1,158,3,10,0,0,0,1,2,1,203,0,10,0,0,0,1,2,1,204,0,10,0,0,0,1,2,1,81,3,10,0,0,0,1,2,1,80,3,10,0,0,0,1,2,1,76,3,10,0,0,0,1,2,1,78,3,10,0,0,0,1,2,1,202,0,10,0,0,0,1,2,2,179,0,10,14,0,0,1,2,2,178,0,10,14,0,0,1,2,2,87,3,10,14,0,0,1,2,1,206,0,10,0,0,0,1,2,2,91,3,10,14,0,0,1,2,2,85,3,10,14,0,0,1,2,1,90,3,10,0,0,0,1,2,1,88,3,10,0,0,0,1,2,1,103,3,10,0,0,0,1,2,1,171,3,10,0,0,0,1,2,1,172,3,10,0,0,0,1,2,1,101,3,10,0,0,0,1,2,2,100,3,10,14,0,0,1,2,1,89,3,10,0,0,0,1,2,1,83,3,10,0,0,0,1,2,1,84,3,10,0,0,0,1,2,1,86,3,10,0,0,0,1,2,2,180,3,10,14,0,0,1,2,2,182,0,10,14,0,0,1,2,2,178,3,10,14,0,0,1,2,2,181,3,10,14,0,0,1,2,1,33,2,14,0,0,0,1,2,1,15,2,14,0,0,0,1,2,2,25,2,14,12,0,0,1,2,1,219,0,12,0,0,0,1,2,1,223,0,12,0,0,0,1,2,1,29,2,12,0,0,0,1,2,1,30,2,12,0,0,0,1,2,1,179,3,14,0,0,0,1,2,1,177,3,14,0,0,0,1,2,1,14,2,14,0,0,0,1,2,2,24,2,14,12,0,0,1,2,1,34,2,14,0,0,0,1,2,2,13,2,14,12,0,0,1,2,2,23,2,14,12,0,0,1,2,1,22,2,12,0,0,0,1,2,1,21,2,12,0,0,0,1,2,1,218,0,12,0,0,0,1,2,1,12,2,14,0,0,0,1,2,2,220,0,12,14,0,0,1,2,1,31,2,12,0,0,0,1,2,1,32,2,12,0,0,0,1,2,1,188,3,10,0,0,0,1,2,1,192,3,10,0,0,0,1,2,1,194,3,10,0,0,0,1,2,2,195,3,10,9,0,0,1,2,2,196,3,10,9,0,0,1,2,1,162,1,9,0,0,0,1,2,1,193,3,9,0,0,0,1,2,1,191,3,9,0,0,0,1,2,1,187,3,10,0,0,0,1,2,1,189,3,10,0,0,0,1,2,2,173,3,10,14,0,0,1,2,1,176,0,10,0,0,0,1,2,2,174,3,10,14,0,0,1,2,2,175,3,10,14,0,0,1,2,1,176,3,14,0,0,0,1,2,1,190,3,9,0,0,0,1,2,1,98,3,10,0,0,0,1,2,1,181,0,10,0,0,0,1,2,2,99,3,10,14,0,0,1,2,1,209,0,10,0,0,0,1,2,2,95,3,10,26,0,0,1,2,1,208,0,10,0,0,0,1,2,1,97,3,10,0,0,0,1,2,1,207,0,10,0,0,0,1,2,1,93,3,10,0,0,0,1,2,1,96,3,10,0,0,0,1,2,2,212,0,10,26,0,0,1,2,2,210,0,10,26,0,0,1,2,1,108,3,10,0,0,0,1,2,1,183,0,10,0,0,0,1,2,1,104,3,10,0,0,0,1,2,1,109,3,10,0,0,0,1,2,1,94,3,10,0,0,0,1,2,1,102,3,10,0,0,0,1,2,1,211,0,10,0,0,0,1,2,1,105,3,10,0,0,0,1,2,1,106,3,10,0,0,0,1,2,2,184,3,10,14,0,0,1,2,2,180,0,10,14,0,0,1,2,1,9,2,14,0,0,0,1,2,1,16,2,14,0,0,0,1,2,2,11,2,14,12,0,0,1,2,2,17,2,14,12,0,0,1,2,2,221,0,14,12,0,0,1,2,1,222,0,12,0,0,0,1,2,1,28,2,12,0,0,0,1,2,2,27,2,14,12,0,0,1,2,2,20,2,14,12,0,0,1,2,2,26,2,14,12,0,0,1,2,2,19,2,14,12,0,0,1,2,2,8,2,14,12,0,0,1,2,1,10,2,14,0,0,0,1,2,1,183,3,10,0,0,0,1,2,2,203,3,10,9,0,0,1,2,1,204,3,10,0,0,0,1,2,2,200,3,10,9,0,0,1,2,2,198,3,10,9,0,0,1,2,1,199,3,10,0,0,0,1,2,2,197,3,10,9,0,0,1,2,1,154,1,9,0,0,0,1,2,2,163,1,10,9,0,0,1,2,2,157,1,9,7,0,0,1,2,1,226,0,9,0,0,0,1,2,2,165,1,9,7,0,0,1,2,2,227,0,7,9,0,0,1,2,1,228,0,7,0,0,0,1,2,1,174,1,7,0,0,0,1,2,1,173,1,7,0,0,0,1,2,1,172,1,7,0,0,0,1,2,1,166,1,7,0,0,0,1,2,2,155,1,9,7,0,0,1,2,2,156,1,9,7,0,0,1,2,1,164,1,9,0,0,0,1,2,2,182,3,10,14,0,0,1,2,1,18,2,14,0,0,0,1,2,1,218,1,12,0,0,0,1,2,2,6,2,14,12,0,0,1,2,2,7,2,14,12,0,0,1,2,1,217,1,12,0,0,0,1,2,1,0,2,12,0,0,0,1,2,1,2,2,12,0,0,0,1,2,1,216,1,12,0,0,0,1,2,1,215,1,12,0,0,0,1,2,1,214,1,12,0,0,0,1,2,1,210,1,12,0,0,0,1,2,1,212,1,12,0,0,0,1,2,1,211,1,12,0,0,0,1,2,1,213,1,12,0,0,0,1,2,1,219,1,12,0,0,0,1,2,2,35,2,14,12,0,0,1,2,1,231,1,12,0,0,0,1,2,1,232,1,12,0,0,0,1,2,1,223,1,12,0,0,0,1,2,1,237,1,12,0,0,0,1,2,1,239,1,12,0,0,0,1,2,2,206,1,12,11,0,0,1,2,1,1,2,12,0,0,0,1,2,2,3,2,14,12,0,0,1,2,2,230,0,12,14,0,0,1,2,1,231,0,12,0,0,0,1,2,1,234,1,12,0,0,0,1,2,1,235,1,12,0,0,0,1,2,1,238,1,12,0,0,0,1,2,1,236,1,12,0,0,0,1,2,1,230,1,12,0,0,0,1,2,2,209,1,12,11,0,0,1,2,2,207,1,12,11,0,0,1,2,2,228,1,12,11,0,0,1,2,2,202,1,11,13,0,0,1,2,1,205,1,11,0,0,0,1,2,2,187,1,11,13,0,0,1,2,1,226,1,12,0,0,0,1,2,2,227,1,12,11,0,0,1,2,1,229,1,12,0,0,0,1,2,1,188,1,11,0,0,0,1,2,1,184,1,11,0,0,0,1,2,2,182,1,12,11,0,0,1,2,1,225,1,12,0,0,0,1,2,2,189,1,11,13,0,0,1,2,2,200,1,11,13,0,0,1,2,1,186,1,11,0,0,0,1,2,1,194,1,11,0,0,0,1,2,1,244,1,11,0,0,0,1,2,1,183,1,11,0,0,0,1,2,2,185,1,12,11,0,0,1,2,1,224,1,12,0,0,0,1,2,1,233,1,12,0,0,0,1,2,2,5,2,14,12,0,0,1,2,2,4,2,14,12,0,0,1,2,2,208,1,11,13,0,0,1,2,2,240,1,11,13,0,0,1,2,1,199,1,13,0,0,0,1,2,1,201,1,13,0,0,0,1,2,2,204,1,11,13,0,0,1,2,2,203,1,11,13,0,0,1,2,2,190,1,11,13,0,0,1,2,2,193,1,11,13,0,0,1,2,2,191,1,11,13,0,0,1,2,2,192,1,11,13,0,0,1,2,2,241,1,11,13,0,0,1,2,2,242,1,11,13,0,0,1,2,3,198,1,12,11,13,0,1,2,1,195,1,11,0,0,0,1,2,1,196,1,11,0,0,0,1,2,2,243,1,11,13,0,0,1,2,2,221,1,12,11,0,0,1,2,1,197,1,11,0,0,0,1,2,2,222,1,12,11,0,0,1,2,1,220,1,12,0,0,0,1,2,2,138,1,6,8,0,0,1,2,1,9,1,8,0,0,0,1,2,1,104,1,8,0,0,0,1,2,1,12,1,6,0,0,0,1,2,1,137,1,6,0,0,0,1,2,1,7,1,6,0,0,0,1,2,1,6,1,6,0,0,0,1,2,1,13,1,6,0,0,0,1,2,1,5,1,6,0,0,0,1,2,1,8,1,6,0,0,0,1,2,1,102,1,6,0,0,0,1,2,1,100,1,6,0,0,0,1,2,1,14,1,8,0,0,0,1,2,1,101,1,8,0,0,0,1,2,1,103,1,8,0,0,0,1,2,1,11,1,8,0,0,0,1,2,1,10,1,6,0,0,0,1,2,1,136,1,6,0,0,0,1,2,1,98,1,6,0,0,0,1,2,1,96,1,6,0,0,0,1,2,1,97,1,6,0,0,0,1,2,1,4,1,6,0,0,0,1,2,1,17,1,7,0,0,0,1,2,1,105,1,6,0,0,0,1,2,2,126,1,7,6,0,0,1,2,2,106,1,7,6,0,0,1,2,1,109,1,7,0,0,0,1,2,1,107,1,7,0,0,0,1,2,1,128,1,7,0,0,0,1,2,1,133,1,7,0,0,0,1,2,1,21,1,7,0,0,0,1,2,1,130,1,7,0,0,0,1,2,1,121,1,7,0,0,0,1,2,1,134,1,6,0,0,0,1,2,1,120,1,6,0,0,0,1,2,1,108,1,6,0,0,0,1,2,1,125,1,7,0,0,0,1,2,1,117,1,7,0,0,0,1,2,1,152,1,7,0,0,0,1,2,1,153,1,7,0,0,0,1,2,1,118,1,7,0,0,0,1,2,1,15,1,7,0,0,0,1,2,1,111,1,7,0,0,0,1,2,1,20,1,7,0,0,0,1,2,1,19,1,7,0,0,0,1,2,1,127,1,7,0,0,0,1,2,1,3,1,7,0,0,0,1,2,1,94,1,6,0,0,0,1,2,1,139,1,6,0,0,0,1,2,2,95,1,7,6,0,0,1,2,1,124,1,7,0,0,0,1,2,1,132,1,7,0,0,0,1,2,1,18,1,7,0,0,0,1,2,1,123,1,7,0,0,0,1,2,1,131,1,7,0,0,0,1,2,1,116,1,7,0,0,0,1,2,1,114,1,7,0,0,0,1,2,1,148,1,7,0,0,0,1,2,1,16,1,7,0,0,0,1,2,1,151,1,7,0,0,0,1,2,1,150,1,7,0,0,0,1,2,1,149,1,7,0,0,0,1,2,1,146,1,7,0,0,0,1,2,1,115,1,7,0,0,0,1,2,1,113,1,7,0,0,0,1,2,1,112,1,7,0,0,0,1,2,1,110,1,7,0,0,0,1,2,1,147,1,7,0,0,0,1,2,1,25,1,6,0,0,0,1,2,1,145,1,8,0,0,0,1,2,1,26,1,8,0,0,0,1,2,1,144,1,8,0,0,0,1,2,1,143,1,6,0,0,0,1,2,1,141,1,6,0,0,0,1,2,1,142,1,6,0,0,0,1,2,1,24,1,6,0,0,0,1,2,1,23,1,6,0,0,0,1,2,1,140,1,6,0,0,0,1,2,1,22,1,6,0,0,0,1,2,2,135,1,6,8,0,0,1,2,1,158,1,9,0,0,0,1,2,1,161,1,9,0,0,0,1,2,1,159,1,9,0,0,0,1,2,1,160,1,7,0,0,0,1,2,1,225,0,7,0,0,0,1,2,1,171,1,7,0,0,0,1,2,2,201,3,10,9,0,0,1,2,1,202,3,10,0,0,0,1,2,2,179,1,10,9,0,0,1,2,1,224,0,9,0,0,0,1,2,1,229,0,7,0,0,0,1,2,1,175,1,7,0,0,0,1,2,1,177,1,7,0,0,0,1,2,1,178,1,7,0,0,0,1,2,1,167,1,7,0,0,0,1,2,1,168,1,7,0,0,0,1,2,1,169,1,7,0,0,0,1,2,2,170,1,9,7,0,0,1,2,1,180,1,9,0,0,0,1,2,1,176,1,7,0,0,0,1,2,1,76,0,5,0,0,0,1,2,1,74,0,5,0,0,0,1,2,1,77,0,5,0,0,0,1,2,1,83,0,5,0,0,0,1,2,1,84,0,5,0,0,0,1,2,1,92,1,5,0,0,0,1,2,1,89,1,5,0,0,0,1,2,1,78,0,5,0,0,0,1,2,1,87,1,5,0,0,0,1,2,1,86,1,0,0,0,0,1,2,3,88,1,0,1,5,0,1,2,1,84,1,5,0,0,0,1,2,1,83,1,5,0,0,0,1,2,1,90,1,5,0,0,0,1,2,3,93,1,0,2,5,0,1,2,1,91,1,0,0,0,0,1,2,1,75,0,0,0,0,0,1,2,1,85,1,0,0,0,0,1,2,1,31,1,5,0,0,0,1,2,1,37,1,5,0,0,0,1,2,1,40,1,5,0,0,0,1,2,1,33,1,5,0,0,0,1,2,1,32,1,5,0,0,0,1,2,1,35,1,5,0,0,0,1,2,1,36,1,5,0,0,0,1,2,1,38,1,5,0,0,0,1,2,1,39,1,5,0,0,0,1,2,1,79,1,5,0,0,0,1,2,1,34,1,5,0,0,0,1,2,1,29,1,5,0,0,0,1,2,1,45,1,5,0,0,0,1,2,1,28,1,5,0,0,0,1,2,1,46,1,5,0,0,0,1,2,1,50,1,5,0,0,0,1,2,1,80,1,5,0,0,0,1,2,1,42,1,5,0,0,0,1,2,1,41,1,5,0,0,0,1,2,1,30,1,5,0,0,0,1,2,1,57,1,5,0,0,0,1,2,1,58,1,5,0,0,0,1,2,1,49,1,5,0,0,0,1,2,1,81,1,5,0,0,0,1,2,1,55,1,5,0,0,0,1,2,1,51,1,5,0,0,0,1,2,1,53,1,5,0,0,0,1,2,1,54,1,5,0,0,0,1,2,1,52,1,5,0,0,0,1,2,1,56,1,5,0,0,0,1,2,1,43,1,5,0,0,0,1,2,1,44,1,5,0,0,0,1,2,1,82,1,5,0,0,0,1,2,1,48,1,5,0,0,0,1,2,1,47,1,5,0,0,0,1,2,1,115,4,0,0,0,0,1,2,1,111,4,0,0,0,0,1,2,1,116,4,0,0,0,0,1,2,1,112,4,0,0,0,0,1,2,1,113,4,0,0,0,0,1,2,1,114,4,0,0,0,0,1,2,1,120,4,0,0,0,0,1,2,1,121,4,0,0,0,0,1,2,1,122,4,0,0,0,0,1,2,2,161,0,1,0,0,0,1,2,2,158,0,1,0,0,0,1,2,2,100,4,0,1,0,0,1,2,2,93,4,0,1,0,0,1,2,2,102,4,0,1,0,0,1,2,2,90,4,0,1,0,0,1,2,1,91,4,1,0,0,0,1,2,1,155,0,1,0,0,0,1,2,1,157,0,1,0,0,0,1,2,2,92,4,0,1,0,0,1,2,1,168,0,1,0,0,0,1,2,2,101,4,0,1,0,0,1,2,1,169,0,5,0,0,0,1,2,2,103,4,3,0,0,0,1,2,2,149,0,0,1,0,0,1,2,1,152,0,1,0,0,0,1,2,1,151,0,1,0,0,0,1,2,1,153,0,1,0,0,0,1,2,2,162,0,1,0,0,0,1,2,1,154,0,1,0,0,0,1,2,2,150,0,1,0,0,0,1,2,2,147,0,0,1,0,0,1,2,2,148,0,0,1,0,0,1,2,1,160,0,1,0,0,0,1,2,1,159,0,1,0,0,0,1,2,2,163,0,1,0,0,0,1,2,3,195,2,4,24,18,0,1,2,2,4,3,4,24,0,0,1,2,2,197,2,4,24,0,0,1,2,3,196,2,4,18,17,0,1,2,3,193,2,25,4,17,0,1,2,3,190,2,4,18,17,0,1,2,3,198,2,4,18,17,0,1,2,1,191,2,17,0,0,0,1,2,2,189,2,4,17,0,0,1,2,2,2,3,25,4,0,0,1,2,1,192,2,10,0,0,0,1,2,1,194,2,10,0,0,0,1,2,1,210,2,10,0,0,0,1,2,2,3,3,10,25,0,0,1,2,1,212,2,10,0,0,0,1,2,3,211,2,10,4,17,0,1,2,3,213,2,10,26,4,0,1,2,1,32,0,0,0,0,0,1,2,1,212,3,0,0,0,0,1,2,1,43,0,0,0,0,0,1,2,1,42,0,0,0,0,0,1,2,1,224,3,0,0,0,0,1,2,2,253,1,11,13,0,0,1,2,2,255,1,11,13,0,0,1,2,2,254,1,11,13,0,0,1,2,1,252,1,13,0,0,0,1,2,2,251,1,11,13,0,0,1,2,2,249,1,11,13,0,0,1,2,3,248,1,12,11,13,0,1,2,2,250,1,11,13,0,0,1,2,1,245,1,11,0,0,0,1,2,1,247,1,11,0,0,0,1,2,1,246,1,11,0,0,0,1,2,1,99,1,6,0,0,0,1,2,2,122,1,7,6,0,0,1,2,1,119,1,7,0,0,0,1,2,1,129,1,7,0,0,0,1,2,1,181,1,7,0,0,0,0,1,0,2,0,3,0,1,0,4,0,0,0,4,0,1,0,5,0,4,0,0,0,5,0,6,0,4,0,6,0,5,0,7,0,6,0,7,0,8,0,9,0,8,0,7,0,10,0,8,0,9,0,11,0,10,0,9,0,11,0,12,0,10,0,12,0,11,0,13,0,12,0,13,0,14,0,15,0,12,0,14,0,15,0,16,0,12,0,15,0,17,0,16,0,17,0,18,0,16,0,19,0,18,0,17,0,18,0,19,0,20,0,10,0,12,0,16,0,19,0,17,0,21,0,22,0,21,0,17,0,22,0,17,0,15,0,9,0,7,0,23,0,11,0,9,0,23,0,11,0,23,0,24,0,13,0,11,0,24,0,13,0,24,0,25,0,26,0,27,0,28,0,26,0,28,0,29,0,30,0,29,0,28,0,31,0,29,0,30,0,13,0,31,0,30,0,13,0,30,0,32,0,14,0,13,0,32,0,33,0,14,0,32,0,15,0,14,0,33,0,34,0,15,0,33,0,34,0,22,0,15,0,35,0,22,0,34,0,35,0,36,0,22,0,37,0,22,0,36,0,37,0,21,0,22,0,38,0,21,0,37,0,38,0,19,0,21,0,39,0,19,0,38,0,40,0,35,0,34,0,33,0,41,0,34,0,42,0,43,0,44,0,42,0,44,0,45,0,44,0,46,0,45,0,45,0,46,0,47,0,46,0,48,0,47,0,49,0,47,0,48,0,50,0,49,0,48,0,51,0,49,0,50,0,51,0,50,0,52,0,52,0,53,0,51,0,52,0,54,0,53,0,41,0,53,0,54,0,41,0,55,0,53,0,33,0,55,0,41,0,32,0,55,0,33,0,32,0,56,0,55,0,56,0,32,0,30,0,57,0,56,0,30,0,58,0,52,0,50,0,45,0,47,0,59,0,49,0,59,0,47,0,59,0,49,0,60,0,61,0,62,0,63,0,62,0,61,0,64,0,61,0,65,0,64,0,66,0,64,0,65,0,65,0,60,0,66,0,66,0,60,0,67,0,49,0,67,0,60,0,51,0,67,0,49,0,51,0,68,0,67,0,51,0,53,0,68,0,68,0,53,0,55,0,68,0,55,0,56,0,68,0,56,0,69,0,57,0,69,0,56,0,70,0,62,0,64,0,42,0,45,0,71,0,71,0,45,0,59,0,71,0,59,0,72,0,59,0,60,0,72,0,60,0,73,0,72,0,65,0,73,0,60,0,74,0,75,0,76,0,77,0,75,0,74,0,77,0,74,0,78,0,77,0,78,0,79,0,42,0,79,0,78,0,42,0,80,0,79,0,80,0,42,0,71,0,80,0,71,0,81,0,71,0,72,0,81,0,72,0,82,0,81,0,72,0,73,0,82,0,83,0,82,0,73,0,83,0,73,0,65,0,65,0,84,0,83,0,61,0,84,0,65,0,84,0,61,0,85,0,61,0,63,0,85,0,85,0,63,0,86,0,85,0,86,0,87,0,88,0,79,0,80,0,89,0,90,0,91,0,90,0,92,0,91,0,91,0,92,0,93,0,94,0,93,0,92,0,95,0,94,0,92,0,95,0,96,0,94,0,97,0,96,0,95,0,97,0,95,0,90,0,86,0,97,0,90,0,86,0,90,0,89,0,86,0,89,0,87,0,98,0,87,0,89,0,98,0,85,0,87,0,98,0,99,0,85,0,84,0,85,0,99,0,84,0,99,0,100,0,100,0,83,0,84,0,100,0,101,0,83,0,90,0,95,0,92,0,99,0,98,0,102,0,99,0,102,0,100,0,103,0,100,0,102,0,101,0,100,0,103,0,101,0,103,0,104,0,101,0,104,0,105,0,105,0,104,0,106,0,105,0,106,0,107,0,108,0,105,0,107,0,101,0,82,0,83,0,81,0,82,0,101,0,81,0,101,0,105,0,80,0,81,0,105,0,80,0,105,0,108,0,88,0,80,0,108,0,109,0,88,0,108,0,108,0,107,0,109,0,110,0,109,0,107,0,110,0,107,0,106,0,110,0,106,0,111,0,112,0,110,0,111,0,112,0,111,0,113,0,114,0,112,0,113,0,114,0,113,0,115,0,116,0,115,0,113,0,113,0,117,0,116,0,116,0,117,0,118,0,111,0,119,0,113,0,113,0,119,0,117,0,93,0,120,0,91,0,120,0,93,0,121,0,94,0,121,0,93,0,94,0,122,0,121,0,94,0,123,0,122,0,122,0,123,0,124,0,125,0,124,0,123,0,126,0,124,0,125,0,126,0,125,0,127,0,126,0,127,0,118,0,128,0,118,0,127,0,116,0,118,0,128,0,128,0,129,0,116,0,116,0,129,0,115,0,130,0,115,0,129,0,130,0,114,0,115,0,130,0,131,0,114,0,132,0,114,0,131,0,133,0,131,0,130,0,128,0,134,0,129,0,123,0,94,0,96,0,123,0,96,0,135,0,125,0,123,0,135,0,125,0,135,0,136,0,125,0,136,0,127,0,134,0,137,0,138,0,138,0,139,0,134,0,134,0,139,0,140,0,134,0,140,0,129,0,130,0,129,0,140,0,141,0,130,0,140,0,130,0,141,0,133,0,141,0,142,0,133,0,143,0,86,0,63,0,143,0,97,0,86,0,97,0,143,0,144,0,97,0,144,0,96,0,96,0,144,0,145,0,145,0,135,0,96,0,135,0,145,0,146,0,146,0,136,0,135,0,146,0,147,0,136,0,127,0,136,0,147,0,127,0,147,0,148,0,128,0,127,0,148,0,128,0,148,0,149,0,128,0,149,0,134,0,149,0,150,0,134,0,134,0,150,0,137,0,137,0,150,0,151,0,152,0,151,0,150,0,153,0,154,0,155,0,153,0,155,0,156,0,152,0,156,0,155,0,152,0,150,0,156,0,156,0,150,0,149,0,149,0,153,0,156,0,157,0,153,0,149,0,157,0,149,0,148,0,147,0,157,0,148,0,157,0,147,0,146,0,158,0,152,0,155,0,152,0,159,0,151,0,158,0,159,0,152,0,159,0,158,0,160,0,158,0,161,0,160,0,158,0,155,0,161,0,162,0,161,0,155,0,155,0,154,0,162,0,162,0,154,0,163,0,164,0,163,0,154,0,165,0,163,0,164,0,165,0,164,0,166,0,167,0,165,0,166,0,167,0,166,0,168,0,167,0,168,0,169,0,168,0,164,0,169,0,164,0,170,0,169,0,164,0,27,0,170,0,26,0,170,0,27,0,168,0,166,0,164,0,171,0,169,0,26,0,26,0,169,0,170,0,167,0,169,0,172,0,167,0,172,0,163,0,167,0,163,0,165,0,173,0,174,0,161,0,162,0,173,0,161,0,173,0,175,0,174,0,176,0,177,0,178,0,179,0,178,0,177,0,178,0,179,0,175,0,179,0,180,0,175,0,175,0,180,0,174,0,174,0,180,0,181,0,161,0,174,0,181,0,161,0,181,0,182,0,177,0,183,0,184,0,184,0,179,0,177,0,184,0,185,0,179,0,185,0,180,0,179,0,185,0,186,0,180,0,181,0,180,0,186,0,187,0,186,0,185,0,187,0,185,0,184,0,175,0,188,0,189,0,175,0,189,0,178,0,176,0,178,0,189,0,176,0,189,0,190,0,190,0,191,0,176,0,187,0,184,0,192,0,184,0,193,0,192,0,183,0,193,0,184,0,183,0,194,0,193,0,194,0,183,0,138,0,177,0,138,0,183,0,177,0,139,0,138,0,177,0,195,0,139,0,140,0,139,0,195,0,140,0,195,0,196,0,141,0,140,0,196,0,196,0,197,0,141,0,141,0,197,0,142,0,142,0,197,0,191,0,198,0,191,0,197,0,198,0,176,0,191,0,195,0,176,0,198,0,176,0,195,0,177,0,195,0,198,0,196,0,196,0,198,0,197,0,199,0,190,0,189,0,200,0,199,0,189,0,188,0,200,0,189,0,188,0,201,0,200,0,202,0,201,0,188,0,203,0,201,0,202,0,203,0,202,0,204,0,205,0,204,0,206,0,205,0,203,0,204,0,203,0,205,0,207,0,203,0,207,0,201,0,208,0,201,0,207,0,208,0,200,0,201,0,209,0,200,0,208,0,209,0,199,0,200,0,209,0,210,0,199,0,199,0,210,0,190,0,190,0,210,0,211,0,190,0,211,0,212,0,190,0,212,0,191,0,213,0,191,0,212,0,142,0,191,0,213,0,213,0,214,0,142,0,214,0,133,0,142,0,214,0,215,0,133,0,216,0,211,0,217,0,210,0,217,0,211,0,205,0,208,0,207,0,205,0,218,0,208,0,208,0,218,0,209,0,218,0,219,0,209,0,209,0,219,0,210,0,210,0,219,0,217,0,219,0,220,0,217,0,216,0,217,0,220,0,216,0,220,0,221,0,216,0,221,0,222,0,216,0,222,0,223,0,224,0,223,0,222,0,224,0,225,0,223,0,219,0,218,0,220,0,226,0,227,0,228,0,229,0,226,0,228,0,229,0,230,0,226,0,231,0,230,0,229,0,232,0,230,0,231,0,232,0,231,0,224,0,231,0,233,0,224,0,224,0,233,0,225,0,234,0,225,0,233,0,234,0,223,0,225,0,234,0,235,0,223,0,216,0,223,0,235,0,216,0,235,0,236,0,216,0,236,0,211,0,211,0,236,0,237,0,237,0,212,0,211,0,237,0,238,0,212,0,238,0,213,0,212,0,235,0,237,0,236,0,226,0,230,0,232,0,232,0,227,0,226,0,232,0,239,0,227,0,239,0,240,0,227,0,241,0,240,0,239,0,231,0,229,0,242,0,233,0,231,0,242,0,233,0,242,0,243,0,234,0,233,0,243,0,244,0,245,0,246,0,244,0,247,0,245,0,248,0,245,0,247,0,249,0,248,0,247,0,250,0,248,0,249,0,250,0,249,0,251,0,250,0,251,0,252,0,251,0,253,0,252,0,228,0,252,0,253,0,228,0,253,0,229,0,253,0,242,0,229,0,253,0,254,0,242,0,242,0,254,0,243,0,243,0,254,0,255,0,243,0,255,0,234,0,235,0,234,0,255,0,235,0,255,0,0,1,0,1,237,0,235,0,0,1,238,0,237,0,248,0,250,0,245,0,249,0,247,0,244,0,249,0,244,0,246,0,249,0,246,0,251,0,251,0,246,0,1,1,251,0,1,1,253,0,254,0,253,0,1,1,2,1,3,1,4,1,2,1,4,1,5,1,5,1,4,1,238,0,5,1,238,0,0,1,5,1,0,1,6,1,6,1,0,1,255,0,6,1,255,0,7,1,7,1,255,0,254,0,7,1,254,0,8,1,254,0,1,1,8,1,9,1,8,1,1,1,10,1,9,1,1,1,11,1,9,1,10,1,11,1,10,1,12,1,13,1,11,1,12,1,13,1,14,1,11,1,13,1,15,1,14,1,14,1,15,1,16,1,7,1,8,1,17,1,8,1,9,1,17,1,6,1,18,1,5,1,5,1,18,1,2,1,2,1,18,1,19,1,16,1,20,1,14,1,16,1,21,1,20,1,21,1,22,1,20,1,20,1,22,1,17,1,17,1,14,1,20,1,9,1,14,1,17,1,9,1,11,1,14,1,7,1,17,1,23,1,23,1,24,1,7,1,24,1,6,1,7,1,24,1,25,1,6,1,6,1,25,1,18,1,26,1,18,1,25,1,26,1,19,1,18,1,27,1,19,1,26,1,28,1,27,1,26,1,29,1,27,1,28,1,30,1,29,1,28,1,31,1,29,1,30,1,32,1,31,1,30,1,32,1,33,1,31,1,34,1,33,1,32,1,35,1,33,1,34,1,36,1,35,1,34,1,37,1,35,1,36,1,32,1,30,1,38,1,28,1,26,1,39,1,39,1,26,1,25,1,39,1,25,1,24,1,23,1,39,1,24,1,28,1,39,1,23,1,28,1,23,1,40,1,30,1,28,1,40,1,37,1,41,1,35,1,41,1,33,1,35,1,41,1,31,1,33,1,41,1,42,1,31,1,43,1,31,1,42,1,31,1,43,1,29,1,43,1,44,1,29,1,29,1,44,1,27,1,45,1,34,1,46,1,238,0,4,1,213,0,214,0,213,0,4,1,214,0,4,1,3,1,47,1,214,0,3,1,47,1,3,1,2,1,47,1,2,1,48,1,2,1,19,1,48,1,48,1,19,1,49,1,19,1,27,1,49,1,50,1,49,1,27,1,50,1,27,1,44,1,50,1,44,1,51,1,43,1,51,1,44,1,51,1,43,1,52,1,43,1,42,1,52,1,53,1,52,1,42,1,53,1,42,1,41,1,53,1,41,1,54,1,48,1,55,1,47,1,48,1,56,1,55,1,48,1,49,1,56,1,47,1,215,0,214,0,55,1,215,0,47,1,55,1,57,1,215,0,58,1,57,1,55,1,58,1,55,1,56,1,58,1,56,1,59,1,56,1,49,1,59,1,59,1,49,1,50,1,60,1,61,1,58,1,60,1,58,1,59,1,59,1,62,1,60,1,59,1,50,1,62,1,50,1,51,1,62,1,61,1,63,1,64,1,61,1,60,1,63,1,60,1,65,1,63,1,60,1,62,1,65,1,62,1,66,1,65,1,62,1,51,1,66,1,66,1,51,1,67,1,51,1,52,1,67,1,68,1,67,1,52,1,53,1,68,1,52,1,69,1,68,1,53,1,69,1,53,1,54,1,54,1,70,1,69,1,71,1,69,1,70,1,72,1,71,1,70,1,72,1,73,1,71,1,74,1,71,1,73,1,74,1,75,1,71,1,65,1,66,1,76,1,77,1,75,1,74,1,77,1,78,1,75,1,79,1,78,1,77,1,79,1,80,1,78,1,79,1,81,1,80,1,80,1,81,1,76,1,80,1,76,1,82,1,66,1,82,1,76,1,83,1,82,1,66,1,83,1,66,1,67,1,68,1,83,1,67,1,84,1,83,1,68,1,84,1,68,1,69,1,71,1,84,1,69,1,71,1,75,1,84,1,75,1,80,1,84,1,75,1,78,1,80,1,84,1,80,1,82,1,84,1,82,1,83,1,85,1,81,1,79,1,85,1,79,1,86,1,79,1,77,1,86,1,86,1,77,1,87,1,74,1,87,1,77,1,74,1,88,1,87,1,73,1,88,1,74,1,73,1,89,1,88,1,72,1,89,1,73,1,72,1,90,1,89,1,91,1,89,1,90,1,89,1,91,1,88,1,88,1,91,1,92,1,88,1,92,1,87,1,92,1,93,1,87,1,86,1,87,1,93,1,37,1,54,1,41,1,54,1,37,1,70,1,70,1,37,1,94,1,70,1,94,1,72,1,72,1,94,1,95,1,72,1,95,1,90,1,96,1,90,1,95,1,96,1,91,1,90,1,97,1,91,1,96,1,97,1,92,1,91,1,97,1,98,1,92,1,92,1,98,1,93,1,98,1,99,1,93,1,99,1,86,1,93,1,99,1,100,1,86,1,85,1,86,1,100,1,85,1,100,1,101,1,102,1,85,1,101,1,103,1,100,1,99,1,103,1,99,1,98,1,103,1,98,1,97,1,103,1,97,1,104,1,101,1,105,1,106,1,105,1,101,1,107,1,100,1,107,1,101,1,100,1,103,1,107,1,108,1,107,1,103,1,108,1,103,1,104,1,108,1,104,1,109,1,109,1,104,1,97,1,109,1,97,1,96,1,109,1,96,1,110,1,110,1,96,1,95,1,110,1,95,1,94,1,105,1,107,1,108,1,111,1,37,1,36,1,37,1,111,1,94,1,94,1,111,1,112,1,110,1,94,1,112,1,110,1,112,1,113,1,113,1,109,1,110,1,113,1,114,1,109,1,108,1,109,1,114,1,115,1,108,1,114,1,105,1,108,1,115,1,115,1,116,1,105,1,116,1,106,1,105,1,106,1,116,1,117,1,118,1,117,1,116,1,118,1,116,1,119,1,119,1,120,1,118,1,119,1,121,1,120,1,120,1,121,1,122,1,36,1,34,1,45,1,123,1,36,1,45,1,123,1,111,1,36,1,123,1,112,1,111,1,124,1,112,1,123,1,124,1,113,1,112,1,125,1,113,1,124,1,125,1,114,1,113,1,115,1,114,1,125,1,125,1,126,1,115,1,115,1,126,1,116,1,119,1,116,1,126,1,119,1,126,1,127,1,119,1,127,1,121,1,46,1,121,1,127,1,46,1,127,1,128,1,45,1,46,1,128,1,123,1,45,1,128,1,123,1,128,1,127,1,123,1,127,1,124,1,124,1,127,1,126,1,124,1,126,1,125,1,46,1,122,1,121,1,46,1,129,1,122,1,46,1,34,1,129,1,34,1,32,1,129,1,32,1,130,1,129,1,130,1,32,1,38,1,130,1,38,1,131,1,129,1,130,1,131,1,129,1,131,1,132,1,122,1,129,1,132,1,122,1,132,1,133,1,133,1,134,1,122,1,133,1,135,1,134,1,134,1,135,1,136,1,137,1,136,1,135,1,137,1,138,1,136,1,138,1,137,1,139,1,139,1,140,1,138,1,131,1,141,1,132,1,132,1,141,1,142,1,142,1,143,1,144,1,142,1,145,1,143,1,146,1,145,1,142,1,146,1,142,1,147,1,141,1,147,1,142,1,141,1,148,1,147,1,148,1,141,1,131,1,148,1,131,1,149,1,150,1,149,1,131,1,38,1,150,1,131,1,38,1,151,1,150,1,151,1,38,1,152,1,153,1,152,1,38,1,153,1,38,1,30,1,30,1,22,1,153,1,22,1,30,1,40,1,40,1,17,1,22,1,40,1,23,1,17,1,148,1,149,1,154,1,155,1,156,1,147,1,155,1,157,1,156,1,245,0,156,1,157,1,245,0,157,1,158,1,245,0,158,1,159,1,159,1,158,1,157,1,159,1,157,1,155,1,159,1,155,1,147,1,159,1,147,1,246,0,246,0,147,1,148,1,1,1,246,0,148,1,1,1,148,1,154,1,1,1,154,1,10,1,154,1,12,1,10,1,154,1,160,1,12,1,149,1,160,1,154,1,149,1,161,1,160,1,245,0,159,1,246,0,147,1,156,1,146,1,156,1,145,1,146,1,156,1,162,1,145,1,162,1,143,1,145,1,162,1,163,1,143,1,143,1,163,1,164,1,164,1,163,1,162,1,164,1,162,1,156,1,165,1,164,1,156,1,165,1,156,1,166,1,156,1,167,1,166,1,167,1,156,1,245,0,245,0,241,0,167,1,245,0,250,0,241,0,241,0,250,0,240,0,250,0,252,0,240,0,227,0,240,0,252,0,227,0,252,0,228,0,164,1,168,1,169,1,168,1,170,1,169,1,169,1,170,1,171,1,169,1,171,1,144,1,164,1,169,1,144,1,143,1,164,1,144,1,168,1,164,1,172,1,168,1,172,1,173,1,168,1,173,1,170,1,170,1,173,1,172,1,170,1,172,1,171,1,174,1,171,1,172,1,174,1,175,1,171,1,174,1,176,1,175,1,177,1,175,1,176,1,177,1,176,1,178,1,176,1,179,1,178,1,179,1,176,1,180,1,181,1,180,1,176,1,180,1,181,1,182,1,182,1,181,1,172,1,172,1,183,1,182,1,181,1,176,1,174,1,174,1,172,1,181,1,172,1,164,1,165,1,172,1,165,1,184,1,172,1,184,1,183,1,183,1,184,1,185,1,186,1,183,1,185,1,186,1,187,1,183,1,182,1,183,1,187,1,182,1,187,1,188,1,180,1,182,1,188,1,180,1,188,1,189,1,179,1,180,1,189,1,190,1,179,1,189,1,190,1,178,1,179,1,191,1,178,1,190,1,191,1,177,1,178,1,1,0,177,1,191,1,39,0,20,0,19,0,39,0,192,1,20,0,20,0,192,1,193,1,192,1,194,1,193,1,194,1,195,1,193,1,140,1,195,1,194,1,140,1,3,0,195,1,139,1,3,0,140,1,3,0,139,1,1,0,139,1,137,1,1,0,1,0,137,1,177,1,135,1,177,1,137,1,175,1,177,1,135,1,175,1,135,1,133,1,175,1,133,1,171,1,171,1,133,1,132,1,171,1,132,1,144,1,132,1,142,1,144,1,192,1,196,1,194,1,197,1,194,1,196,1,197,1,140,1,194,1,198,1,138,1,140,1,198,1,140,1,197,1,197,1,199,1,198,1,197,1,200,1,199,1,201,1,200,1,197,1,201,1,197,1,196,1,202,1,201,1,196,1,202,1,196,1,192,1,39,0,202,1,192,1,198,1,199,1,203,1,198,1,203,1,204,1,138,1,198,1,204,1,138,1,204,1,136,1,204,1,205,1,136,1,134,1,136,1,205,1,206,1,134,1,205,1,207,1,206,1,205,1,206,1,207,1,208,1,209,1,210,1,211,1,211,1,210,1,207,1,211,1,207,1,205,1,204,1,211,1,205,1,203,1,211,1,204,1,203,1,212,1,211,1,209,1,211,1,212,1,134,1,120,1,122,1,206,1,120,1,134,1,206,1,118,1,120,1,206,1,208,1,118,1,118,1,208,1,213,1,214,1,213,1,208,1,214,1,208,1,215,1,215,1,208,1,216,1,208,1,217,1,216,1,207,1,217,1,208,1,207,1,218,1,217,1,210,1,218,1,207,1,210,1,219,1,218,1,219,1,210,1,209,1,219,1,209,1,220,1,221,1,219,1,220,1,221,1,220,1,222,1,221,1,222,1,223,1,221,1,223,1,224,1,224,1,223,1,225,1,226,1,227,1,217,1,226,1,217,1,218,1,226,1,218,1,219,1,226,1,219,1,221,1,226,1,221,1,224,1,101,1,106,1,102,1,102,1,106,1,228,1,106,1,117,1,228,1,229,1,228,1,117,1,118,1,229,1,117,1,118,1,230,1,229,1,118,1,213,1,230,1,231,1,230,1,213,1,231,1,213,1,214,1,232,1,231,1,214,1,215,1,232,1,214,1,215,1,233,1,232,1,233,1,215,1,216,1,233,1,216,1,234,1,216,1,217,1,234,1,217,1,235,1,234,1,217,1,76,0,235,1,235,1,76,0,75,0,132,0,112,0,114,0,132,0,236,1,112,0,236,1,110,0,112,0,236,1,237,1,110,0,110,0,237,1,109,0,238,1,109,0,237,1,88,0,109,0,238,1,88,0,238,1,239,1,239,1,79,0,88,0,239,1,77,0,79,0,239,1,240,1,77,0,77,0,240,1,75,0,241,1,75,0,240,1,235,1,75,0,241,1,235,1,241,1,242,1,234,1,235,1,242,1,234,1,242,1,233,1,242,1,232,1,233,1,242,1,243,1,232,1,243,1,231,1,232,1,243,1,230,1,231,1,230,1,243,1,244,1,230,1,244,1,229,1,244,1,245,1,229,1,229,1,245,1,228,1,245,1,102,1,228,1,245,1,246,1,102,1,247,1,246,1,245,1,247,1,248,1,246,1,249,1,248,1,247,1,250,1,248,1,249,1,249,1,238,1,250,1,249,1,239,1,238,1,239,1,249,1,240,1,249,1,247,1,240,1,241,1,240,1,247,1,244,1,241,1,247,1,241,1,244,1,243,1,241,1,243,1,242,1,244,1,247,1,245,1,248,1,250,1,251,1,248,1,251,1,246,1,131,0,133,0,215,0,131,0,215,0,57,1,57,1,132,0,131,0,58,1,132,0,57,1,236,1,132,0,58,1,236,1,58,1,61,1,237,1,236,1,61,1,237,1,61,1,64,1,238,1,237,1,64,1,238,1,64,1,63,1,238,1,63,1,250,1,250,1,63,1,65,1,250,1,65,1,251,1,65,1,76,1,251,1,76,1,246,1,251,1,76,1,81,1,246,1,102,1,246,1,81,1,102,1,81,1,85,1,252,1,253,1,254,1,255,1,0,2,1,2,1,2,0,2,2,2,1,2,2,2,3,2,4,2,3,2,2,2,5,2,3,2,4,2,6,2,5,2,4,2,6,2,4,2,7,2,7,2,252,1,6,2,7,2,8,2,252,1,252,1,8,2,253,1,8,2,9,2,253,1,253,1,9,2,10,2,253,1,10,2,11,2,11,2,254,1,253,1,11,2,12,2,254,1,11,2,13,2,12,2,11,2,14,2,13,2,14,2,15,2,13,2,4,2,2,2,7,2,2,2,16,2,17,2,7,2,2,2,17,2,7,2,17,2,8,2,8,2,17,2,9,2,5,2,18,2,3,2,19,2,3,2,18,2,1,2,3,2,19,2,1,2,19,2,20,2,20,2,255,1,1,2,20,2,21,2,255,1,22,2,255,1,21,2,22,2,23,2,255,1,23,2,22,2,24,2,23,2,24,2,25,2,24,2,26,2,25,2,27,2,25,2,26,2,28,2,29,2,30,2,29,2,28,2,31,2,29,2,31,2,27,2,27,2,31,2,25,2,31,2,32,2,25,2,23,2,25,2,32,2,23,2,32,2,33,2,255,1,23,2,33,2,255,1,33,2,34,2,255,1,34,2,0,2,31,2,28,2,32,2,35,2,36,2,37,2,30,2,35,2,37,2,30,2,37,2,38,2,28,2,30,2,38,2,28,2,38,2,39,2,28,2,39,2,32,2,32,2,39,2,40,2,32,2,40,2,41,2,32,2,41,2,42,2,33,2,32,2,42,2,33,2,42,2,43,2,34,2,33,2,43,2,34,2,43,2,44,2,34,2,44,2,45,2,34,2,45,2,0,2,0,2,45,2,46,2,0,2,46,2,2,2,16,2,2,2,46,2,37,2,36,2,47,2,37,2,47,2,48,2,38,2,37,2,48,2,38,2,48,2,39,2,14,2,49,2,15,2,15,2,49,2,50,2,15,2,50,2,51,2,50,2,52,2,51,2,52,2,50,2,53,2,53,2,54,2,52,2,53,2,55,2,54,2,56,2,54,2,55,2,56,2,57,2,54,2,57,2,56,2,58,2,58,2,59,2,57,2,60,2,59,2,58,2,60,2,58,2,61,2,60,2,61,2,62,2,60,2,62,2,63,2,36,2,63,2,62,2,36,2,64,2,63,2,35,2,64,2,36,2,65,2,66,2,67,2,68,2,67,2,66,2,68,2,69,2,67,2,68,2,70,2,69,2,71,2,69,2,70,2,67,2,69,2,71,2,71,2,72,2,67,2,65,2,67,2,72,2,73,2,65,2,72,2,74,2,65,2,73,2,74,2,73,2,75,2,76,2,74,2,75,2,76,2,77,2,74,2,76,2,78,2,77,2,77,2,78,2,79,2,80,2,79,2,78,2,79,2,80,2,81,2,80,2,82,2,81,2,83,2,81,2,82,2,83,2,79,2,81,2,83,2,84,2,79,2,77,2,79,2,84,2,83,2,82,2,85,2,85,2,86,2,83,2,86,2,84,2,83,2,86,2,87,2,84,2,88,2,87,2,86,2,88,2,89,2,87,2,90,2,91,2,92,2,91,2,90,2,93,2,93,2,90,2,94,2,93,2,94,2,95,2,96,2,95,2,94,2,96,2,97,2,95,2,98,2,97,2,96,2,98,2,96,2,99,2,85,2,98,2,99,2,85,2,99,2,100,2,85,2,100,2,86,2,100,2,88,2,86,2,101,2,102,2,92,2,101,2,92,2,91,2,91,2,66,2,101,2,91,2,68,2,66,2,91,2,93,2,68,2,68,2,93,2,70,2,70,2,93,2,95,2,70,2,95,2,103,2,95,2,104,2,103,2,95,2,105,2,104,2,97,2,105,2,95,2,97,2,106,2,105,2,107,2,106,2,97,2,107,2,97,2,98,2,98,2,108,2,107,2,98,2,109,2,108,2,82,2,109,2,98,2,82,2,98,2,85,2,110,2,111,2,112,2,110,2,112,2,113,2,113,2,112,2,114,2,113,2,114,2,115,2,116,2,115,2,114,2,116,2,113,2,115,2,116,2,110,2,113,2,116,2,114,2,117,2,118,2,117,2,114,2,119,2,118,2,120,2,118,2,114,2,120,2,114,2,119,2,120,2,114,2,112,2,119,2,112,2,121,2,119,2,112,2,111,2,121,2,122,2,121,2,111,2,123,2,122,2,111,2,124,2,123,2,111,2,124,2,111,2,125,2,125,2,111,2,126,2,126,2,111,2,110,2,126,2,110,2,127,2,127,2,110,2,116,2,127,2,116,2,128,2,128,2,116,2,129,2,129,2,116,2,130,2,131,2,130,2,116,2,119,2,121,2,118,2,131,2,116,2,117,2,131,2,117,2,132,2,132,2,117,2,133,2,134,2,133,2,117,2,135,2,134,2,117,2,118,2,135,2,117,2,118,2,136,2,135,2,137,2,136,2,118,2,138,2,137,2,118,2,118,2,139,2,138,2,118,2,121,2,139,2,122,2,139,2,121,2,18,0,20,0,140,2,20,0,193,1,140,2,140,2,193,1,195,1,140,2,195,1,141,2,141,2,195,1,142,2,141,2,142,2,143,2,8,0,143,2,142,2]);fileData0.push.apply(fileData0,[10,0,143,2,8,0,141,2,143,2,10,0,141,2,10,0,16,0,140,2,141,2,16,0,140,2,16,0,18,0,142,2,195,1,3,0,142,2,3,0,4,0,142,2,4,0,6,0,8,0,142,2,6,0,144,2,145,2,146,2,147,2,148,2,149,2,147,2,149,2,150,2,151,2,147,2,150,2,151,2,150,2,152,2,153,2,151,2,152,2,153,2,152,2,154,2,145,2,153,2,154,2,145,2,155,2,153,2,155,2,145,2,144,2,155,2,144,2,156,2,156,2,144,2,157,2,156,2,157,2,158,2,158,2,159,2,156,2,156,2,159,2,160,2,160,2,159,2,161,2,160,2,161,2,162,2,147,2,162,2,161,2,147,2,151,2,162,2,153,2,162,2,151,2,153,2,160,2,162,2,155,2,160,2,153,2,156,2,160,2,155,2,147,2,161,2,148,2,159,2,148,2,161,2,150,2,149,2,163,2,150,2,163,2,164,2,165,2,157,2,166,2,166,2,157,2,167,2,168,2,167,2,157,2,168,2,157,2,144,2,144,2,146,2,169,2,168,2,144,2,169,2,168,2,169,2,170,2,171,2,168,2,170,2,171,2,167,2,168,2,167,2,171,2,172,2,167,2,172,2,166,2,173,2,166,2,172,2,173,2,165,2,166,2,173,2,174,2,165,2,157,2,165,2,174,2,157,2,174,2,175,2,157,2,175,2,158,2,158,2,175,2,176,2,158,2,176,2,159,2,177,2,159,2,176,2,177,2,148,2,159,2,149,2,148,2,177,2,173,2,178,2,174,2,178,2,179,2,174,2,178,2,180,2,179,2,179,2,180,2,163,2,163,2,181,2,179,2,163,2,149,2,181,2,149,2,177,2,181,2,181,2,177,2,176,2,181,2,176,2,175,2,175,2,174,2,181,2,181,2,174,2,179,2,182,2,183,2,184,2,182,2,184,2,185,2,185,2,186,2,182,2,187,2,188,2,189,2,188,2,187,2,186,2,186,2,187,2,190,2,186,2,190,2,182,2,190,2,191,2,182,2,191,2,183,2,182,2,183,2,191,2,192,2,193,2,192,2,191,2,194,2,191,2,195,2,191,2,190,2,195,2,190,2,189,2,195,2,190,2,187,2,189,2,184,2,196,2,197,2,198,2,196,2,184,2,198,2,184,2,183,2,183,2,199,2,198,2,183,2,192,2,199,2,200,2,199,2,192,2,200,2,192,2,193,2,201,2,200,2,193,2,191,2,201,2,193,2,201,2,191,2,202,2,194,2,202,2,191,2,203,2,202,2,194,2,203,2,194,2,204,2,204,2,194,2,195,2,205,2,204,2,195,2,205,2,195,2,189,2,205,2,189,2,206,2,188,2,206,2,189,2,202,2,203,2,201,2,201,2,207,2,200,2,208,2,207,2,201,2,201,2,203,2,208,2,209,2,208,2,203,2,209,2,203,2,204,2,209,2,204,2,210,2,205,2,210,2,204,2,211,2,210,2,205,2,206,2,211,2,205,2,206,2,212,2,211,2,188,2,212,2,206,2,213,2,212,2,188,2,213,2,188,2,214,2,186,2,214,2,188,2,186,2,215,2,214,2,185,2,215,2,186,2,185,2,216,2,215,2,185,2,197,2,216,2,184,2,197,2,185,2,211,2,209,2,210,2,212,2,213,2,217,2,212,2,217,2,211,2,209,2,211,2,217,2,209,2,217,2,218,2,218,2,208,2,209,2,218,2,219,2,208,2,208,2,219,2,207,2,220,2,221,2,222,2,66,0,223,2,64,0,70,0,64,0,223,2,224,2,70,0,223,2,224,2,223,2,225,2,226,2,224,2,225,2,226,2,225,2,220,2,220,2,225,2,223,2,220,2,223,2,221,2,66,0,221,2,223,2,66,0,67,0,221,2,67,0,222,2,221,2,68,0,222,2,67,0,68,0,69,0,222,2,30,0,28,0,57,0,27,0,57,0,28,0,27,0,164,0,57,0,57,0,164,0,69,0,164,0,154,0,69,0,154,0,222,2,69,0,154,0,153,0,222,2,153,0,220,2,222,2,153,0,157,0,220,2,226,2,220,2,157,0,157,0,146,0,226,2,226,2,146,0,224,2,145,0,224,2,146,0,145,0,144,0,224,2,144,0,70,0,224,2,144,0,143,0,70,0,62,0,70,0,143,0,62,0,143,0,63,0,227,2,228,2,229,2,227,2,229,2,230,2,230,2,231,2,227,2,231,2,230,2,232,2,231,2,232,2,233,2,232,2,206,0,234,2,232,2,234,2,233,2,235,2,233,2,234,2,235,2,234,2,236,2,237,2,238,2,239,2,227,2,238,2,237,2,227,2,240,2,238,2,231,2,240,2,227,2,241,2,240,2,231,2,241,2,231,2,233,2,233,2,242,2,241,2,233,2,235,2,242,2,242,2,235,2,239,2,242,2,239,2,238,2,240,2,242,2,238,2,240,2,241,2,242,2,243,2,244,2,245,2,243,2,245,2,246,2,172,0,243,2,246,2,172,0,246,2,245,2,172,0,245,2,163,0,247,2,163,0,245,2,162,0,163,0,247,2,162,0,247,2,237,2,162,0,237,2,173,0,239,2,173,0,237,2,173,0,239,2,175,0,235,2,175,0,239,2,235,2,188,0,175,0,235,2,236,2,188,0,202,0,188,0,236,2,234,2,202,0,236,2,234,2,204,0,202,0,206,0,204,0,234,2,247,2,245,2,244,2,244,2,237,2,247,2,243,2,237,2,244,2,243,2,227,2,237,2,172,0,227,2,243,2,227,2,172,0,228,2,169,0,228,2,172,0,169,0,248,2,228,2,171,0,248,2,169,0,171,0,249,2,248,2,250,2,249,2,171,0,250,2,171,0,251,2,26,0,251,2,171,0,26,0,252,2,251,2,26,0,253,2,252,2,26,0,29,0,253,2,29,0,254,2,253,2,31,0,254,2,29,0,255,2,0,3,1,3,255,2,2,3,0,3,0,3,2,3,3,3,3,3,4,3,5,3,3,3,43,0,4,3,3,3,2,3,43,0,44,0,43,0,2,3,44,0,2,3,255,2,44,0,255,2,46,0,1,3,46,0,255,2,1,3,48,0,46,0,50,0,48,0,1,3,50,0,1,3,0,3,50,0,0,3,58,0,58,0,0,3,3,3,58,0,3,3,6,3,58,0,6,3,52,0,6,3,7,3,52,0,52,0,7,3,54,0,40,0,34,0,41,0,40,0,41,0,54,0,40,0,54,0,8,3,225,1,8,3,54,0,225,1,54,0,7,3,224,1,225,1,7,3,6,3,224,1,7,3,226,1,224,1,6,3,3,3,226,1,6,3,3,3,227,1,226,1,3,3,5,3,227,1,217,1,227,1,5,3,217,1,5,3,76,0,74,0,76,0,5,3,4,3,74,0,5,3,4,3,78,0,74,0,43,0,78,0,4,3,42,0,78,0,43,0,9,3,10,3,11,3,10,3,12,3,13,3,10,3,13,3,11,3,14,3,11,3,13,3,9,3,11,3,14,3,9,3,14,3,15,3,16,3,9,3,15,3,16,3,15,3,17,3,18,3,17,3,15,3,18,3,117,0,119,0,18,3,119,0,17,3,17,3,119,0,111,0,17,3,111,0,16,3,111,0,106,0,16,3,9,3,16,3,106,0,9,3,106,0,104,0,9,3,104,0,10,3,103,0,10,3,104,0,103,0,12,3,10,3,103,0,102,0,12,3,19,3,12,3,102,0,19,3,102,0,98,0,19,3,98,0,20,3,98,0,89,0,20,3,89,0,21,3,20,3,89,0,91,0,21,3,120,0,21,3,91,0,126,0,118,0,117,0,126,0,117,0,18,3,126,0,18,3,124,0,18,3,15,3,124,0,15,3,122,0,124,0,15,3,14,3,122,0,22,3,122,0,14,3,14,3,13,3,22,3,22,3,13,3,23,3,23,3,13,3,12,3,23,3,12,3,24,3,19,3,24,3,12,3,20,3,24,3,19,3,21,3,24,3,20,3,21,3,23,3,24,3,120,0,23,3,21,3,22,3,23,3,120,0,120,0,121,0,22,3,22,3,121,0,122,0,159,0,160,0,25,3,151,0,159,0,25,3,151,0,25,3,26,3,0,0,1,0,2,0,0,0,3,0,4,0,5,0,6,0,7,0,7,0,6,0,8,0,7,0,8,0,9,0,3,0,9,0,8,0,3,0,8,0,10,0,4,0,3,0,10,0,4,0,10,0,11,0,12,0,13,0,14,0,13,0,9,0,14,0,13,0,15,0,9,0,9,0,15,0,16,0,9,0,16,0,7,0,16,0,5,0,7,0,16,0,17,0,5,0,14,0,9,0,3,0,0,0,14,0,3,0,12,0,14,0,0,0,0,0,2,0,12,0,18,0,12,0,2,0,18,0,19,0,12,0,12,0,19,0,13,0,13,0,19,0,20,0,13,0,20,0,15,0,21,0,15,0,20,0,16,0,15,0,21,0,21,0,22,0,16,0,22,0,17,0,16,0,23,0,17,0,22,0,17,0,23,0,24,0,17,0,24,0,5,0,5,0,24,0,25,0,5,0,25,0,6,0,23,0,22,0,26,0,21,0,20,0,27,0,21,0,27,0,28,0,21,0,28,0,22,0,26,0,22,0,28,0,26,0,28,0,29,0,11,0,30,0,31,0,11,0,10,0,30,0,32,0,30,0,10,0,32,0,10,0,8,0,33,0,32,0,8,0,33,0,8,0,6,0,6,0,34,0,33,0,6,0,25,0,34,0,34,0,25,0,35,0,24,0,35,0,25,0,24,0,36,0,35,0,36,0,24,0,23,0,36,0,23,0,37,0,26,0,37,0,23,0,26,0,38,0,37,0,26,0,39,0,38,0,26,0,29,0,39,0,40,0,39,0,29,0,34,0,35,0,41,0,34,0,41,0,42,0,34,0,42,0,43,0,43,0,33,0,34,0,33,0,43,0,44,0,33,0,44,0,32,0,44,0,45,0,32,0,30,0,32,0,45,0,46,0,47,0,48,0,45,0,46,0,48,0,45,0,49,0,46,0,49,0,45,0,44,0,30,0,45,0,50,0,45,0,48,0,50,0,51,0,50,0,48,0,51,0,48,0,47,0,52,0,51,0,47,0,52,0,47,0,53,0,52,0,53,0,54,0,54,0,53,0,55,0,47,0,55,0,53,0,47,0,56,0,55,0,46,0,56,0,47,0,57,0,56,0,46,0,57,0,46,0,49,0,57,0,49,0,58,0,58,0,49,0,59,0,49,0,44,0,59,0,44,0,42,0,59,0,44,0,43,0,42,0,60,0,54,0,61,0,54,0,55,0,61,0,62,0,61,0,55,0,62,0,55,0,56,0,62,0,56,0,63,0,57,0,63,0,56,0,57,0,64,0,63,0,57,0,58,0,64,0,64,0,58,0,65,0,58,0,59,0,65,0,66,0,65,0,59,0,66,0,59,0,42,0,42,0,67,0,66,0,67,0,42,0,41,0,68,0,67,0,41,0,68,0,69,0,67,0,70,0,69,0,68,0,70,0,71,0,69,0,72,0,73,0,65,0,72,0,65,0,66,0,66,0,67,0,72,0,72,0,67,0,69,0,72,0,69,0,74,0,71,0,74,0,69,0,75,0,74,0,71,0,75,0,76,0,74,0,75,0,77,0,76,0,76,0,77,0,78,0,76,0,78,0,79,0,80,0,79,0,78,0,80,0,64,0,79,0,80,0,63,0,64,0,63,0,80,0,62,0,81,0,62,0,80,0,62,0,81,0,61,0,61,0,81,0,82,0,72,0,74,0,73,0,76,0,73,0,74,0,76,0,79,0,73,0,73,0,79,0,64,0,64,0,65,0,73,0,80,0,78,0,83,0,75,0,84,0,77,0,71,0,70,0,85,0,71,0,85,0,86,0,75,0,71,0,86,0,75,0,86,0,87,0,75,0,87,0,84,0,84,0,87,0,88,0,84,0,88,0,89,0,89,0,77,0,84,0,89,0,90,0,77,0,77,0,90,0,91,0,77,0,91,0,78,0,92,0,78,0,91,0,92,0,83,0,78,0,92,0,93,0,83,0,80,0,83,0,93,0,80,0,93,0,94,0,80,0,94,0,95,0,96,0,95,0,94,0,92,0,97,0,93,0,98,0,88,0,87,0,98,0,87,0,99,0,99,0,87,0,86,0,100,0,101,0,102,0,100,0,102,0,103,0,102,0,96,0,103,0,104,0,103,0,96,0,104,0,96,0,94,0,104,0,94,0,93,0,104,0,93,0,105,0,105,0,93,0,97,0,105,0,97,0,106,0,107,0,105,0,106,0,107,0,108,0,105,0,109,0,108,0,107,0,109,0,110,0,108,0,111,0,110,0,109,0,111,0,112,0,110,0,112,0,113,0,110,0,113,0,114,0,110,0,113,0,115,0,114,0,114,0,104,0,105,0,114,0,105,0,108,0,114,0,108,0,110,0,104,0,114,0,115,0,104,0,115,0,103,0,115,0,100,0,103,0,100,0,115,0,116,0,100,0,116,0,117,0,101,0,100,0,117,0,101,0,117,0,118,0,115,0,113,0,119,0,115,0,119,0,116,0,95,0,96,0,120,0,120,0,96,0,102,0,120,0,102,0,121,0,121,0,102,0,101,0,122,0,121,0,101,0,101,0,118,0,122,0,123,0,122,0,118,0,124,0,123,0,118,0,121,0,122,0,125,0,121,0,125,0,120,0,126,0,120,0,125,0,95,0,120,0,126,0,61,0,82,0,60,0,82,0,127,0,60,0,128,0,60,0,127,0,127,0,129,0,128,0,129,0,130,0,128,0,131,0,130,0,129,0,131,0,129,0,132,0,132,0,123,0,131,0,123,0,132,0,122,0,122,0,132,0,129,0,122,0,129,0,125,0,127,0,125,0,129,0,126,0,125,0,127,0,82,0,126,0,127,0,82,0,95,0,126,0,82,0,81,0,95,0,80,0,95,0,81,0,133,0,128,0,130,0,134,0,135,0,136,0,134,0,136,0,137,0,137,0,124,0,134,0,137,0,138,0,124,0,124,0,138,0,123,0,123,0,138,0,139,0,123,0,139,0,131,0,131,0,139,0,140,0,131,0,140,0,130,0,130,0,140,0,141,0,130,0,141,0,133,0,142,0,133,0,141,0,142,0,143,0,133,0,143,0,144,0,133,0,133,0,144,0,128,0,128,0,144,0,145,0,128,0,145,0,60,0,60,0,145,0,54,0,146,0,142,0,141,0,147,0,146,0,148,0,146,0,141,0,148,0,148,0,141,0,140,0,52,0,54,0,149,0,145,0,149,0,54,0,145,0,144,0,149,0,147,0,150,0,151,0,152,0,153,0,154,0,155,0,154,0,153,0,136,0,155,0,153,0,136,0,153,0,156,0,156,0,137,0,136,0,156,0,157,0,137,0,157,0,138,0,137,0,157,0,139,0,138,0,157,0,158,0,139,0,158,0,140,0,139,0,158,0,159,0,140,0,148,0,140,0,159,0,160,0,148,0,159,0,147,0,148,0,160,0,161,0,147,0,160,0,147,0,161,0,150,0,162,0,150,0,161,0,162,0,161,0,163,0,164,0,160,0,159,0,165,0,164,0,159,0,165,0,159,0,158,0,165,0,158,0,157,0,165,0,157,0,156,0,152,0,165,0,156,0,152,0,156,0,153,0,165,0,152,0,164,0,162,0,163,0,166,0,163,0,167,0,166,0,168,0,166,0,167,0,167,0,169,0,168,0,170,0,168,0,169,0,169,0,171,0,170,0,171,0,169,0,172,0,171,0,172,0,154,0,152,0,154,0,172,0,173,0,152,0,172,0,173,0,164,0,152,0,173,0,174,0,164,0,164,0,174,0,160,0,161,0,160,0,174,0,161,0,174,0,163,0,173,0,163,0,174,0,163,0,173,0,167,0,169,0,167,0,173,0,169,0,173,0,172,0,170,0,175,0,168,0,175,0,176,0,168,0,177,0,178,0,179,0,177,0,179,0,180,0,177,0,180,0,181,0,181,0,180,0,176,0,181,0,176,0,182,0,175,0,182,0,176,0,182,0,175,0,183,0,183,0,175,0,170,0,183,0,170,0,184,0,171,0,184,0,170,0,171,0,185,0,184,0,154,0,185,0,171,0,154,0,186,0,185,0,155,0,186,0,154,0,187,0,186,0,155,0,187,0,155,0,188,0,155,0,135,0,188,0,155,0,136,0,135,0,182,0,183,0,189,0,182,0,189,0,190,0,190,0,181,0,182,0,190,0,191,0,181,0,191,0,177,0,181,0,191,0,192,0,177,0,193,0,186,0,187,0,193,0,185,0,186,0,194,0,185,0,193,0,194,0,184,0,185,0,183,0,184,0,194,0,183,0,194,0,189,0,189,0,194,0,195,0,189,0,195,0,196,0,197,0,189,0,196,0,190,0,189,0,197,0,190,0,197,0,198,0,198,0,191,0,190,0,198,0,199,0,191,0,192,0,191,0,199,0,192,0,199,0,200,0,201,0,202,0,203,0,201,0,203,0,204,0,204,0,196,0,201,0,197,0,196,0,204,0,204,0,205,0,197,0,205,0,198,0,197,0,205,0,206,0,198,0,199,0,198,0,206,0,199,0,206,0,207,0,200,0,199,0,207,0,200,0,207,0,208,0,200,0,208,0,209,0,200,0,209,0,210,0,192,0,200,0,210,0,192,0,210,0,211,0,211,0,177,0,192,0,211,0,212,0,177,0,177,0,212,0,178,0,204,0,203,0,213,0,204,0,213,0,205,0,205,0,213,0,214,0,205,0,214,0,206,0,214,0,213,0,215,0,210,0,209,0,216,0,210,0,216,0,217,0,211,0,210,0,217,0,211,0,217,0,218,0,212,0,211,0,218,0,212,0,218,0,219,0,220,0,212,0,219,0,221,0,220,0,219,0,221,0,222,0,220,0,223,0,222,0,221,0,224,0,223,0,221,0,224,0,225,0,223,0,224,0,226,0,225,0,224,0,227,0,226,0,227,0,228,0,226,0,227,0,229,0,228,0,229,0,227,0,230,0,229,0,230,0,231,0,232,0,216,0,233,0,232,0,217,0,216,0,232,0,230,0,217,0,218,0,217,0,230,0,218,0,230,0,227,0,227,0,219,0,218,0,227,0,224,0,219,0,219,0,224,0,221,0,231,0,230,0,232,0,234,0,231,0,232,0,232,0,233,0,234,0,233,0,235,0,234,0,234,0,236,0,231,0,236,0,237,0,231,0,231,0,237,0,229,0,236,0,238,0,237,0,220,0,178,0,212,0,239,0,178,0,220,0,239,0,220,0,240,0,220,0,222,0,240,0,241,0,240,0,222,0,241,0,222,0,242,0,242,0,222,0,243,0,223,0,243,0,222,0,243,0,223,0,244,0,244,0,223,0,225,0,244,0,225,0,245,0,245,0,225,0,226,0,245,0,226,0,40,0,40,0,29,0,245,0,28,0,245,0,29,0,28,0,244,0,245,0,244,0,28,0,27,0,244,0,27,0,243,0,243,0,27,0,20,0,243,0,20,0,242,0,242,0,20,0,19,0,242,0,19,0,241,0,18,0,241,0,19,0,18,0,240,0,241,0,18,0,246,0,240,0,239,0,240,0,246,0,239,0,246,0,247,0,248,0,239,0,247,0,248,0,249,0,239,0,249,0,178,0,239,0,249,0,179,0,178,0,249,0,180,0,179,0,249,0,250,0,180,0,250,0,176,0,180,0,250,0,251,0,176,0,176,0,251,0,168,0,168,0,251,0,166,0,162,0,166,0,251,0,162,0,251,0,252,0,252,0,251,0,250,0,252,0,250,0,253,0,248,0,253,0,250,0,248,0,250,0,249,0,254,0,255,0,0,1,1,1,2,1,3,1,4,1,2,1,1,1,5,1,4,1,1,1,4,1,5,1,6,1,5,1,7,1,6,1,5,1,254,0,7,1,254,0,5,1,8,1,255,0,254,0,8,1,8,1,1,1,255,0,255,0,1,1,0,1,3,1,0,1,1,1,5,1,1,1,8,1,4,1,6,1,9,1,10,1,11,1,12,1,10,1,12,1,13,1,13,1,12,1,14,1,13,1,14,1,15,1,15,1,16,1,13,1,17,1,16,1,15,1,16,1,17,1,18,1,17,1,19,1,18,1,20,1,18,1,19,1,18,1,20,1,21,1,20,1,22,1,21,1,20,1,23,1,22,1,23,1,24,1,22,1,23,1,25,1,24,1,24,1,25,1,26,1,24,1,26,1,27,1,27,1,26,1,3,1,27,1,3,1,2,1,15,1,19,1,17,1,10,1,18,1,21,1,18,1,10,1,13,1,18,1,13,1,16,1,28,1,29,1,30,1,29,1,31,1,30,1,32,1,30,1,31,1,32,1,31,1,33,1,33,1,34,1,32,1,28,1,32,1,34,1,28,1,30,1,32,1,35,1,36,1,37,1,38,1,37,1,36,1,36,1,39,1,38,1,40,1,38,1,39,1,40,1,39,1,41,1,40,1,41,1,42,1,42,1,41,1,43,1,42,1,43,1,44,1,44,1,43,1,31,1,44,1,31,1,45,1,29,1,45,1,31,1,45,1,29,1,46,1,46,1,29,1,47,1,47,1,29,1,28,1,47,1,28,1,48,1,49,1,48,1,28,1,49,1,28,1,34,1,34,1,50,1,49,1,51,1,42,1,44,1,40,1,42,1,51,1,40,1,51,1,52,1,51,1,44,1,52,1,44,1,53,1,52,1,44,1,45,1,53,1,45,1,46,1,53,1,34,1,35,1,50,1,35,1,34,1,36,1,33,1,36,1,34,1,36,1,33,1,54,1,31,1,54,1,33,1,54,1,31,1,43,1,43,1,55,1,54,1,55,1,43,1,41,1,55,1,41,1,39,1,36,1,55,1,39,1,54,1,55,1,36,1,56,1,57,1,58,1,57,1,59,1,58,1,57,1,60,1,59,1,61,1,59,1,60,1,61,1,60,1,62,1,63,1,61,1,62,1,63,1,62,1,50,1,50,1,64,1,63,1,50,1,35,1,64,1,65,1,64,1,35,1,65,1,35,1,66,1,66,1,67,1,65,1,66,1,68,1,67,1,67,1,68,1,69,1,69,1,68,1,70,1,71,1,69,1,70,1,71,1,70,1,72,1,71,1,72,1,73,1,67,1,69,1,74,1,75,1,74,1,69,1,75,1,69,1,76,1,71,1,76,1,69,1,73,1,76,1,71,1,64,1,65,1,77,1,65,1,78,1,77,1,65,1,67,1,78,1,79,1,78,1,67,1,79,1,67,1,74,1,74,1,80,1,79,1,74,1,75,1,80,1,81,1,80,1,75,1,75,1,76,1,81,1,82,1,81,1,76,1,73,1,82,1,76,1,83,1,82,1,73,1,84,1,83,1,73,1,85,1,83,1,84,1,85,1,84,1,86,1,86,1,84,1,87,1,86,1,87,1,88,1,88,1,87,1,89,1,90,1,91,1,92,1,91,1,90,1,93,1,91,1,93,1,94,1,94,1,95,1,91,1,94,1,77,1,95,1,77,1,96,1,95,1,77,1,78,1,96,1,96,1,78,1,79,1,96,1,79,1,97,1,97,1,79,1,80,1,97,1,80,1,98,1,98,1,80,1,99,1,81,1,99,1,80,1,100,1,99,1,81,1,82,1,100,1,81,1,101,1,93,1,90,1,102,1,103,1,104,1,105,1,104,1,103,1,105,1,103,1,92,1,91,1,105,1,92,1,91,1,95,1,105,1,106,1,105,1,95,1,106,1,95,1,96,1,97,1,106,1,96,1,106,1,104,1,105,1,100,1,107,1,99,1,98,1,99,1,107,1,107,1,108,1,98,1,108,1,97,1,98,1,108,1,109,1,97,1,97,1,109,1,106,1,109,1,110,1,106,1,106,1,110,1,104,1,110,1,111,1,104,1,102,1,104,1,111,1,102,1,111,1,112,1,102,1,112,1,113,1,114,1,102,1,113,1,114,1,115,1,102,1,102,1,115,1,103,1,103,1,115,1,116,1,103,1,116,1,92,1,90,1,92,1,116,1,115,1,117,1,118,1,119,1,120,1,121,1,122,1,121,1,120,1,122,1,120,1,123,1,123,1,124,1,122,1,123,1,125,1,124,1,125,1,112,1,124,1,125,1,126,1,112,1,113,1,112,1,126,1,113,1,126,1,127,1,128,1,113,1,127,1,128,1,114,1,113,1,128,1,129,1,114,1,129,1,115,1,114,1,129,1,130,1,115,1,115,1,130,1,117,1,131,1,117,1,130,1,132,1,117,1,131,1,132,1,131,1,133,1,134,1,135,1,136,1,137,1,136,1,135,1,137,1,138,1,136,1,139,1,136,1,138,1,139,1,140,1,136,1,139,1,131,1,140,1,140,1,131,1,130,1,141,1,140,1,130,1,141,1,130,1,129,1,141,1,129,1,142,1,128,1,142,1,129,1,141,1,142,1,134,1,134,1,136,1,141,1,136,1,140,1,141,1,139,1,138,1,143,1,133,1,131,1,144,1,131,1,139,1,144,1,139,1,145,1,144,1,139,1,143,1,145,1,143,1,146,1,145,1,143,1,147,1,146,1,147,1,143,1,138,1,147,1,138,1,148,1,148,1,138,1,137,1,148,1,137,1,149,1,150,1,151,1,148,1,150,1,148,1,149,1,152,1,150,1,149,1,152,1,149,1,153,1,153,1,154,1,152,1,153,1,149,1,154,1,154,1,149,1,155,1,137,1,155,1,149,1,137,1,156,1,155,1,137,1,157,1,156,1,137,1,135,1,157,1,157,1,135,1,158,1,154,1,155,1,159,1,160,1,115,1,118,1,160,1,118,1,117,1,160,1,117,1,161,1,132,1,161,1,117,1,132,1,162,1,161,1,133,1,162,1,132,1,133,1,163,1,162,1,133,1,144,1,163,1,164,1,163,1,144,1,145,1,164,1,144,1,165,1,164,1,145,1,165,1,145,1,146,1,166,1,165,1,146,1,166,1,146,1,147,1,166,1,147,1,167,1,147,1,148,1,167,1,148,1,168,1,167,1,148,1,151,1,168,1,166,1,167,1,168,1,166,1,168,1,165,1,162,1,169,1,161,1,170,1,161,1,169,1,170,1,160,1,161,1,160,1,116,1,115,1,170,1,116,1,160,1,170,1,90,1,116,1,101,1,90,1,170,1,169,1,101,1,170,1,169,1,171,1,101,1,172,1,171,1,169,1,162,1,172,1,169,1,172,1,162,1,163,1,173,1,174,1,175,1,165,1,175,1,174,1,165,1,174,1,176,1,176,1,164,1,165,1,176,1,177,1,164,1,177,1,163,1,164,1,177,1,178,1,163,1,172,1,163,1,178,1,179,1,172,1,178,1,172,1,179,1,171,1,179,1,59,1,171,1,101,1,171,1,59,1,101,1,59,1,61,1,93,1,101,1,61,1,93,1,61,1,63,1,94,1,93,1,63,1,94,1,63,1,64,1,64,1,77,1,94,1,175,1,165,1,173,1,176,1,180,1,177,1,179,1,178,1,181,1,182,1,179,1,181,1,182,1,58,1,179,1,179,1,58,1,59,1,183,1,58,1,182,1,173,1,184,1,174,1,185,1,174,1,184,1,185,1,186,1,174,1,186,1,176,1,174,1,186,1,180,1,176,1,186,1,187,1,180,1,187,1,177,1,180,1,187,1,188,1,177,1,178,1,177,1,188,1,178,1,188,1,189,1,178,1,189,1,181,1,181,1,189,1,190,1,182,1,181,1,190,1,182,1,190,1,191,1,192,1,182,1,191,1,192,1,183,1,182,1,183,1,192,1,56,1,56,1,58,1,183,1,186,1,193,1,187,1,193,1,186,1,185,1,193,1,185,1,194,1,195,1,193,1,194,1,195,1,196,1,193,1,196,1,187,1,193,1,197,1,187,1,196,1,198,1,187,1,197,1,198,1,188,1,187,1,198,1,199,1,188,1,50,1,62,1,60,1,50,1,60,1,200,1,200,1,49,1,50,1,200,1,201,1,49,1,200,1,202,1,201,1,202,1,203,1,201,1,202,1,204,1,203,1,205,1,203,1,204,1,205,1,204,1,192,1,56,1,192,1,204,1,56,1,204,1,202,1,56,1,202,1,57,1,57,1,202,1,60,1,200,1,60,1,202,1,206,1,207,1,208,1,206,1,208,1,209,1,206,1,209,1,210,1,210,1,209,1,211,1,211,1,209,1,212,1,211,1,212,1,213,1,211,1,213,1,214,1,215,1,216,1,217,1,214,1,215,1,217,1,217,1,218,1,214,1,218,1,211,1,214,1,218,1,38,1,211,1,38,1,210,1,211,1,40,1,210,1,38,1,40,1,206,1,210,1,219,1,206,1,40,1,206,1,219,1,207,1,220,1,207,1,219,1,207,1,220,1,221,1,208,1,207,1,221,1,208,1,221,1,222,1,223,1,208,1,222,1,223,1,209,1,208,1,209,1,223,1,224,1,224,1,212,1,209,1,216,1,218,1,217,1,220,1,219,1,225,1,219,1,40,1,225,1,226,1,227,1,228,1,226,1,228,1,229,1,228,1,212,1,229,1,228,1,230,1,212,1,230,1,213,1,212,1,230,1,231,1,213,1,214,1,213,1,231,1,214,1,231,1,232,1,214,1,232,1,215,1,233,1,234,1,235,1,236,1,235,1,234,1,237,1,235,1,236,1,235,1,237,1,238,1,238,1,237,1,239,1,239,1,240,1,238,1,226,1,238,1,240,1,226,1,235,1,238,1,233,1,235,1,226,1,226,1,229,1,233,1,241,1,239,1,237,1,224,1,242,1,212,1,243,1,212,1,242,1,243,1,229,1,212,1,229,1,243,1,244,1,229,1,244,1,233,1,233,1,244,1,245,1,233,1,245,1,234,1,246,1,234,1,245,1,236,1,234,1,246,1,247,1,236,1,246,1,247,1,248,1,236,1,236,1,248,1,249,1,249,1,237,1,236,1,249,1,250,1,237,1,250,1,241,1,237,1,251,1,241,1,250,1,252,1,241,1,251,1,252,1,251,1,253,1,254,1,255,1,253,1,254,1,253,1,251,1,254,1,251,1,250,1,246,1,245,1,0,2,246,1,0,2,1,2,246,1,1,2,2,2,246,1,2,2,247,1,3,2,4,2,245,1,3,2,245,1,244,1,5,2,6,2,252,1,5,2,252,1,7,2,252,1,253,1,7,2,255,1,7,2,253,1,255,1,8,2,7,2,8,2,5,2,7,2,8,2,9,2,5,2,10,2,5,2,9,2,10,2,6,2,5,2,10,2,11,2,6,2,6,2,11,2,252,1,252,1,11,2,12,2,252,1,12,2,241,1,13,2,241,1,12,2,13,2,14,2,241,1,239,1,241,1,14,2,239,1,14,2,15,2,239,1,15,2,240,1,15,2,227,1,240,1,227,1,226,1,240,1,12,2,11,2,16,2,12,2,16,2,13,2,17,2,228,1,227,1,15,2,17,2,227,1,18,2,17,2,15,2,19,2,18,2,15,2,19,2,15,2,14,2,11,2,10,2,20,2,20,2,21,2,11,2,21,2,16,2,11,2,21,2,22,2,16,2,20,2,23,2,21,2,24,2,25,2,26,2,24,2,26,2,27,2,28,2,27,2,26,2,29,2,30,2,31,2,29,2,32,2,30,2,29,2,33,2,32,2,32,2,33,2,34,2,34,2,33,2,35,2,33,2,36,2,35,2,36,2,37,2,35,2,37,2,36,2,38,2,38,2,36,2,39,2,38,2,39,2,40,2,41,2,40,2,39,2,41,2,25,2,40,2,25,2,41,2,42,2,25,2,42,2,26,2,26,2,42,2,43,2,26,2,43,2,28,2,44,2,28,2,43,2,45,2,44,2,43,2,41,2,46,2,42,2,42,2,46,2,45,2,42,2,45,2,43,2,47,2,32,2,48,2,48,2,32,2,34,2,48,2,34,2,49,2,35,2,49,2,34,2,35,2,50,2,49,2,50,2,35,2,37,2,50,2,37,2,51,2,37,2,52,2,51,2,37,2,38,2,52,2,53,2,52,2,38,2,53,2,38,2,40,2,53,2,40,2,54,2,54,2,40,2,25,2,54,2,25,2,55,2,24,2,55,2,25,2,56,2,55,2,24,2,56,2,24,2,27,2,56,2,27,2,57,2,57,2,58,2,59,2,57,2,59,2,60,2,56,2,57,2,60,2,56,2,60,2,53,2,54,2,56,2,53,2,56,2,54,2,55,2,28,2,57,2,27,2,58,2,57,2,28,2,28,2,61,2,58,2,28,2,44,2,61,2,44,2,62,2,61,2,62,2,44,2,63,2,62,2,63,2,64,2,64,2,63,2,65,2,65,2,66,2,64,2,65,2,67,2,66,2,67,2,68,2,66,2,67,2,69,2,68,2,68,2,69,2,70,2,69,2,71,2,70,2,69,2,72,2,71,2,73,2,71,2,72,2,73,2,72,2,74,2,74,2,75,2,73,2,76,2,77,2,72,2,78,2,76,2,72,2,78,2,72,2,69,2,67,2,78,2,69,2,79,2,80,2,76,2,76,2,80,2,77,2,63,2,44,2,45,2,65,2,63,2,45,2,46,2,65,2,45,2,46,2,67,2,65,2,46,2,81,2,67,2,78,2,67,2,81,2,78,2,81,2,82,2,76,2,78,2,82,2,76,2,82,2,83,2,83,2,79,2,76,2,83,2,84,2,79,2,85,2,79,2,84,2,86,2,79,2,85,2,86,2,80,2,79,2,87,2,80,2,86,2,87,2,77,2,80,2,74,2,77,2,87,2,72,2,77,2,74,2,74,2,88,2,75,2,89,2,88,2,74,2,74,2,87,2,89,2,90,2,89,2,87,2,90,2,87,2,86,2,86,2,91,2,90,2,86,2,85,2,91,2,91,2,85,2,92,2,85,2,84,2,92,2,84,2,93,2,92,2,84,2,94,2,93,2,94,2,95,2,93,2,94,2,96,2,95,2,96,2,97,2,95,2,96,2,98,2,97,2,97,2,98,2,99,2,100,2,99,2,98,2,100,2,101,2,99,2,98,2,96,2,100,2,100,2,96,2,102,2,102,2,96,2,94,2,83,2,102,2,94,2,83,2,94,2,84,2,99,2,101,2,103,2,103,2,101,2,104,2,104,2,101,2,105,2,104,2,105,2,106,2,107,2,106,2,105,2,107,2,108,2,106,2,106,2,108,2,109,2,106,2,109,2,110,2,110,2,104,2,106,2,110,2,111,2,104,2,103,2,104,2,111,2,103,2,111,2,112,2,99,2,103,2,112,2,113,2,99,2,112,2,113,2,114,2,99,2,97,2,99,2,114,2,115,2,97,2,114,2,115,2,95,2,97,2,115,2,93,2,95,2,115,2,116,2,93,2,117,2,93,2,116,2,117,2,92,2,93,2,91,2,92,2,117,2,111,2,113,2,112,2,118,2,107,2,105,2,119,2,120,2,118,2,118,2,105,2,119,2,119,2,105,2,101,2,119,2,101,2,121,2,122,2,119,2,121,2,119,2,122,2,120,2,120,2,122,2,123,2,120,2,123,2,124,2,123,2,125,2,124,2,123,2,126,2,125,2,126,2,127,2,125,2,126,2,128,2,127,2,129,2,128,2,126,2,129,2,130,2,128,2,131,2,130,2,129,2,131,2,132,2,130,2,133,2,132,2,131,2,133,2,134,2,132,2,135,2,134,2,133,2,135,2,136,2,134,2,136,2,135,2,30,2,136,2,30,2,47,2,47,2,30,2,32,2,135,2,137,2,30,2,135,2,138,2,137,2,139,2,138,2,135,2,133,2,139,2,135,2,133,2,140,2,139,2,133,2,131,2,140,2,140,2,131,2,141,2,129,2,141,2,131,2,129,2,142,2,141,2,126,2,142,2,129,2,126,2,123,2,142,2,122,2,142,2,123,2,143,2,142,2,122,2,122,2,121,2,143,2,144,2,143,2,121,2,145,2,143,2,144,2,145,2,144,2,146,2,145,2,146,2,147,2,146,2,148,2,147,2,148,2,140,2,147,2,140,2,141,2,147,2,141,2,145,2,147,2,141,2,143,2,145,2,143,2,141,2,142,2,144,2,149,2,146,2,146,2,149,2,148,2,101,2,100,2,150,2,101,2,150,2,121,2,151,2,121,2,150,2,144,2,121,2,151,2,144,2,151,2,152,2,144,2,152,2,149,2,152,2,153,2,149,2,148,2,149,2,153,2,153,2,154,2,148,2,154,2,140,2,148,2,154,2,155,2,140,2,155,2,139,2,140,2,155,2,156,2,139,2,139,2,156,2,138,2,138,2,156,2,155,2,137,2,138,2,155,2,31,2,137,2,155,2,137,2,31,2,30,2,157,2,158,2,159,2,153,2,159,2,158,2,153,2,160,2,159,2,160,2,153,2,161,2,152,2,161,2,153,2,31,2,155,2,154,2,31,2,154,2,153,2,31,2,153,2,158,2,29,2,31,2,158,2,157,2,29,2,158,2,33,2,29,2,157,2,33,2,157,2,36,2,157,2,39,2,36,2,159,2,39,2,157,2,159,2,41,2,39,2,159,2,46,2,41,2,159,2,160,2,46,2,81,2,46,2,160,2,81,2,160,2,161,2,82,2,81,2,161,2,82,2,161,2,162,2,162,2,161,2,152,2,162,2,152,2,151,2,102,2,83,2,82,2,102,2,82,2,163,2,100,2,102,2,163,2,100,2,163,2,150,2,150,2,163,2,164,2,164,2,151,2,150,2,164,2,165,2,151,2,165,2,162,2,151,2,166,2,162,2,165,2,166,2,82,2,162,2,163,2,82,2,166,2,163,2,166,2,164,2,164,2,166,2,165,2,167,2,168,2,169,2,170,2,168,2,167,2,170,2,167,2,171,2,172,2,173,2,174,2,172,2,174,2,175,2,176,2,175,2,174,2,177,2,175,2,176,2,177,2,176,2,178,2,178,2,179,2,177,2,178,2,180,2,179,2,180,2,181,2,179,2,178,2,181,2,180,2,178,2,182,2,181,2,178,2,169,2,182,2,178,2,176,2,169,2,167,2,169,2,176,2,176,2,174,2,167,2,171,2,167,2,174,2,183,2,171,2,174,2,184,2,183,2,174,2,184,2,174,2,173,2,184,2,173,2,185,2,177,2,172,2,175,2,177,2,179,2,186,2,177,2,186,2,172,2,187,2,172,2,186,2,187,2,188,2,172,2,189,2,188,2,187,2,190,2,188,2,189,2,190,2,191,2,188,2,192,2,191,2,190,2,189,2,193,2,190,2,194,2,195,2,179,2,195,2,196,2,179,2,179,2,196,2,197,2,179,2,197,2,186,2,197,2,198,2,186,2,186,2,198,2,187,2,199,2,187,2,198,2,199,2,200,2,187,2,189,2,187,2,200,2,201,2,189,2,200,2,189,2,201,2,193,2,201,2,202,2,193,2,202,2,203,2,193,2,190,2,193,2,203,2,190,2,203,2,204,2,192,2,190,2,204,2,205,2,192,2,204,2,202,2,206,2,207,2,202,2,207,2,203,2,208,2,206,2,209,2,210,2,206,2,208,2,210,2,207,2,206,2,211,2,207,2,210,2,211,2,203,2,207,2,212,2,203,2,211,2,212,2,204,2,203,2,213,2,204,2,212,2,213,2,205,2,204,2,205,2,213,2,214,2,214,2,192,2,205,2,214,2,215,2,192,2,216,2,192,2,215,2,216,2,191,2,192,2,191,2,216,2,217,2,188,2,191,2,217,2,188,2,217,2,173,2,188,2,173,2,172,2,218,2,219,2,213,2,218,2,213,2,212,2,212,2,211,2,218,2,220,2,218,2,211,2,213,2,219,2,214,2,221,2,214,2,219,2,221,2,219,2,222,2,218,2,222,2,219,2,218,2,223,2,222,2,220,2,223,2,218,2,220,2,224,2,223,2,220,2,208,2,224,2,208,2,220,2,211,2,208,2,211,2,210,2,225,2,226,2,224,2,225,2,224,2,227,2,208,2,227,2,224,2,208,2,228,2,227,2,208,2,209,2,228,2,228,2,209,2,229,2,228,2,229,2,230,2,230,2,229,2,231,2,232,2,200,2,233,2,201,2,200,2,232,2,234,2,201,2,232,2,201,2,234,2,202,2,235,2,202,2,234,2,202,2,235,2,206,2,236,2,206,2,235,2,236,2,209,2,206,2,209,2,236,2,237,2,209,2,237,2,229,2,238,2,229,2,237,2,238,2,231,2,229,2,239,2,231,2,238,2,239,2,240,2,231,2,241,2,240,2,239,2,241,2,242,2,240,2,241,2,243,2,242,2,242,2,243,2,244,2,245,2,246,2,233,2,232,2,233,2,246,2,246,2,247,2,232,2,234,2,232,2,247,2,248,2,241,2,239,2,239,2,249,2,248,2,239,2,238,2,249,2,237,2,249,2,238,2,237,2,250,2,249,2,236,2,250,2,237,2,236,2,251,2,250,2,251,2,236,2,235,2,251,2,235,2,252,2,235,2,234,2,252,2,253,2,252,2,234,2,253,2,234,2,247,2,253,2,247,2,254,2,246,2,254,2,247,2,255,2,254,2,246,2,255,2,246,2,0,3,245,2,0,3,246,2,1,3,0,3,245,2,2,3,1,3,245,2,253,2,254,2,255,2,3,3,4,3,248,2,3,3,248,2,249,2,5,3,3,3,249,2,5,3,249,2,250,2,251,2,5,3,250,2,251,2,6,3,5,3,6,3,251,2,252,2,6,3,252,2,253,2,253,2,7,3,6,3,253,2,255,2,7,3,8,3,7,3,255,2,9,3,7,3,8,3,9,3,8,3,10,3,11,3,9,3,10,3,11,3,10,3,12,3,12,3,13,3,11,3,11,3,13,3,4,3,11,3,4,3,3,3,9,3,11,3,3,3,9,3,3,3,5,3,5,3,7,3,9,3,5,3,6,3,7,3,8,3,14,3,10,3,14,3,12,3,10,3,14,3,15,3,12,3,16,3,17,3,18,3,16,3,18,3,19,3,16,3,19,3,20,3,2,3,20,3,19,3,2,3,19,3,21,3,2,3,21,3,1,3,21,3,22,3,1,3,22,3,0,3,1,3,22,3,23,3,0,3,23,3,255,2,0,3,23,3,24,3,255,2,8,3,255,2,24,3,8,3,24,3,25,3,8,3,25,3,14,3,25,3,26,3,14,3,26,3,15,3,14,3,26,3,27,3,15,3,28,3,15,3,27,3,29,3,21,3,19,3,29,3,19,3,18,3,29,3,18,3,30,3,25,3,31,3,26,3,25,3,32,3,31,3,25,3,24,3,32,3,32,3,24,3,23,3,32,3,23,3,33,3,33,3,23,3,22,3,33,3,22,3,34,3,34,3,22,3,21,3,34,3,21,3,35,3,29,3,35,3,21,3,36,3,35,3,29,3,36,3,29,3,37,3,29,3,38,3,37,3,29,3,30,3,38,3,39,3,38,3,30,3,40,3,39,3,30,3,39,3,41,3,38,3,36,3,42,3,35,3,40,3,43,3,39,3,30,3,43,3,40,3,30,3,44,3,43,3,18,3,44,3,30,3,18,3,45,3,44,3,18,3,194,2,45,3,18,3,17,3,194,2,194,2,17,3,195,2,195,2,17,3,16,3,195,2,16,3,196,2,20,3,196,2,16,3,20,3,197,2,196,2,197,2,20,3,2,3,197,2,2,3,198,2,245,2,198,2,2,3,199,2,198,2,245,2,245,2,233,2,199,2,199,2,233,2,200,2,46,3,47,3,48,3,46,3,48,3,49,3,49,3,48,3,50,3,48,3,51,3,50,3,50,3,51,3,52,3,53,3,48,3,47,3,54,3,48,3,53,3,48,3,54,3,51,3,51,3,54,3,55,3,55,3,52,3,51,3,56,3,52,3,55,3,52,3,56,3,57,3,52,3,57,3,58,3,58,3,57,3,59,3,58,3,59,3,60,3,59,3,61,3,60,3,59,3,62,3,61,3,63,3,62,3,59,3,64,3,62,3,63,3,63,3,59,3,57,3,56,3,55,3,65,3,66,3,67,3,53,3,68,3,69,3,70,3,67,3,68,3,70,3,70,3,71,3,67,3,71,3,53,3,67,3,54,3,53,3,71,3,55,3,54,3,71,3,55,3,71,3,70,3,70,3,65,3,55,3,70,3,69,3,65,3,64,3,63,3,72,3,72,3,63,3,73,3,63,3,57,3,73,3,74,3,73,3,57,3,74,3,57,3,75,3,76,3,75,3,57,3,76,3,57,3,56,3,77,3,76,3,56,3,77,3,56,3,65,3,78,3,77,3,65,3,78,3,65,3,69,3,79,3,78,3,69,3,68,3,79,3,69,3,80,3,79,3,68,3,80,3,68,3,81,3,68,3,82,3,81,3,67,3,82,3,68,3,67,3,83,3,82,3,73,3,74,3,84,3,79,3,80,3,85,3,86,3,79,3,85,3,86,3,87,3,79,3,79,3,87,3,78,3,78,3,88,3,89,3,78,3,89,3,77,3,90,3,83,3,91,3,90,3,91,3,92,3,90,3,92,3,93,3,83,3,67,3,66,3,91,3,83,3,66,3,94,3,91,3,66,3,92,3,91,3,94,3,92,3,94,3,95,3,93,3,92,3,95,3,93,3,95,3,96,3,96,3,95,3,97,3,96,3,97,3,98,3,99,3,98,3,97,3,99,3,97,3,100,3,99,3,100,3,101,3,100,3,94,3,101,3,94,3,102,3,101,3,94,3,66,3,102,3,66,3,103,3,102,3,66,3,47,3,103,3,53,3,47,3,66,3,94,3,100,3,97,3,94,3,97,3,95,3,101,3,104,3,99,3,102,3,103,3,105,3,102,3,105,3,101,3,106,3,101,3,105,3,104,3,101,3,106,3,104,3,106,3,107,3,106,3,105,3,108,3,109,1,109,3,110,1,110,3,109,3,109,1,108,1,110,3,109,1,111,3,110,3,108,1,107,1,111,3,108,1,107,1,112,3,111,3,112,3,113,3,111,3,112,3,114,3,113,3,113,3,114,3]);fileData0.push.apply(fileData0,[115,3,113,3,115,3,116,3,116,3,110,3,113,3,116,3,121,1,110,3,110,3,121,1,117,3,121,1,122,1,117,3,118,3,117,3,122,1,118,3,122,1,124,1,124,1,111,1,118,3,124,1,112,1,111,1,110,1,118,3,111,1,118,3,110,1,109,3,118,3,109,3,117,3,110,3,117,3,109,3,111,3,113,3,110,3,85,1,119,3,120,3,85,1,120,3,83,1,83,1,120,3,82,1,120,3,100,1,82,1,120,3,121,3,100,1,107,1,100,1,121,3,107,1,121,3,122,3,107,1,122,3,112,3,123,3,112,3,122,3,114,3,112,3,123,3,114,3,123,3,124,3,125,3,114,3,124,3,125,3,115,3,114,3,125,3,126,3,115,3,126,3,127,3,115,3,127,3,116,3,115,3,127,3,119,1,116,3,119,1,121,1,116,3,126,3,128,3,127,3,121,3,120,3,119,3,121,3,119,3,129,3,121,3,129,3,130,3,121,3,130,3,122,3,123,3,122,3,130,3,131,3,132,3,133,3,134,3,133,3,135,3,134,3,131,3,133,3,136,3,131,3,134,3,136,3,137,3,131,3,138,3,137,3,136,3,138,3,136,3,139,3,140,3,138,3,139,3,140,3,139,3,141,3,142,3,140,3,141,3,142,3,141,3,143,3,138,3,144,3,137,3,145,3,146,3,147,3,148,3,149,3,150,3,150,3,149,3,151,3,149,3,152,3,151,3,152,3,149,3,153,3,154,3,153,3,149,3,154,3,155,3,153,3,156,3,153,3,155,3,156,3,145,3,153,3,225,2,145,3,156,3,225,2,146,3,145,3,225,2,227,2,146,3,227,2,147,3,146,3,227,2,157,3,147,3,228,2,157,3,227,2,148,3,154,3,149,3,145,3,147,3,153,3,153,3,147,3,152,3,157,3,152,3,147,3,152,3,157,3,151,3,157,3,158,3,151,3,150,3,151,3,158,3,159,3,150,3,158,3,159,3,148,3,150,3,159,3,160,3,148,3,154,3,148,3,160,3,154,3,160,3,161,3,162,3,154,3,161,3,162,3,155,3,154,3,155,3,162,3,163,3,155,3,163,3,156,3,163,3,164,3,156,3,164,3,225,2,156,3,164,3,226,2,225,2,159,3,161,3,160,3,157,3,64,3,158,3,159,3,158,3,64,3,72,3,159,3,64,3,72,3,165,3,159,3,73,3,165,3,72,3,73,3,166,3,165,3,166,3,73,3,84,3,166,3,84,3,167,3,168,3,166,3,167,3,168,3,169,3,166,3,169,3,168,3,170,3,171,3,169,3,170,3,171,3,170,3,172,3,171,3,172,3,159,3,171,3,159,3,165,3,169,3,171,3,165,3,169,3,165,3,166,3,231,2,173,3,174,3,230,2,231,2,174,3,174,3,175,3,230,2,228,2,230,2,175,3,228,2,175,3,176,3,228,2,176,3,157,3,177,3,157,3,176,3,177,3,64,3,157,3,177,3,178,3,64,3,64,3,178,3,62,3,179,3,62,3,178,3,61,3,62,3,179,3,61,3,179,3,180,3,180,3,179,3,181,3,180,3,181,3,182,3,181,3,183,3,182,3,181,3,184,3,183,3,185,3,183,3,184,3,185,3,186,3,183,3,185,3,187,3,186,3,188,3,189,3,173,3,173,3,189,3,174,3,189,3,190,3,174,3,175,3,174,3,190,3,175,3,190,3,191,3,176,3,175,3,191,3,176,3,191,3,177,3,191,3,178,3,177,3,178,3,191,3,181,3,178,3,181,3,179,3,190,3,192,3,191,3,184,3,191,3,192,3,184,3,181,3,191,3,193,3,187,3,194,3,185,3,194,3,187,3,195,3,194,3,185,3,195,3,185,3,184,3,196,3,195,3,184,3,192,3,196,3,184,3,192,3,197,3,196,3,190,3,197,3,192,3,190,3,198,3,197,3,189,3,198,3,190,3,198,3,189,3,199,3,188,3,199,3,189,3,188,3,200,3,199,3,200,3,188,3,244,2,188,3,173,3,244,2,173,3,242,2,244,2,173,3,240,2,242,2,231,2,240,2,173,3,195,3,193,3,194,3,196,3,193,3,195,3,196,3,201,3,193,3,201,3,196,3,197,3,201,3,197,3,202,3,202,3,197,3,198,3,202,3,198,3,203,3,198,3,199,3,203,3,201,3,204,3,193,3,205,3,244,2,243,2,200,3,244,2,205,3,206,3,200,3,205,3,206,3,199,3,200,3,206,3,207,3,199,3,207,3,203,3,199,3,207,3,208,3,203,3,208,3,202,3,203,3,208,3,209,3,202,3,201,3,202,3,209,3,201,3,209,3,210,3,201,3,210,3,204,3,211,3,204,3,210,3,204,3,211,3,212,3,204,3,212,3,213,3,204,3,213,3,214,3,204,3,214,3,193,3,193,3,214,3,187,3,215,3,216,3,207,3,216,3,208,3,207,3,216,3,217,3,208,3,217,3,209,3,208,3,217,3,218,3,209,3,210,3,209,3,218,3,210,3,218,3,219,3,211,3,210,3,219,3,28,3,220,3,15,3,220,3,12,3,15,3,220,3,221,3,12,3,12,3,221,3,13,3,222,3,13,3,221,3,222,3,4,3,13,3,223,3,4,3,222,3,223,3,248,2,4,3,223,3,224,3,248,2,248,2,224,3,241,2,224,3,225,3,241,2,241,2,225,3,243,2,225,3,226,3,243,2,205,3,243,2,226,3,227,3,205,3,226,3,206,3,205,3,227,3,215,3,206,3,227,3,215,3,207,3,206,3,228,3,229,3,230,3,228,3,231,3,229,3,229,3,231,3,232,3,231,3,233,3,232,3,232,3,233,3,222,3,222,3,233,3,234,3,222,3,234,3,223,3,235,3,223,3,234,3,235,3,224,3,223,3,224,3,235,3,225,3,225,3,235,3,226,3,236,3,226,3,235,3,227,3,226,3,236,3,236,3,237,3,227,3,215,3,227,3,237,3,238,3,231,3,228,3,238,3,239,3,231,3,231,3,239,3,233,3,240,3,233,3,239,3,240,3,234,3,233,3,240,3,235,3,234,3,240,3,241,3,235,3,236,3,235,3,241,3,242,3,236,3,241,3,242,3,243,3,236,3,236,3,243,3,237,3,238,3,244,3,239,3,239,3,244,3,245,3,239,3,245,3,240,3,240,3,245,3,242,3,240,3,242,3,241,3,229,3,232,3,246,3,246,3,232,3,247,3,232,3,222,3,247,3,222,3,221,3,247,3,247,3,221,3,220,3,220,3,248,3,247,3,220,3,28,3,248,3,246,3,247,3,248,3,249,3,250,3,251,3,249,3,251,3,252,3,252,3,251,3,253,3,252,3,253,3,254,3,255,3,254,3,253,3,0,4,1,4,2,4,2,4,1,4,3,4,2,4,3,4,4,4,4,4,3,4,5,4,4,4,5,4,6,4,7,4,4,4,6,4,7,4,8,4,4,4,8,4,7,4,9,4,8,4,9,4,10,4,255,3,10,4,9,4,255,3,11,4,10,4,255,3,253,3,11,4,11,4,253,3,12,4,12,4,253,3,251,3,12,4,251,3,13,4,250,3,13,4,251,3,250,3,14,4,13,4,14,4,15,4,13,4,2,4,4,4,8,4,2,4,8,4,16,4,10,4,16,4,8,4,17,4,18,4,19,4,19,4,20,4,17,4,21,4,17,4,20,4,22,4,21,4,20,4,16,4,21,4,22,4,16,4,23,4,21,4,10,4,23,4,16,4,11,4,23,4,10,4,24,4,21,4,23,4,24,4,17,4,21,4,24,4,18,4,17,4,18,4,24,4,25,4,19,4,18,4,25,4,19,4,25,4,26,4,19,4,26,4,20,4,27,4,20,4,26,4,22,4,20,4,27,4,22,4,27,4,28,4,27,4,29,4,28,4,29,4,30,4,28,4,29,4,31,4,30,4,32,4,31,4,29,4,29,4,33,4,32,4,33,4,34,4,32,4,33,4,35,4,34,4,34,4,35,4,36,4,29,4,27,4,33,4,27,4,26,4,33,4,35,4,33,4,26,4,35,4,26,4,37,4,36,4,38,4,39,4,34,4,36,4,39,4,34,4,39,4,40,4,32,4,34,4,40,4,32,4,40,4,41,4,32,4,41,4,31,4,31,4,41,4,42,4,31,4,42,4,43,4,31,4,43,4,44,4,31,4,44,4,30,4,44,4,45,4,30,4,28,4,30,4,45,4,28,4,45,4,46,4,46,4,22,4,28,4,47,4,22,4,46,4,47,4,16,4,22,4,47,4,0,4,16,4,0,4,2,4,16,4,47,4,46,4,45,4,47,4,48,4,0,4,0,4,48,4,1,4,1,4,48,4,49,4,49,4,48,4,47,4,49,4,47,4,50,4,47,4,45,4,50,4,44,4,50,4,45,4,38,4,51,4,52,4,38,4,52,4,39,4,39,4,52,4,53,4,39,4,53,4,40,4,41,4,40,4,53,4,41,4,53,4,42,4,54,4,55,4,56,4,54,4,56,4,37,4,57,4,37,4,56,4,57,4,35,4,37,4,35,4,57,4,58,4,35,4,58,4,36,4,36,4,58,4,38,4,59,4,38,4,58,4,59,4,51,4,38,4,51,4,59,4,60,4,59,4,61,4,60,4,59,4,62,4,61,4,62,4,59,4,57,4,62,4,57,4,63,4,63,4,57,4,56,4,63,4,56,4,64,4,64,4,56,4,55,4,64,4,55,4,65,4,65,4,55,4,66,4,65,4,66,4,67,4,65,4,67,4,68,4,57,4,59,4,58,4,69,4,70,4,71,4,70,4,72,4,71,4,72,4,73,4,71,4,72,4,74,4,73,4,75,4,73,4,74,4,76,4,75,4,74,4,77,4,75,4,76,4,77,4,76,4,78,4,77,4,78,4,79,4,80,4,79,4,78,4,68,4,79,4,80,4,68,4,81,4,79,4,81,4,68,4,67,4,81,4,67,4,82,4,66,4,82,4,67,4,66,4,83,4,82,4,55,4,83,4,66,4,54,4,83,4,55,4,76,4,74,4,72,4,72,4,70,4,76,4,76,4,70,4,84,4,76,4,84,4,78,4,78,4,84,4,85,4,78,4,85,4,80,4,86,4,87,4,88,4,87,4,89,4,88,4,87,4,90,4,89,4,89,4,90,4,81,4,81,4,90,4,79,4,91,4,79,4,90,4,77,4,79,4,91,4,75,4,77,4,91,4,75,4,91,4,73,4,73,4,91,4,87,4,73,4,87,4,86,4,71,4,73,4,86,4,91,4,90,4,87,4,23,4,92,4,93,4,23,4,93,4,24,4,93,4,94,4,24,4,94,4,25,4,24,4,94,4,95,4,25,4,95,4,26,4,25,4,95,4,96,4,26,4,96,4,37,4,26,4,96,4,54,4,37,4,54,4,96,4,88,4,54,4,88,4,97,4,88,4,89,4,97,4,97,4,89,4,98,4,98,4,89,4,81,4,81,4,82,4,98,4,82,4,97,4,98,4,83,4,97,4,82,4,83,4,54,4,97,4,99,4,93,4,92,4,99,4,92,4,100,4,101,4,102,4,103,4,104,4,101,4,103,4,104,4,105,4,101,4,105,4,104,4,106,4,105,4,106,4,107,4,107,4,108,4,105,4,105,4,108,4,100,4,99,4,100,4,108,4,99,4,108,4,109,4,99,4,109,4,93,4,93,4,109,4,110,4,93,4,110,4,94,4,94,4,110,4,111,4,94,4,111,4,95,4,112,4,95,4,111,4,96,4,95,4,112,4,96,4,112,4,88,4,88,4,112,4,113,4,104,4,103,4,102,4,107,4,109,4,108,4,107,4,110,4,109,4,107,4,111,4,110,4,111,4,107,4,106,4,111,4,106,4,114,4,114,4,106,4,104,4,114,4,104,4,115,4,115,4,104,4,102,4,115,4,102,4,116,4,101,4,116,4,102,4,117,4,116,4,101,4,117,4,101,4,105,4,117,4,105,4,15,4,105,4,100,4,15,4,100,4,13,4,15,4,100,4,12,4,13,4,92,4,12,4,100,4,92,4,11,4,12,4,11,4,92,4,23,4,111,4,114,4,118,4,119,4,118,4,114,4,118,4,119,4,120,4,120,4,119,4,121,4,120,4,121,4,122,4,120,4,122,4,123,4,113,4,120,4,123,4,118,4,120,4,113,4,111,4,118,4,113,4,111,4,113,4,112,4,88,4,113,4,86,4,113,4,123,4,86,4,71,4,86,4,123,4,123,4,69,4,71,4,123,4,122,4,69,4,124,4,69,4,122,4,122,4,125,4,124,4,121,4,125,4,122,4,126,4,125,4,121,4,127,4,126,4,121,4,127,4,121,4,119,4,127,4,119,4,128,4,119,4,114,4,128,4,115,4,128,4,114,4,115,4,116,4,128,4,14,4,129,4,15,4,129,4,117,4,15,4,129,4,130,4,117,4,130,4,116,4,117,4,130,4,131,4,116,4,128,4,116,4,131,4,128,4,131,4,132,4,127,4,128,4,132,4,127,4,132,4,133,4,133,4,126,4,127,4,133,4,134,4,126,4,134,4,125,4,126,4,134,4,135,4,125,4,124,4,125,4,135,4,124,4,135,4,136,4,124,4,136,4,137,4,124,4,137,4,69,4,69,4,137,4,70,4,138,4,139,4,140,4,141,4,142,4,139,4,141,4,139,4,138,4,143,4,141,4,138,4,143,4,138,4,144,4,145,4,143,4,144,4,145,4,146,4,143,4,147,4,146,4,145,4,147,4,148,4,146,4,148,4,147,4,149,4,148,4,149,4,150,4,145,4,144,4,151,4,152,4,153,4,154,4,155,4,152,4,154,4,156,4,155,4,154,4,156,4,154,4,157,4,158,4,156,4,157,4,158,4,157,4,159,4,158,4,159,4,160,4,159,4,161,4,160,4,153,4,162,4,163,4,153,4,163,4,154,4,164,4,154,4,163,4,164,4,157,4,154,4,165,4,157,4,164,4,166,4,157,4,165,4,166,4,159,4,157,4,166,4,167,4,159,4,167,4,161,4,159,4,167,4,168,4,161,4,169,4,161,4,168,4,169,4,170,4,161,4,160,4,161,4,170,4,160,4,170,4,171,4,172,4,160,4,171,4,158,4,160,4,172,4,173,4,158,4,172,4,173,4,156,4,158,4,173,4,172,4,174,4,172,4,171,4,175,4,175,4,176,4,172,4,174,4,172,4,176,4,177,4,174,4,176,4,177,4,173,4,174,4,177,4,178,4,173,4,173,4,178,4,179,4,173,4,179,4,156,4,179,4,155,4,156,4,179,4,180,4,155,4,181,4,155,4,180,4,155,4,181,4,152,4,181,4,180,4,182,4,183,4,184,4,185,4,183,4,186,4,184,4,187,4,184,4,186,4,187,4,186,4,179,4,187,4,179,4,188,4,187,4,188,4,189,4,189,4,188,4,177,4,190,4,191,4,192,4,192,4,191,4,193,4,192,4,193,4,194,4,195,4,194,4,193,4,195,4,196,4,194,4,195,4,197,4,196,4,197,4,198,4,196,4,197,4,199,4,198,4,189,4,199,4,197,4,189,4,197,4,187,4,197,4,184,4,187,4,197,4,200,4,184,4,195,4,200,4,197,4,195,4,201,4,200,4,202,4,201,4,195,4,203,4,201,4,202,4,203,4,204,4,201,4,194,4,196,4,198,4,202,4,195,4,193,4,205,4,191,4,190,4,205,4,206,4,191,4,193,4,191,4,206,4,193,4,206,4,207,4,207,4,202,4,193,4,207,4,208,4,202,4,202,4,208,4,209,4,202,4,209,4,210,4,210,4,203,4,202,4,203,4,210,4,211,4,203,4,211,4,212,4,212,4,204,4,203,4,212,4,213,4,204,4,201,4,204,4,213,4,201,4,213,4,214,4,201,4,214,4,200,4,200,4,214,4,185,4,200,4,185,4,184,4,215,4,216,4,217,4,217,4,216,4,218,4,219,4,218,4,216,4,219,4,216,4,177,4,177,4,216,4,220,4,177,4,220,4,189,4,189,4,220,4,221,4,189,4,221,4,199,4,222,4,199,4,221,4,222,4,198,4,199,4,223,4,198,4,222,4,194,4,198,4,223,4,224,4,194,4,223,4,224,4,192,4,194,4,192,4,224,4,225,4,190,4,192,4,225,4,226,4,190,4,225,4,226,4,205,4,190,4,227,4,221,4,220,4,223,4,222,4,228,4,228,4,229,4,223,4,224,4,223,4,229,4,230,4,231,4,232,4,231,4,233,4,232,4,234,4,232,4,233,4,235,4,234,4,233,4,235,4,236,4,234,4,237,4,236,4,235,4,237,4,238,4,236,4,237,4,239,4,238,4,239,4,240,4,238,4,239,4,241,4,240,4,240,4,241,4,242,4,243,4,242,4,241,4,243,4,244,4,242,4,227,4,244,4,243,4,227,4,215,4,244,4,227,4,220,4,215,4,215,4,220,4,216,4,231,4,245,4,233,4,246,4,237,4,235,4,235,4,247,4,246,4,235,4,248,4,247,4,233,4,248,4,235,4,233,4,249,4,248,4,249,4,233,4,245,4,250,4,249,4,245,4,250,4,245,4,251,4,245,4,252,4,251,4,245,4,231,4,252,4,253,4,252,4,231,4,254,4,248,4,249,4,254,4,249,4,250,4,255,4,0,5,1,5,255,4,2,5,0,5,0,5,2,5,3,5,3,5,2,5,4,5,5,5,3,5,4,5,5,5,4,5,6,5,5,5,6,5,7,5,7,5,6,5,8,5,7,5,8,5,9,5,240,4,9,5,8,5,240,4,10,5,9,5,240,4,242,4,10,5,11,5,10,5,242,4,242,4,12,5,11,5,12,5,242,4,244,4,12,5,244,4,13,5,215,4,13,5,244,4,215,4,217,4,13,5,13,5,14,5,12,5,13,5,15,5,14,5,15,5,13,5,217,4,15,5,217,4,16,5,217,4,218,4,16,5,11,5,17,5,10,5,9,5,10,5,17,5,9,5,17,5,18,5,9,5,18,5,19,5,9,5,19,5,7,5,7,5,19,5,20,5,7,5,20,5,5,5,5,5,20,5,21,5,5,5,21,5,22,5,5,5,22,5,3,5,23,5,3,5,22,5,0,5,3,5,23,5,0,5,23,5,24,5,0,5,24,5,1,5,24,5,25,5,1,5,24,5,26,5,25,5,26,5,27,5,25,5,26,5,28,5,27,5,29,5,28,5,26,5,29,5,30,5,28,5,21,5,31,5,32,5,21,5,32,5,22,5,33,5,29,5,26,5,33,5,26,5,34,5,24,5,34,5,26,5,34,5,24,5,23,5,34,5,23,5,35,5,23,5,22,5,35,5,22,5,36,5,35,5,22,5,32,5,36,5,37,5,36,5,32,5,37,5,32,5,31,5,37,5,31,5,38,5,39,5,40,5,36,5,41,5,39,5,36,5,41,5,36,5,37,5,36,5,34,5,35,5,36,5,40,5,34,5,33,5,34,5,40,5,33,5,40,5,42,5,42,5,40,5,39,5,42,5,39,5,43,5,255,4,44,5,45,5,44,5,255,4,46,5,255,4,1,5,46,5,46,5,1,5,47,5,47,5,1,5,25,5,25,5,48,5,47,5,48,5,25,5,27,5,48,5,27,5,49,5,49,5,27,5,50,5,51,5,49,5,50,5,51,5,50,5,52,5,51,5,52,5,53,5,54,5,51,5,53,5,54,5,55,5,51,5,54,5,56,5,55,5,56,5,49,5,55,5,56,5,57,5,49,5,48,5,49,5,57,5,51,5,55,5,49,5,58,5,255,4,45,5,59,5,60,5,58,5,59,5,58,5,45,5,61,5,62,5,63,5,61,5,63,5,64,5,64,5,63,5,57,5,64,5,57,5,56,5,64,5,56,5,65,5,54,5,65,5,56,5,64,5,65,5,66,5,61,5,64,5,66,5,59,5,67,5,68,5,59,5,68,5,60,5,68,5,69,5,60,5,69,5,58,5,60,5,69,5,70,5,58,5,70,5,255,4,58,5,70,5,71,5,255,4,255,4,71,5,2,5,2,5,71,5,72,5,2,5,72,5,4,5,73,5,4,5,72,5,73,5,74,5,4,5,75,5,74,5,73,5,75,5,76,5,74,5,77,5,76,5,75,5,77,5,78,5,76,5,78,5,77,5,79,5,79,5,80,5,78,5,81,5,79,5,77,5,69,5,82,5,70,5,70,5,82,5,71,5,72,5,71,5,82,5,72,5,82,5,83,5,83,5,73,5,72,5,83,5,75,5,73,5,77,5,75,5,83,5,77,5,83,5,84,5,85,5,74,5,76,5,85,5,86,5,74,5,86,5,4,5,74,5,86,5,6,5,4,5,87,5,76,5,78,5,87,5,85,5,76,5,85,5,87,5,88,5,85,5,88,5,89,5,86,5,85,5,89,5,86,5,89,5,90,5,90,5,6,5,86,5,91,5,6,5,90,5,92,5,6,5,91,5,92,5,8,5,6,5,238,4,240,4,8,5,238,4,8,5,236,4,236,4,8,5,92,5,236,4,92,5,234,4,92,5,232,4,234,4,230,4,232,4,92,5,91,5,230,4,92,5,91,5,93,5,230,4,94,5,93,5,91,5,94,5,91,5,90,5,90,5,95,5,94,5,90,5,89,5,95,5,95,5,89,5,96,5,97,5,96,5,89,5,97,5,89,5,88,5,78,5,80,5,98,5,78,5,98,5,87,5,87,5,98,5,99,5,87,5,99,5,88,5,88,5,99,5,100,5,88,5,100,5,97,5,101,5,97,5,100,5,101,5,96,5,97,5,101,5,102,5,96,5,95,5,96,5,102,5,102,5,103,5,95,5,103,5,94,5,95,5,103,5,104,5,94,5,94,5,104,5,105,5,94,5,105,5,93,5,93,5,105,5,253,4,93,5,253,4,230,4,253,4,231,4,230,4,102,5,101,5,103,5,79,5,106,5,80,5,79,5,107,5,106,5,79,5,81,5,107,5,108,5,107,5,81,5,81,5,77,5,108,5,108,5,77,5,109,5,77,5,84,5,109,5,84,5,110,5,109,5,84,5,111,5,110,5,83,5,111,5,84,5,83,5,112,5,111,5,82,5,112,5,83,5,82,5,113,5,112,5,114,5,113,5,82,5,114,5,82,5,69,5,115,5,114,5,69,5,68,5,115,5,69,5,109,5,110,5,116,5,109,5,116,5,108,5,108,5,116,5,107,5,117,5,118,5,119,5,120,5,121,5,122,5,121,5,120,5,123,5,121,5,123,5,124,5,123,5,125,5,124,5,126,5,125,5,123,5,126,5,123,5,117,5,117,5,123,5,120,5,117,5,120,5,118,5,118,5,120,5,127,5,118,5,127,5,128,5,119,5,118,5,128,5,128,5,129,5,119,5,117,5,119,5,130,5,117,5,130,5,126,5,131,5,126,5,130,5,132,5,131,5,130,5,132,5,130,5,133,5,133,5,130,5,119,5,133,5,119,5,134,5,134,5,119,5,129,5,134,5,129,5,135,5,135,5,129,5,136,5,137,5,136,5,129,5,129,5,128,5,137,5,128,5,138,5,137,5,138,5,128,5,127,5,138,5,127,5,139,5,140,5,139,5,127,5,140,5,127,5,122,5,120,5,122,5,127,5,68,2,70,2,141,5,141,5,142,5,68,2,68,2,142,5,66,2,64,2,66,2,142,5,64,2,142,5,62,2,141,5,62,2,142,5,141,5,61,2,62,2,143,5,144,5,145,5,143,5,145,5,146,5,147,5,143,5,146,5,148,5,149,5,150,5,151,5,150,5,149,5,152,5,151,5,149,5,152,5,149,5,153,5,154,5,152,5,153,5,154,5,153,5,155,5,156,5,154,5,155,5,156,5,155,5,157,5,157,5,155,5,147,5,158,5,147,5,155,5,147,5,158,5,143,5,158,5,159,5,143,5,159,5,144,5,143,5,160,5,144,5,159,5,160,5,159,5,161,5,161,5,162,5,160,5,161,5,163,5,162,5,161,5,164,5,163,5,153,5,158,5,155,5,161,5,165,5,164,5,165,5,148,5,164,5,149,5,148,5,165,5,165,5,153,5,149,5,153,5,165,5,166,5,153,5,166,5,158,5,158,5,166,5,159,5,166,5,161,5,159,5,166,5,165,5,161,5,167,5,168,5,169,5,170,5,168,5,171,5,167,5,171,5,168,5,172,5,171,5,167,5,173,5,172,5,174,5,172,5,173,5,171,5,175,5,171,5,173,5,170,5,171,5,175,5,170,5,175,5,176,5,177,5,176,5,175,5,177,5,178,5,176,5,175,5,173,5,179,5,179,5,180,5,175,5,175,5,180,5,177,5,173,5,174,5,181,5,179,5,173,5,181,5,179,5,181,5,182,5,174,5,183,5,184,5,174,5,184,5,181,5,181,5,184,5,185,5,181,5,185,5,182,5,182,5,185,5,186,5,187,5,180,5,179,5,188,5,187,5,179,5,188,5,179,5,182,5,188,5,182,5,189,5,189,5,182,5,186,5,189,5,186,5,190,5,191,5,190,5,186,5,191,5,186,5,192,5,185,5,192,5,186,5,185,5,193,5,192,5,184,5,193,5,185,5,184,5,194,5,193,5,194,5,184,5,195,5,183,5,195,5,184,5,196,5,195,5,183,5,174,5,196,5,183,5,174,5,197,5,196,5,174,5,172,5,197,5,198,5,199,5,200,5,201,5,200,5,199,5,201,5,199,5,202,5,203,5,204,5,205,5,206,5,205,5,204,5,206,5,204,5,198,5,207,5,198,5,204,5,198,5,207,5,199,5,199,5,207,5,208,5,202,5,199,5,208,5,202,5,208,5,209,5,208,5,210,5,209,5,208,5,211,5,210,5,211,5,212,5,210,5,211,5,203,5,212,5,203,5,213,5,212,5,207,5,204,5,203,5,211,5,207,5,203,5,211,5,208,5,207,5,214,5,215,5,216,5,217,5,214,5,216,5,217,5,216,5,218,5,219,5,217,5,218,5,219,5,218,5,205,5,219,5,205,5,206,5,217,5,219,5,220,5,221,5,222,5,223,5,222,5,221,5,224,5,222,5,224,5,225,5,226,5,225,5,224,5,225,5,226,5,220,5,220,5,226,5,227,5,220,5,227,5,217,5,228,5,217,5,227,5,228,5,214,5,217,5,229,5,214,5,228,5,215,5,214,5,229,5,230,5,215,5,229,5,231,5,215,5,230,5,231,5,216,5,215,5,213,5,216,5,231,5,213,5,218,5,216,5,203,5,218,5,213,5,203,5,205,5,218,5,230,5,229,5,232,5,226,5,233,5,227,5,233,5,226,5,224,5,228,5,227,5,234,5,235,5,234,5,227,5,235,5,227,5,233,5,235,5,233,5,236,5,233,5,237,5,236,5,233,5,224,5,237,5,224,5,238,5,237,5,224,5,221,5,238,5,221,5,239,5,238,5,221,5,240,5,239,5,240,5,241,5,239,5,240,5,242,5,241,5,243,5,241,5,242,5,243,5,242,5,244,5,243,5,245,5,241,5,241,5,245,5,246,5,239,5,241,5,246,5,247,5,239,5,246,5,247,5,238,5,239,5,238,5,247,5,248,5,249,5,238,5,248,5,250,5,238,5,249,5,250,5,237,5,238,5,236,5,237,5,250,5,251,5,252,5,253,5,251,5,253,5,254,5,255,5,254,5,253,5,255,5,0,6,254,5,1,6,0,6,255,5,1,6,2,6,0,6,2,6,1,6,3,6,2,6,3,6,4,6,5,6,4,6,3,6,6,6,4,6,5,6,6,6,244,5,4,6,244,5,2,6,4,6,244,5,242,5,2,6,7,6,2,6,242,5,240,5,7,6,242,5,7,6,240,5,8,6,8,6,240,5,223,5,223,5,240,5,221,5,9,6,254,5,0,6,9,6,0,6,10,6,2,6,10,6,0,6,2,6,7,6,10,6,10,6,7,6,11,6,11,6,9,6,10,6,11,6,12,6,9,6,9,6,13,6,14,6,15,6,16,6,17,6,18,6,15,6,17,6,15,6,18,6,19,6,20,6,15,6,19,6,20,6,19,6,21,6,20,6,21,6,22,6,23,6,22,6,21,6,24,6,23,6,21,6,24,6,21,6,25,6,25,6,13,6,24,6,25,6,26,6,13,6,26,6,27,6,13,6,27,6,28,6,13,6,28,6,29,6,13,6,29,6,14,6,13,6,29,6,251,5,14,6,251,5,9,6,14,6,251,5,254,5,9,6,21,6,19,6,30,6,21,6,30,6,25,6,25,6,30,6,26,6,31,6,19,6,18,6,32,6,19,6,31,6,30,6,19,6,32,6,30,6,32,6,33,6,33,6,26,6,30,6,33,6,34,6,26,6,26,6,34,6,35,6,26,6,35,6,27,6,27,6,35,6,36,6,37,6,27,6,36,6,28,6,27,6,37,6,28,6,37,6,38,6,28,6,38,6,39,6,28,6,39,6,29,6,40,6,29,6,39,6,29,6,40,6,251,5,41,6,251,5,40,6,251,5,41,6,252,5,41,6,40,6,42,6,42,6,40,6,39,6,31,6,43,6,44,6,31,6,44,6,45,6,31,6,45,6,32,6,32,6,45,6,46,6,32,6,46,6,33,6,47,6,48,6,49,6,50,6,49,6,48,6,50,6,51,6,49,6,50,6,52,6,51,6,51,6,52,6,22,6,52,6,53,6,22,6,53,6,20,6,22,6,54,6,20,6,53,6,54,6,15,6,20,6,54,6,55,6,15,6,55,6,16,6,15,6,16,6,55,6,56,6,16,6,56,6,57,6,17,6,16,6,57,6,17,6,57,6,58,6,17,6,58,6,43,6,17,6,43,6,18,6,31,6,18,6,43,6,22,6,59,6,51,6,60,6,51,6,59,6,49,6,51,6,60,6,50,6,48,6,61,6,62,6,50,6,61,6,62,6,52,6,50,6,62,6,53,6,52,6,62,6,54,6,53,6,54,6,62,6,63,6,54,6,63,6,64,6,55,6,54,6,64,6,55,6,64,6,56,6,62,6,61,6,63,6,65,6,66,6,67,6,65,6,67,6,68,6,69,6,65,6,68,6,69,6,70,6,65,6,71,6,70,6,69,6,71,6,72,6,70,6,73,6,72,6,71,6,73,6,74,6,72,6,73,6,75,6,74,6,74,6,75,6,76,6,74,6,76,6,77,6,59,6,74,6,77,6,59,6,77,6,78,6,60,6,59,6,78,6,79,6,80,6,81,6,79,6,82,6,80,6,83,6,82,6,79,6,83,6,84,6,82,6,82,6,84,6,73,6,85,6,73,6,84,6,85,6,75,6,73,6,86,6,75,6,85,6,76,6,75,6,86,6,76,6,86,6,87,6,77,6,76,6,87,6,77,6,87,6,88,6,77,6,88,6,89,6,77,6,89,6,78,6,78,6,89,6,90,6,78,6,90,6,60,6,47,6,60,6,90,6,47,6,49,6,60,6,86,6,85,6,91,6,91,6,85,6,84,6,91,6,84,6,83,6,90,6,89,6,92,6,90,6,92,6,93,6,90,6,93,6,94,6,94,6,93,6,95,6,94,6,95,6,96,6,94,6,96,6,97,6,94,6,97,6,98,6,94,6,98,6,47,6,94,6,47,6,90,6,99,6,80,6,82,6,99,6,82,6,100,6,101,6,100,6,82,6,102,6,100,6,101,6,102,6,101,6,103,6,102,6,103,6,104,6,103,6,105,6,104,6,105,6,106,6,104,6,106,6,105,6,107,6,106,6,107,6,108,6,108,6,107,6,109,6,108,6,109,6,110,6,109,6,68,6,110,6,109,6,69,6,68,6,109,6,105,6,69,6,69,6,105,6,103,6,69,6,103,6,71,6,71,6,103,6,101,6,71,6,101,6,73,6,82,6,73,6,101,6,105,6,109,6,107,6,106,6,108,6,111,6,112,6,113,6,114,6,114,6,113,6,115,6,114,6,115,6,116,6,115,6,117,6,116,6,115,6,67,5,117,6,57,5,63,5,48,5,63,5,47,5,48,5,47,5,63,5,62,5,47,5,62,5,118,6,119,6,118,6,62,5,119,6,120,6,118,6,118,6,120,6,121,6,120,6,122,6,121,6,121,6,122,6,112,6,121,6,112,6,123,6,112,6,114,6,123,6,114,6,46,5,123,6,114,6,44,5,46,5,114,6,116,6,44,5,116,6,45,5,44,5,116,6,117,6,45,5,59,5,45,5,117,6,59,5,117,6,67,5,120,6,124,6,122,6,46,5,47,5,125,6,123,6,46,5,125,6,123,6,125,6,121,6,118,6,121,6,125,6,118,6,125,6,47,5,126,6,127,6,128,6,126,6,128,6,129,6,222,4,221,4,130,6,131,6,222,4,130,6,131,6,130,6,132,6,132,6,130,6,133,6,132,6,133,6,134,6,135,6,134,6,133,6,135,6,133,6,136,6,136,6,137,6,135,6,136,6,128,6,137,6,138,6,137,6,128,6,138,6,128,6,127,6,138,6,127,6,139,6,140,6,139,6,127,6,140,6,127,6,126,6,141,6,140,6,126,6,141,6,126,6,129,6,141,6,129,6,142,6,142,6,129,6,128,6,142,6,128,6,136,6,142,6,136,6,143,6,136,6,133,6,143,6,144,6,143,6,133,6,144,6,133,6,130,6,141,6,142,6,145,6,146,6,147,6,148,6,149,6,147,6,146,6,149,6,144,6,147,6,149,6,143,6,144,6,142,6,143,6,149,6,149,6,150,6,142,6,150,6,145,6,142,6,150,6,151,6,145,6,146,6,151,6,150,6,146,6,152,6,151,6,153,6,152,6,146,6,153,6,146,6,154,6,146,6,148,6,154,6,149,6,146,6,150,6,237,4,155,6,239,4,156,6,155,6,237,4,246,4,156,6,237,4,157,6,156,6,246,4,157,6,158,6,156,6,156,6,158,6,159,6,156,6,159,6,155,6,160,6,155,6,159,6,160,6,154,6,155,6,154,6,239,4,155,6,154,6,148,6,239,4,148,6,241,4,239,4,148,6,243,4,241,4,148,6,147,6,243,4,147,6,227,4,243,4,147,6,144,6,227,4,144,6,221,4,227,4,144,6,130,6,221,4,161,6,38,1,218,1,38,1,161,6,37,1,37,1,161,6,162,6,37,1,162,6,163,6,164,6,163,6,162,6,164,6,162,6,165,6,166,6,164,6,165,6,166,6,167,6,164,6,162,6,161,6,218,1,216,1,162,6,218,1,216,1,165,6,162,6,216,1,168,6,165,6,169,6,165,6,168,6,169,6,166,6,165,6,166,6,169,6,170,6,166,6,170,6,171,6,166,6,171,6,172,6,166,6,172,6,167,6,167,6,172,6,72,1,167,6,72,1,70,1,164,6,167,6,70,1,164,6,70,1,68,1,164,6,68,1,163,6,68,1,66,1,163,6,35,1,163,6,66,1,35,1,37,1,163,6,84,1,73,1,72,1,172,6,84,1,72,1,172,6,87,1,84,1,87,1,172,6,171,6,87,1,171,6,89,1,170,6,89,1,171,6,170,6,173,6,89,1,174,6,173,6,170,6,174,6,170,6,175,6,175,6,170,6,169,6,175,6,169,6,176,6,169,6,168,6,176,6,176,6,168,6,177,6,176,6,177,6,178,6,176,6,178,6,175,6,88,1,89,1,179,6,179,6,89,1,173,6,179,6,173,6,180,6,181,6,180,6,173,6,181,6,173,6,174,6,174,6,182,6,181,6,174,6,183,6,182,6,174,6,184,6,183,6,174,6,175,6,184,6,175,6,185,6,184,6,175,6,178,6,185,6,178,6,186,6,185,6,178,6,177,6,186,6,177,6,187,6,186,6,177,6,168,6,187,6,168,6,188,6,187,6,168,6,216,1,188,6,215,1,188,6,216,1,0,0,1,0,2,0,3,0,0,0,4,0,0,0,3,0,5,0,0,0,5,0,1,0,5,0,6,0,1,0,7,0,6,0,5,0,7,0,5,0,8,0,8,0,9,0,7,0,9,0,8,0,10,0,8,0,11,0,10,0,8,0,3,0,11,0,8,0,5,0,3,0,12,0,13,0,14,0,12,0,14,0,15,0,16,0,17,0,18,0,19,0,18,0,17,0,20,0,18,0,19,0,20,0,21,0,18,0,20,0,22,0,21,0,22,0,23,0,21,0,22,0,24,0,23,0,25,0,24,0,22,0,25,0,26,0,24,0,25,0,27,0,26,0,28,0,26,0,27,0,29,0,28,0,27,0,29,0,30,0,28,0,14,0,30,0,29,0,31,0,30,0,14,0,14,0,13,0,31,0,32,0,31,0,13,0,12,0,32,0,13,0,20,0,25,0,22,0,20,0,33,0,25,0,23,0,24,0,34,0,34,0,24,0,26,0,25,0,35,0,27,0,25,0,33,0,35,0,35,0,33,0,36,0,36,0,33,0,20,0,36,0,20,0,19,0,31,0,32,0,30,0,32,0,37,0,30,0,28,0,30,0,37,0,28,0,37,0,38,0,37,0,39,0,38,0,37,0,40,0,39,0,41,0,42,0,43,0,44,0,42,0,41,0,44,0,45,0,42,0,44,0,38,0,45,0,46,0,45,0,38,0,39,0,46,0,38,0,39,0,47,0,46,0,47,0,39,0,40,0,47,0,40,0,48,0,49,0,48,0,40,0,49,0,40,0,37,0,50,0,49,0,37,0,32,0,50,0,37,0,51,0,50,0,32,0,52,0,51,0,32,0,52,0,53,0,51,0,53,0,52,0,54,0,53,0,54,0,55,0,45,0,43,0,42,0,45,0,56,0,43,0,47,0,56,0,45,0,47,0,45,0,46,0,50,0,51,0,49,0,49,0,51,0,57,0,57,0,58,0,49,0,58,0,48,0,49,0,57,0,51,0,53,0,53,0,55,0,57,0,47,0,59,0,60,0,47,0,60,0,56,0,56,0,60,0,61,0,61,0,60,0,59,0,62,0,63,0,64,0,62,0,65,0,63,0,62,0,66,0,65,0,65,0,66,0,67,0,67,0,66,0,68,0,67,0,68,0,69,0,70,0,69,0,68,0,70,0,55,0,69,0,71,0,55,0,70,0,71,0,57,0,55,0,72,0,57,0,71,0,58,0,57,0,72,0,73,0,58,0,72,0,73,0,48,0,58,0,74,0,48,0,73,0,74,0,75,0,48,0,59,0,48,0,75,0,47,0,48,0,59,0,65,0,67,0,63,0,64,0,63,0,67,0,76,0,68,0,66,0,74,0,73,0,77,0,77,0,73,0,78,0,72,0,78,0,73,0,71,0,78,0,72,0,71,0,70,0,79,0,80,0,71,0,79,0,78,0,71,0,80,0,81,0,78,0,80,0,78,0,81,0,77,0,41,0,77,0,81,0,41,0,82,0,77,0,41,0,43,0,82,0,82,0,43,0,83,0,83,0,43,0,56,0,83,0,56,0,84,0,56,0,61,0,84,0,85,0,84,0,61,0,61,0,59,0,85,0,59,0,86,0,85,0,59,0,75,0,86,0,75,0,87,0,86,0,75,0,74,0,87,0,74,0,88,0,87,0,74,0,77,0,88,0,82,0,88,0,77,0,82,0,89,0,88,0,82,0,83,0,89,0,89,0,83,0,86,0,86,0,83,0,84,0,86,0,84,0,85,0,89,0,86,0,87,0,88,0,89,0,87,0,44,0,41,0,90,0,41,0,81,0,90,0,91,0,34,0,92,0,92,0,34,0,26,0,92,0,26,0,93,0,28,0,93,0,26,0,28,0,94,0,93,0,28,0,38,0,94,0,44,0,94,0,38,0,44,0,95,0,94,0,44,0,90,0,95,0,96,0,95,0,90,0,96,0,90,0,81,0,96,0,81,0,80,0,96,0,80,0,97,0,79,0,97,0,80,0,79,0,98,0,97,0,98,0,79,0,99,0,98,0,99,0,100,0,100,0,101,0,98,0,102,0,101,0,100,0,102,0,103,0,101,0,104,0,101,0,103,0,104,0,98,0,101,0,104,0,105,0,98,0,97,0,98,0,105,0,97,0,105,0,106,0,106,0,96,0,97,0,106,0,95,0,96,0,106,0,94,0,95,0,94,0,106,0,92,0,94,0,92,0,93,0,104,0,107,0,105,0,91,0,105,0,107,0,106,0,105,0,91,0,106,0,91,0,92,0,108,0,91,0,107,0,109,0,110,0,111,0,102,0,109,0,111,0,102,0,112,0,109,0,102,0,113,0,112,0,102,0,114,0,113,0,113,0,114,0,100,0,102,0,100,0,114,0,115,0,116,0,117,0,115,0,118,0,116,0,118,0,110,0,116,0,119,0,110,0,118,0,111,0,110,0,119,0,120,0,111,0,119,0,111,0,120,0,102,0,121,0,102,0,120,0,121,0,103,0,102,0,122,0,103,0,121,0,104,0,103,0,122,0,104,0,122,0,123,0,123,0,107,0,104,0,107,0,123,0,124,0,107,0,124,0,108,0,124,0,125,0,108,0,108,0,125,0,91,0,91,0,125,0,126,0,119,0,127,0,128,0,120,0,119,0,128,0,120,0,128,0,129,0,129,0,121,0,120,0,129,0,130,0,121,0,122,0,121,0,130,0,123,0,122,0,130,0,123,0,130,0,131,0,131,0,124,0,123,0,131,0,132,0,124,0,124,0,132,0,125,0,132,0,133,0,125,0,133,0,126,0,125,0,134,0,135,0,136,0,137,0,134,0,136,0,137,0,136,0,129,0,129,0,128,0,137,0,138,0,134,0,137,0,139,0,140,0,141,0,139,0,141,0,142,0,142,0,138,0,139,0,142,0,134,0,138,0,142,0,143,0,134,0,134,0,143,0,135,0,135,0,143,0,131,0,135,0,131,0,136,0,131,0,130,0,136,0,129,0,136,0,130,0,144,0,145,0,146,0,146,0,147,0,144,0,148,0,147,0,146,0,148,0,146,0,149,0,149,0,127,0,148,0,149,0,150,0,127,0,127,0,150,0,128,0,151,0,128,0,150,0,151,0,137,0,128,0,152,0,137,0,151,0,138,0,137,0,152,0,152,0,153,0,138,0,153,0,139,0,138,0,153,0,154,0,139,0,140,0,139,0,154,0,154,0,155,0,140,0,140,0,155,0,141,0,155,0,156,0,141,0,146,0,157,0,149,0,149,0,157,0,151,0,149,0,151,0,150,0,152,0,151,0,158,0,158,0,151,0,157,0,159,0,118,0,115,0,159,0,119,0,118,0,159,0,160,0,119,0,119,0,160,0,127,0,161,0,127,0,160,0,148,0,127,0,161,0,148,0,161,0,162,0,147,0,148,0,162,0,147,0,162,0,163,0,147,0,163,0,144,0,144,0,163,0,164,0,144,0,164,0,76,0,76,0,164,0,160,0,160,0,159,0,76,0,159,0,68,0,76,0,165,0,68,0,159,0,165,0,70,0,68,0,79,0,70,0,165,0,161,0,160,0,164,0,163,0,161,0,164,0,163,0,162,0,161,0,166,0,99,0,79,0,166,0,79,0,165,0,166,0,165,0,115,0,165,0,159,0,115,0,167,0,55,0,54,0,55,0,167,0,69,0,167,0,67,0,69,0,167,0,168,0,67,0,169,0,67,0,168,0,168,0,170,0,169,0,67,0,169,0,170,0,67,0,170,0,145,0,64,0,67,0,145,0,171,0,64,0,145,0,171,0,62,0,64,0,62,0,171,0,66,0,171,0,172,0,66,0,76,0,66,0,172,0,173,0,76,0,172,0,173,0,144,0,76,0,173,0,171,0,144,0,144,0,171,0,145,0,171,0,173,0,172,0,52,0,174,0,54,0,54,0,174,0,175,0,54,0,175,0,176,0,167,0,54,0,176,0,177,0,167,0,176,0,167,0,177,0,168,0,168,0,177,0,178,0,168,0,178,0,179,0,168,0,179,0,180,0,168,0,180,0,170,0,181,0,170,0,180,0,181,0,145,0,170,0,182,0,145,0,181,0,12,0,52,0,32,0,12,0,183,0,52,0,52,0,183,0,174,0,184,0,174,0,183,0,184,0,185,0,174,0,185,0,175,0,174,0,186,0,175,0,185,0,175,0,186,0,187,0,187,0,186,0,188,0,187,0,188,0,189,0,190,0,189,0,188,0,190,0,191,0,189,0,190,0,192,0,191,0,191,0,192,0,193,0,193,0,192,0,194,0,193,0,194,0,195,0,194,0,196,0,195,0,197,0,196,0,194,0,192,0,197,0,194,0,198,0,199,0,197,0,198,0,197,0,192,0,190,0,198,0,192,0,200,0,198,0,190,0,200,0,190,0,201,0,190,0,202,0,201,0,190,0,188,0,202,0,188,0,185,0,202,0,188,0,186,0,185,0,203,0,199,0,198,0,203,0,198,0,200,0,204,0,193,0,205,0,193,0,195,0,205,0,206,0,178,0,177,0,206,0,207,0,178,0,207,0,208,0,178,0,207,0,204,0,208,0,207,0,209,0,204,0,204,0,209,0,193,0,191,0,193,0,209,0,207,0,191,0,209,0,207,0,189,0,191,0,206,0,189,0,207,0,187,0,189,0,206,0,187,0,206,0,177,0,177,0,176,0,187,0,175,0,187,0,176,0,196,0,197,0,210,0,197,0,211,0,210,0,212,0,210,0,211,0,212,0,211,0,213,0,213,0,15,0,212,0,213,0,214,0,15,0,214,0,12,0,15,0,214,0,215,0,12,0,12,0,215,0,183,0,215,0,184,0,183,0,215,0,216,0,184,0,216,0,215,0,214,0,216,0,214,0,217,0,213,0,217,0,214,0,213,0,203,0,217,0,203,0,213,0,211,0,203,0,211,0,199,0,197,0,199,0,211,0,218,0,219,0,220,0,221,0,218,0,220,0,221,0,222,0,218,0,218,0,222,0,223,0,224,0,223,0,222,0,224,0,29,0,223,0,225,0,29,0,224,0,14,0,29,0,225,0,225,0,226,0,14,0,15,0,14,0,226,0,15,0,226,0,227,0,212,0,15,0,227,0,212,0,227,0,228,0,228,0]);fileData0.push.apply(fileData0,[210,0,212,0,228,0,229,0,210,0,196,0,210,0,229,0,229,0,230,0,196,0,195,0,196,0,230,0,225,0,224,0,226,0,228,0,231,0,229,0,221,0,220,0,232,0,221,0,232,0,233,0,91,0,126,0,34,0,234,0,34,0,126,0,23,0,34,0,234,0,23,0,234,0,235,0,23,0,235,0,21,0,21,0,235,0,236,0,236,0,18,0,21,0,18,0,236,0,237,0,16,0,18,0,237,0,222,0,16,0,237,0,222,0,238,0,16,0,221,0,238,0,222,0,221,0,239,0,238,0,221,0,233,0,239,0,239,0,233,0,240,0,233,0,232,0,240,0,232,0,219,0,240,0,232,0,220,0,219,0,133,0,241,0,242,0,243,0,133,0,242,0,243,0,126,0,133,0,234,0,126,0,243,0,244,0,234,0,243,0,244,0,235,0,234,0,235,0,244,0,245,0,235,0,245,0,236,0,236,0,245,0,246,0,236,0,246,0,237,0,237,0,246,0,247,0,237,0,247,0,222,0,247,0,224,0,222,0,248,0,224,0,247,0,224,0,248,0,226,0,248,0,227,0,226,0,227,0,248,0,228,0,248,0,249,0,228,0,247,0,246,0,248,0,246,0,245,0,248,0,245,0,249,0,248,0,245,0,244,0,249,0,244,0,250,0,249,0,250,0,244,0,251,0,249,0,250,0,251,0,228,0,249,0,231,0,249,0,251,0,231,0,251,0,252,0,231,0,252,0,251,0,253,0,254,0,253,0,251,0,244,0,254,0,251,0,244,0,255,0,254,0,0,1,255,0,244,0,0,1,244,0,243,0,0,1,243,0,242,0,242,0,1,1,0,1,2,1,0,1,1,1,3,1,2,1,1,1,3,1,0,1,2,1,3,1,1,1,4,1,4,1,1,1,5,1,4,1,5,1,6,1,7,1,8,1,9,1,10,1,8,1,7,1,11,1,8,1,10,1,11,1,10,1,12,1,13,1,11,1,12,1,13,1,12,1,10,1,13,1,10,1,14,1,14,1,10,1,252,0,14,1,252,0,15,1,252,0,253,0,15,1,253,0,16,1,15,1,15,1,16,1,6,1,17,1,15,1,6,1,6,1,5,1,17,1,5,1,18,1,17,1,18,1,5,1,1,1,241,0,18,1,1,1,242,0,241,0,1,1,231,0,252,0,19,1,252,0,10,1,19,1,20,1,19,1,10,1,20,1,10,1,7,1,141,0,156,0,21,1,14,1,21,1,156,0,14,1,17,1,21,1,14,1,15,1,17,1,22,1,23,1,13,1,22,1,13,1,14,1,13,1,23,1,11,1,22,1,11,1,23,1,22,1,8,1,11,1,22,1,154,0,8,1,22,1,24,1,154,0,154,0,24,1,155,0,155,0,24,1,156,0,25,1,156,0,24,1,25,1,14,1,156,0,25,1,26,1,14,1,26,1,22,1,14,1,26,1,27,1,22,1,28,1,22,1,27,1,25,1,28,1,27,1,25,1,24,1,28,1,22,1,28,1,24,1,25,1,27,1,26,1,131,0,143,0,29,1,132,0,131,0,29,1,132,0,29,1,30,1,133,0,132,0,30,1,133,0,30,1,241,0,241,0,30,1,31,1,241,0,31,1,18,1,32,1,18,1,31,1,17,1,18,1,32,1,17,1,32,1,21,1,142,0,21,1,32,1,142,0,141,0,21,1,31,1,30,1,29,1,29,1,32,1,31,1,29,1,143,0,32,1,142,0,32,1,143,0,33,1,34,1,35,1,36,1,35,1,34,1,37,1,34,1,33,1,33,1,38,1,37,1,38,1,33,1,35,1,38,1,35,1,39,1,35,1,36,1,39,1,40,1,39,1,36,1,40,1,36,1,41,1,42,1,40,1,41,1,42,1,43,1,40,1,44,1,43,1,42,1,44,1,45,1,43,1,45,1,44,1,46,1,46,1,47,1,45,1,47,1,46,1,48,1,46,1,44,1,48,1,42,1,48,1,44,1,49,1,37,1,38,1,49,1,38,1,50,1,51,1,50,1,38,1,51,1,38,1,39,1,52,1,45,1,47,1,52,1,53,1,45,1,45,1,53,1,54,1,45,1,54,1,43,1,55,1,56,1,57,1,55,1,58,1,56,1,58,1,55,1,59,1,58,1,59,1,60,1,58,1,60,1,61,1,58,1,61,1,62,1,56,1,58,1,62,1,63,1,56,1,62,1,63,1,62,1,64,1,65,1,66,1,67,1,65,1,68,1,66,1,69,1,68,1,65,1,69,1,70,1,68,1,69,1,71,1,70,1,72,1,70,1,71,1,72,1,71,1,55,1,55,1,73,1,72,1,55,1,57,1,73,1,74,1,73,1,57,1,74,1,57,1,75,1,72,1,73,1,70,1,73,1,68,1,70,1,73,1,76,1,68,1,74,1,76,1,73,1,74,1,77,1,76,1,76,1,78,1,66,1,76,1,66,1,68,1,79,1,80,1,81,1,80,1,82,1,81,1,82,1,83,1,81,1,82,1,84,1,83,1,84,1,85,1,83,1,84,1,86,1,85,1,87,1,85,1,86,1,87,1,86,1,77,1,87,1,77,1,88,1,74,1,88,1,77,1,74,1,89,1,88,1,75,1,89,1,74,1,75,1,90,1,89,1,75,1,57,1,90,1,91,1,90,1,57,1,91,1,57,1,56,1,92,1,91,1,56,1,92,1,93,1,91,1,80,1,94,1,82,1,95,1,96,1,97,1,95,1,97,1,93,1,91,1,93,1,97,1,91,1,97,1,98,1,90,1,91,1,98,1,90,1,98,1,89,1,99,1,89,1,98,1,88,1,89,1,99,1,100,1,88,1,99,1,100,1,87,1,88,1,101,1,102,1,103,1,104,1,103,1,102,1,105,1,104,1,102,1,104,1,105,1,96,1,96,1,105,1,97,1,97,1,105,1,102,1,98,1,97,1,102,1,99,1,98,1,102,1,101,1,99,1,102,1,101,1,100,1,99,1,93,1,92,1,106,1,106,1,95,1,93,1,106,1,107,1,95,1,96,1,95,1,107,1,96,1,107,1,108,1,96,1,108,1,109,1,104,1,96,1,109,1,104,1,109,1,110,1,104,1,110,1,111,1,110,1,112,1,111,1,111,1,112,1,113,1,114,1,113,1,112,1,113,1,114,1,115,1,115,1,114,1,116,1,115,1,116,1,117,1,117,1,116,1,118,1,117,1,118,1,119,1,115,1,117,1,119,1,107,1,106,1,108,1,110,1,120,1,118,1,110,1,118,1,112,1,118,1,116,1,112,1,112,1,116,1,114,1,113,1,115,1,121,1,115,1,119,1,122,1,122,1,121,1,115,1,122,1,123,1,121,1,123,1,113,1,121,1,123,1,124,1,113,1,111,1,113,1,124,1,125,1,111,1,124,1,104,1,111,1,125,1,126,1,104,1,125,1,104,1,126,1,103,1,103,1,126,1,127,1,127,1,101,1,103,1,127,1,128,1,101,1,128,1,100,1,101,1,128,1,129,1,100,1,129,1,87,1,100,1,129,1,85,1,87,1,83,1,85,1,129,1,129,1,128,1,130,1,129,1,130,1,131,1,128,1,127,1,132,1,128,1,132,1,130,1,132,1,133,1,130,1,133,1,131,1,130,1,133,1,134,1,131,1,83,1,129,1,131,1,131,1,81,1,83,1,131,1,134,1,81,1,79,1,81,1,134,1,79,1,134,1,135,1,136,1,135,1,134,1,136,1,134,1,133,1,137,1,136,1,133,1,132,1,137,1,133,1,138,1,137,1,132,1,127,1,138,1,132,1,127,1,126,1,138,1,138,1,126,1,139,1,140,1,139,1,126,1,141,1,139,1,140,1,142,1,141,1,140,1,143,1,141,1,142,1,143,1,142,1,144,1,138,1,139,1,141,1,141,1,143,1,138,1,138,1,143,1,145,1,145,1,137,1,138,1,137,1,145,1,146,1,137,1,146,1,147,1,147,1,136,1,137,1,148,1,143,1,149,1,145,1,143,1,148,1,145,1,148,1,146,1,149,1,143,1,144,1,144,1,150,1,149,1,150,1,144,1,151,1,150,1,151,1,152,1,151,1,144,1,142,1,151,1,142,1,153,1,153,1,142,1,154,1,155,1,154,1,142,1,155,1,156,1,154,1,155,1,157,1,156,1,158,1,156,1,157,1,159,1,158,1,157,1,159,1,124,1,158,1,125,1,124,1,159,1,160,1,125,1,159,1,160,1,126,1,125,1,140,1,126,1,160,1,140,1,160,1,161,1,142,1,140,1,161,1,155,1,142,1,161,1,160,1,155,1,161,1,160,1,157,1,155,1,160,1,159,1,157,1,158,1,162,1,156,1,163,1,162,1,164,1,165,1,164,1,162,1,166,1,165,1,162,1,166,1,162,1,158,1,166,1,158,1,167,1,168,1,164,1,169,1,165,1,169,1,164,1,123,1,158,1,124,1,123,1,170,1,158,1,167,1,158,1,170,1,167,1,170,1,171,1,171,1,172,1,167,1,166,1,167,1,172,1,166,1,172,1,173,1,166,1,173,1,174,1,166,1,174,1,165,1,165,1,174,1,175,1,165,1,175,1,169,1,176,1,169,1,175,1,168,1,169,1,176,1,177,1,168,1,176,1,168,1,177,1,178,1,179,1,168,1,178,1,179,1,164,1,168,1,163,1,164,1,179,1,175,1,174,1,180,1,179,1,181,1,163,1,182,1,163,1,181,1,183,1,184,1,185,1,185,1,184,1,181,1,185,1,181,1,186,1,179,1,186,1,181,1,187,1,186,1,179,1,187,1,188,1,186,1,187,1,189,1,188,1,189,1,190,1,188,1,189,1,191,1,190,1,192,1,190,1,191,1,192,1,185,1,190,1,185,1,188,1,190,1,185,1,186,1,188,1,193,1,194,1,195,1,196,1,193,1,195,1,196,1,197,1,198,1,198,1,199,1,196,1,199,1,193,1,196,1,199,1,200,1,193,1,193,1,200,1,194,1,201,1,194,1,200,1,195,1,194,1,201,1,195,1,201,1,202,1,202,1,203,1,195,1,195,1,203,1,204,1,205,1,206,1,202,1,202,1,207,1,205,1,201,1,207,1,202,1,208,1,207,1,201,1,208,1,201,1,200,1,209,1,208,1,200,1,210,1,209,1,200,1,210,1,200,1,211,1,211,1,200,1,199,1,212,1,213,1,208,1,209,1,212,1,208,1,214,1,212,1,209,1,210,1,214,1,209,1,215,1,214,1,210,1,216,1,217,1,218,1,216,1,218,1,219,1,219,1,218,1,220,1,219,1,220,1,221,1,204,1,221,1,220,1,204,1,222,1,221,1,204,1,203,1,222,1,203,1,223,1,222,1,203,1,202,1,223,1,224,1,223,1,202,1,224,1,202,1,206,1,225,1,224,1,206,1,205,1,225,1,206,1,225,1,205,1,226,1,226,1,205,1,227,1,207,1,227,1,205,1,213,1,227,1,207,1,213,1,207,1,208,1,225,1,226,1,228,1,228,1,229,1,230,1,228,1,230,1,225,1,224,1,225,1,230,1,224,1,230,1,231,1,224,1,231,1,223,1,223,1,231,1,232,1,230,1,232,1,231,1,233,1,234,1,235,1,233,1,229,1,234,1,229,1,236,1,234,1,237,1,236,1,229,1,237,1,229,1,228,1,228,1,238,1,237,1,228,1,226,1,238,1,239,1,238,1,226,1,226,1,227,1,239,1,239,1,227,1,240,1,213,1,240,1,227,1,241,1,240,1,213,1,212,1,241,1,213,1,242,1,241,1,212,1,214,1,242,1,212,1,243,1,242,1,214,1,215,1,243,1,214,1,215,1,244,1,243,1,242,1,245,1,241,1,243,1,246,1,242,1,242,1,246,1,245,1,247,1,245,1,246,1,247,1,248,1,245,1,248,1,241,1,245,1,248,1,249,1,241,1,241,1,249,1,240,1,250,1,240,1,249,1,239,1,240,1,250,1,251,1,239,1,250,1,239,1,251,1,238,1,252,1,248,1,247,1,252,1,253,1,248,1,253,1,249,1,248,1,253,1,254,1,249,1,250,1,249,1,254,1,255,1,250,1,254,1,251,1,250,1,255,1,255,1,254,1,0,2,1,2,0,2,254,1,1,2,254,1,253,1,1,2,253,1,2,2,252,1,2,2,253,1,252,1,3,2,2,2,244,1,4,2,5,2,244,1,6,2,4,2,4,2,6,2,7,2,4,2,7,2,8,2,9,2,7,2,6,2,10,2,244,1,215,1,6,2,244,1,10,2,6,2,10,2,11,2,11,2,9,2,6,2,11,2,12,2,9,2,13,2,12,2,11,2,13,2,14,2,12,2,14,2,13,2,10,2,14,2,10,2,15,2,15,2,10,2,215,1,15,2,215,1,16,2,210,1,16,2,215,1,210,1,17,2,16,2,211,1,17,2,210,1,211,1,18,2,17,2,199,1,18,2,211,1,199,1,19,2,18,2,198,1,19,2,199,1,13,2,11,2,10,2,19,2,20,2,21,2,18,2,19,2,21,2,18,2,21,2,22,2,16,2,17,2,15,2,18,2,15,2,17,2,18,2,22,2,15,2,22,2,14,2,15,2,22,2,23,2,14,2,23,2,24,2,14,2,23,2,25,2,24,2,23,2,26,2,25,2,23,2,27,2,26,2,22,2,27,2,23,2,28,2,27,2,22,2,28,2,29,2,27,2,198,1,20,2,19,2,198,1,197,1,20,2,197,1,30,2,20,2,196,1,30,2,197,1,196,1,31,2,30,2,196,1,195,1,31,2,195,1,32,2,31,2,195,1,204,1,32,2,32,2,204,1,33,2,204,1,220,1,33,2,34,2,33,2,220,1,220,1,217,1,34,2,35,2,34,2,217,1,35,2,217,1,36,2,36,2,37,2,35,2,36,2,38,2,37,2,38,2,36,2,217,1,38,2,217,1,216,1,32,2,37,2,39,2,32,2,33,2,37,2,37,2,33,2,35,2,33,2,34,2,35,2,220,1,218,1,217,1,40,2,41,2,42,2,43,2,44,2,45,2,44,2,41,2,45,2,46,2,47,2,48,2,49,2,48,2,47,2,42,2,49,2,47,2,42,2,50,2,49,2,50,2,42,2,41,2,50,2,41,2,51,2,44,2,51,2,41,2,44,2,52,2,51,2,44,2,53,2,52,2,54,2,52,2,53,2,54,2,53,2,55,2,53,2,56,2,55,2,53,2,44,2,56,2,57,2,50,2,51,2,57,2,51,2,52,2,57,2,52,2,54,2,58,2,59,2,60,2,58,2,60,2,47,2,58,2,47,2,61,2,61,2,47,2,46,2,61,2,46,2,62,2,229,1,233,1,63,2,229,1,63,2,230,1,63,2,59,2,230,1,230,1,59,2,232,1,58,2,232,1,59,2,223,1,232,1,58,2,223,1,58,2,222,1,222,1,58,2,221,1,221,1,58,2,61,2,219,1,221,1,61,2,219,1,61,2,64,2,64,2,61,2,62,2,64,2,62,2,65,2,65,2,62,2,66,2,46,2,66,2,62,2,46,2,67,2,66,2,46,2,68,2,67,2,46,2,48,2,68,2,68,2,48,2,69,2,49,2,69,2,48,2,70,2,69,2,49,2,50,2,70,2,49,2,50,2,71,2,70,2,70,2,71,2,72,2,72,2,73,2,70,2,70,2,73,2,69,2,73,2,74,2,69,2,68,2,69,2,74,2,74,2,75,2,68,2,76,2,77,2,78,2,77,2,76,2,79,2,80,2,79,2,76,2,80,2,76,2,81,2,80,2,81,2,82,2,82,2,81,2,83,2,83,2,84,2,82,2,85,2,82,2,84,2,80,2,82,2,85,2,86,2,80,2,85,2,87,2,79,2,80,2,86,2,87,2,80,2,87,2,86,2,88,2,89,2,88,2,86,2,89,2,86,2,90,2,90,2,86,2,85,2,90,2,85,2,91,2,85,2,84,2,91,2,91,2,84,2,92,2,93,2,92,2,84,2,93,2,84,2,83,2,83,2,94,2,93,2,81,2,94,2,83,2,81,2,95,2,94,2,76,2,95,2,81,2,76,2,96,2,95,2,76,2,78,2,96,2,96,2,78,2,97,2,94,2,95,2,98,2,99,2,100,2,101,2,99,2,101,2,102,2,102,2,103,2,99,2,102,2,104,2,103,2,102,2,105,2,104,2,106,2,104,2,105,2,105,2,107,2,106,2,107,2,93,2,106,2,93,2,107,2,108,2,108,2,92,2,93,2,109,2,92,2,108,2,91,2,92,2,109,2,91,2,109,2,110,2,91,2,110,2,90,2,90,2,110,2,111,2,90,2,111,2,89,2,111,2,112,2,89,2,88,2,89,2,112,2,111,2,113,2,112,2,112,2,114,2,115,2,116,2,114,2,112,2,112,2,117,2,116,2,112,2,113,2,117,2,117,2,113,2,118,2,118,2,113,2,111,2,118,2,111,2,119,2,119,2,111,2,110,2,119,2,110,2,120,2,120,2,110,2,109,2,120,2,109,2,121,2,109,2,108,2,121,2,118,2,119,2,122,2,118,2,122,2,123,2,118,2,123,2,124,2,118,2,124,2,125,2,124,2,126,2,125,2,124,2,127,2,126,2,128,2,126,2,129,2,125,2,126,2,128,2,125,2,128,2,130,2,131,2,125,2,130,2,131,2,118,2,125,2,117,2,118,2,131,2,132,2,133,2,115,2,132,2,115,2,114,2,132,2,114,2,134,2,134,2,114,2,116,2,134,2,116,2,135,2,135,2,116,2,117,2,135,2,117,2,136,2,136,2,117,2,131,2,136,2,131,2,137,2,130,2,137,2,131,2,130,2,138,2,137,2,138,2,130,2,128,2,138,2,128,2,139,2,138,2,139,2,140,2,138,2,140,2,141,2,142,2,141,2,140,2,143,2,141,2,142,2,143,2,142,2,144,2,142,2,140,2,145,2,132,2,146,2,133,2,133,2,146,2,147,2,145,2,148,2,149,2,142,2,145,2,149,2,150,2,142,2,149,2,144,2,142,2,150,2,144,2,150,2,151,2,144,2,151,2,152,2,144,2,152,2,153,2,144,2,153,2,154,2,154,2,155,2,144,2,150,2,149,2,156,2,112,2,115,2,88,2,87,2,88,2,115,2,133,2,87,2,115,2,87,2,133,2,79,2,79,2,133,2,147,2,79,2,147,2,77,2,147,2,157,2,77,2,147,2,158,2,157,2,147,2,159,2,158,2,147,2,146,2,159,2,159,2,146,2,160,2,146,2,132,2,160,2,160,2,132,2,161,2,132,2,134,2,161,2,134,2,162,2,161,2,134,2,163,2,162,2,164,2,162,2,163,2,164,2,163,2,165,2,166,2,167,2,168,2,167,2,169,2,168,2,168,2,169,2,164,2,169,2,162,2,164,2,169,2,170,2,162,2,170,2,161,2,162,2,168,2,164,2,171,2,168,2,171,2,166,2,166,2,171,2,172,2,173,2,174,2,167,2,173,2,167,2,175,2,175,2,176,2,173,2,167,2,177,2,169,2,177,2,167,2,174,2,177,2,174,2,178,2,179,2,178,2,174,2,179,2,174,2,173,2,179,2,173,2,180,2,179,2,181,2,178,2,96,2,97,2,179,2,179,2,95,2,96,2,179,2,180,2,95,2,95,2,180,2,98,2,173,2,98,2,180,2,182,2,98,2,173,2,173,2,176,2,182,2,176,2,183,2,182,2,184,2,183,2,176,2,185,2,183,2,184,2,184,2,186,2,185,2,183,2,185,2,187,2,164,2,165,2,171,2,171,2,165,2,188,2,171,2,188,2,172,2,189,2,172,2,188,2,189,2,190,2,172,2,190,2,189,2,154,2,154,2,191,2,190,2,191,2,154,2,153,2,153,2,192,2,191,2,191,2,192,2,186,2,191,2,186,2,193,2,184,2,193,2,186,2,194,2,193,2,184,2,184,2,176,2,194,2,176,2,195,2,194,2,195,2,176,2,175,2,175,2,166,2,195,2,166,2,175,2,167,2,172,2,190,2,196,2,172,2,196,2,197,2,166,2,172,2,197,2,195,2,166,2,197,2,197,2,196,2,195,2,195,2,196,2,194,2,196,2,193,2,194,2,196,2,190,2,193,2,193,2,190,2,191,2,198,2,143,2,144,2,198,2,144,2,155,2,199,2,198,2,155,2,154,2,199,2,155,2,154,2,189,2,199,2,188,2,199,2,189,2,165,2,199,2,188,2,165,2,163,2,199,2,200,2,199,2,163,2,134,2,200,2,163,2,134,2,135,2,200,2,135,2,198,2,200,2,135,2,136,2,198,2,143,2,198,2,136,2,143,2,136,2,137,2,141,2,143,2,137,2,141,2,137,2,138,2,199,2,200,2,198,2,201,2,202,2,203,2,201,2,203,2,204,2,205,2,206,2,207,2,205,2,208,2,206,2,205,2,209,2,208,2,205,2,210,2,209,2,210,2,211,2,209,2,210,2,212,2,211,2,212,2,210,2,213,2,212,2,213,2,214,2,213,2,215,2,214,2,213,2,216,2,215,2,215,2,216,2,217,2,217,2,216,2,218,2,216,2,219,2,218,2,219,2,220,2,218,2,220,2,219,2,221,2,221,2,219,2,201,2,201,2,219,2,222,2,222,2,202,2,201,2,222,2,219,2,216,2,222,2,223,2,202,2,222,2,216,2,223,2,213,2,223,2,216,2,213,2,224,2,223,2,213,2,210,2,224,2,224,2,210,2,205,2,225,2,224,2,205,2,226,2,227,2,228,2,229,2,228,2,227,2,229,2,227,2,230,2,229,2,230,2,231,2,229,2,231,2,232,2,232,2,231,2,233,2,232,2,233,2,234,2,234,2,233,2,235,2,234,2,235,2,236,2,236,2,237,2,234,2,238,2,234,2,237,2,239,2,238,2,237,2,240,2,238,2,239,2,240,2,239,2,241,2,242,2,240,2,241,2,241,2,225,2,242,2,207,2,242,2,225,2,225,2,205,2,207,2,234,2,238,2,232,2,238,2,229,2,232,2,228,2,229,2,238,2,240,2,228,2,238,2,242,2,228,2,240,2,242,2,226,2,228,2,226,2,242,2,207,2,226,2,207,2,243,2,244,2,237,2,236,2,244,2,236,2,245,2,206,2,243,2,207,2,243,2,206,2,246,2,243,2,246,2,247,2,246,2,248,2,247,2,247,2,248,2,249,2,243,2,247,2,249,2,243,2,249,2,250,2,226,2,243,2,250,2,226,2,250,2,227,2,251,2,252,2,253,2,254,2,253,2,252,2,254,2,255,2,253,2,254,2,0,3,255,2,0,3,1,3,255,2,0,3,2,3,1,3,2,3,244,2,1,3,2,3,237,2,244,2,3,3,237,2,2,3,239,2,237,2,3,3,239,2,3,3,241,2,4,3,241,2,3,3,251,2,253,2,255,2,0,3,254,2,5,3,2,3,0,3,5,3,3,3,2,3,5,3,3,3,5,3,4,3,6,3,7,3,8,3,7,3,6,3,252,2,6,3,9,3,252,2,254,2,252,2,9,3,10,3,254,2,9,3,254,2,10,3,11,3,8,3,7,3,12,3,9,3,13,3,14,3,15,3,14,3,16,3,13,3,16,3,14,3,16,3,13,3,17,3,13,3,18,3,17,3,13,3,9,3,18,3,18,3,9,3,6,3,19,3,20,3,21,3,22,3,21,3,20,3,22,3,23,3,21,3,21,3,23,3,24,3,25,3,24,3,23,3,25,3,26,3,24,3,26,3,25,3,15,3,26,3,15,3,27,3,16,3,27,3,15,3,16,3,28,3,27,3,16,3,17,3,28,3,17,3,29,3,28,3,17,3,30,3,29,3,30,3,17,3,31,3,31,3,17,3,18,3,31,3,18,3,32,3,8,3,32,3,18,3,8,3,18,3,6,3,27,3,28,3,29,3,33,3,27,3,29,3,33,3,26,3,27,3,33,3,34,3,26,3,35,3,26,3,34,3,35,3,24,3,26,3,25,3,23,3,36,3,37,3,38,3,39,3,40,3,41,3,42,3,40,3,43,3,41,3,40,3,44,3,43,3,44,3,45,3,43,3,44,3,46,3,45,3,46,3,47,3,45,3,46,3,48,3,47,3,47,3,48,3,49,3,47,3,49,3,50,3,50,3,49,3,51,3,50,3,51,3,52,3,51,3,53,3,52,3,39,3,52,3,53,3,53,3,54,3,39,3,39,3,54,3,55,3,39,3,55,3,37,3,37,3,55,3,56,3,37,3,56,3,57,3,47,3,43,3,45,3,51,3,58,3,53,3,53,3,58,3,54,3,59,3,60,3,61,3,61,3,60,3,62,3,61,3,62,3,63,3,64,3,63,3,62,3,65,3,64,3,62,3,65,3,57,3,64,3,65,3,37,3,57,3,65,3,38,3,37,3,65,3,66,3,38,3,66,3,39,3,38,3,67,3,39,3,66,3,67,3,52,3,39,3,50,3,52,3,67,3,50,3,67,3,47,3,67,3,68,3,47,3,69,3,47,3,68,3,43,3,47,3,69,3,43,3,69,3,70,3,64,3,71,3,63,3,62,3,60,3,72,3,62,3,72,3,65,3,65,3,72,3,66,3,66,3,72,3,68,3,67,3,66,3,68,3,70,3,73,3,74,3,57,3,56,3,75,3,57,3,75,3,64,3,76,3,64,3,75,3,76,3,71,3,64,3,77,3,71,3,76,3,77,3,63,3,71,3,77,3,78,3,63,3,78,3,61,3,63,3,79,3,61,3,78,3,79,3,59,3,61,3,79,3,80,3,59,3,80,3,60,3,59,3,80,3,81,3,60,3,82,3,81,3,80,3,82,3,83,3,81,3,82,3,84,3,83,3,84,3,85,3,83,3,84,3,86,3,85,3,77,3,87,3,78,3,84,3,88,3,86,3,84,3,89,3,88,3,84,3,90,3,89,3,84,3,82,3,90,3,91,3,90,3,82,3,91,3,82,3,80,3,79,3,91,3,80,3,79,3,92,3,91,3,93,3,92,3,79,3,93,3,79,3,78,3,94,3,95,3,86,3,96,3,94,3,86,3,96,3,86,3,88,3,97,3,96,3,88,3,97,3,88,3,98,3,98,3,88,3,89,3,98,3,89,3,99,3,94,3,100,3,95,3,85,3,101,3,102,3,85,3,86,3,101,3,95,3,101,3,86,3,95,3,103,3,101,3,95,3,104,3,103,3,105,3,103,3,104,3,105,3,104,3,106,3,107,3,105,3,106,3,108,3,107,3,106,3,109,3,107,3,108,3,110,3,107,3,109,3,107,3,110,3,111,3,107,3,111,3,112,3,113,3,107,3,112,3,113,3,105,3,107,3,108,3,106,3,114,3,106,3,115,3,114,3,115,3,106,3,104,3,115,3,104,3,116,3,117,3,116,3,104,3,117,3,104,3,95,3,118,3,113,3,119,3,120,3,103,3,118,3,120,3,118,3,121,3,118,3,119,3,121,3,122,3,121,3,119,3,122,3,123,3,121,3,124,3,123,3,122,3,124,3,125,3,123,3,124,3,126,3,125,3,126,3,127,3,125,3,126,3,128,3,127,3,120,3,129,3,130,3,123,3,129,3,120,3,123,3,120,3,121,3,131,3,132,3,133,3,131,3,134,3,132,3,134,3,135,3,132,3,134,3,136,3,135,3,134,3,137,3,136,3,134,3,138,3,137,3,139,3,138,3,134,3,139,3,140,3,138,3,139,3,123,3,140,3,123,3,125,3,140,3,141,3,140,3,125,3,141,3,125,3,127,3,139,3,134,3,131,3,142,3,137,3,138,3,142,3,138,3,140,3,142,3,140,3,141,3,143,3,144,3,145,3,146,3,145,3,144,3,146,3,144,3,147,3,148,3,147,3,144,3,148,3,144,3,149,3,144,3,150,3,149,3,150,3,144,3,151,3,150,3,151,3,152,3,153,3,152,3,151,3,153,3,154,3,152,3,153,3,155,3,154,3,155,3,156,3,154,3,155,3,157,3,156,3,157,3,155,3,130,3,130,3,155,3,102,3,130,3,102,3,120,3,120,3,102,3,101,3,120,3,101,3,103,3,152,3,154,3,156,3,152,3,156,3,158,3,152,3,158,3,150,3,153,3,102,3,155,3,85,3,102,3,153,3,85,3,153,3,151,3,85,3,151,3,143,3,143,3,151,3,144,3,159,3,160,3,161,3,159,3,161,3,162,3,163,3,159,3,162,3,163,3,162,3,164,3,162,3,161,3,165,3,166,3,162,3,165,3,166,3,164,3,162,3,167,3,164,3,166,3,167,3,163,3,164,3,167,3,168,3,163,3,168,3,169,3,163,3,169,3,159,3,163,3,159,3,169,3,170,3,159,3,170,3,160,3,160,3,170,3,171,3,171,3,172,3,160,3,42,3,172,3,171,3,43,3,172,3,42,3,41,3,43,3,42,3,169,3,171,3,170,3,171,3,169,3,173,3,174,3,173,3,169,3,168,3,174,3,169,3,167,3,166,3,175,3,165,3,175,3,166,3,165,3,176,3,175,3,177,3,42,3,171,3,171,3,173,3,177,3,173,3,178,3,177,3,177,3,178,3,179,3,177,3,179,3,42,3,40,3,42,3,179,3,43,3,70,3,172,3,70,3,74,3,172,3,74,3,160,3,172,3,74,3,180,3,160,3,180,3,161,3,160,3,180,3,181,3,161,3,182,3,181,3,180,3,182,3,183,3,181,3,183,3,182,3,184,3,183,3,184,3,185,3,185,3,184,3,186,3,185,3,186,3,187,3,187,3,186,3,188,3,189,3,188,3,186,3,189,3,186,3,190,3,190,3,191,3,189,3,190,3,192,3,191,3,193,3,192,3,190,3,184,3,190,3,186,3,184,3,193,3,190,3,193,3,184,3,182,3,193,3,182,3,194,3,194,3,182,3,180,3,194,3,180,3,74,3,195,3,194,3,74,3,195,3,74,3,73,3,196,3,195,3,73,3,70,3,196,3,73,3,70,3,197,3,196,3,196,3,197,3,198,3,196,3,198,3,199,3,199,3,198,3,200,3,199,3,200,3,201,3,201,3,202,3,199,3,201,3,203,3,202,3,204,3,202,3,203,3,204,3,203,3,205,3,206,3,204,3,207,3,207,3,204,3,205,3,207,3,205,3,208,3,208,3,209,3,207,3,210,3,207,3,209,3,210,3,206,3,207,3,206,3,210,3,211,3,206,3,211,3,212,3,213,3,206,3,212,3,206,3,213,3,204,3,202,3,204,3,213,3,202,3,213,3,214,3,199,3,202,3,214,3,199,3,214,3,196,3,196,3,214,3,195,3,215,3,195,3,214,3,216,3,195,3,215,3,216,3,217,3,195,3,217,3,194,3,195,3,217,3,193,3,194,3,215,3,214,3,213,3,218,3,219,3,220,3,221,3,222,3,223,3,224,3,222,3,221,3,225,3,224,3,221,3,225,3,226,3,224,3,227,3,226,3,225,3,227,3,228,3,226,3,227,3,229,3,228,3,227,3,230,3,229,3,230,3,218,3,229,3,230,3,231,3,218,3,219,3,218,3,231,3,219,3,231,3,232,3,231,3,233,3,232,3,231,3,234,3,233,3,233,3,234,3,235,3,234,3,236,3,235,3,235,3,236,3,237,3,236,3,238,3,237,3,231,3,230,3,234,3,227,3,234,3,230,3,224,3,239,3,222,3,222,3,239,3,240,3,223,3,241,3,242,3,223,3,242,3,243,3,243,3,221,3,223,3,243,3,244,3,221,3,221,3,244,3,225,3,244,3,245,3,225,3,245,3,227,3,225,3,245,3,246,3,227,3,227,3,246,3,234,3,234,3,246,3,236,3,246,3,247,3,236,3,236,3,247,3,238,3,238,3,247,3,248,3,238,3,248,3,249,3,249,3,248,3,250,3,251,3,249,3,250,3,251,3,250,3,252,3,253,3,251,3,252,3,254,3,250,3,248,3,254,3,248,3,247,3,244,3,254,3,247,3,244,3,247,3,245,3,246,3,245,3,247,3,252,3,250,3,255,3,254,3,255,3,250,3,254,3,0,4,255,3,244,3,0,4,254,3,244,3,243,3,0,4,253,3,252,3,1,4,252,3,255,3,1,4,255,3,2,4,1,4,255,3,3,4,2,4,0,4,3,4,255,3,0,4,4,4,3,4,4,4,0,4,243,3,4,4,243,3,242,3,5,4,6,4,251,3,5,4,251,3,253,3,7,4,5,4,253,3,7,4,253,3,1,4,8,4,7,4,1,4,8,4,1,4,2,4,9,4,8,4,2,4,9,4,2,4,10,4,3,4,10,4,2,4,3,4,11,4,10,4,4,4,11,4,3,4,12,4,11,4,4,4,242,3,12,4,4,4,242,3,13,4,12,4,13,4,242,3,241,3,13,4,241,3,14,4,241,3,15,4,14,4,241,3,240,3,15,4,223,3,240,3,241,3,223,3,222,3,240,3,237,3,238,3,16,4,238,3,249,3,16,4,16,4,249,3,17,4,251,3,17,4,249,3,17,4,251,3,18,4,18,4,251,3,6,4,18,4,6,4,19,4,19,4,20,4,18,4,19,4,21,4,20,4,22,4,20,4,21,4,22,4,21,4,23,4,22,4,23,4,24,4,22,4,24,4,25,4,25,4,24,4,26,4,25,4,26,4,27,4,27,4,26,4,28,4,27,4,28,4,29,4,29,4,28,4,30,4,31,4,20,4,22,4,22,4,25,4,31,4,31,4,25,4,27,4,235,3,237,3,32,4,32,4,237,3,29,4,237,3,27,4,29,4,237,3,16,4,27,4,16,4,31,4,27,4,16,4,17,4,31,4,17,4,20,4,31,4,18,4,20,4,17,4,29,4,30,4,33,4,29,4,33,4,34,4,29,4,34,4,32,4,35,4,32,4,34,4,35,4,235,3,32,4,233,3,235,3,35,4,36,4,37,4,38,4,37,4,36,4,39,4,36,4,40,4,39,4,41,4,42,4,43,4,44,4,42,4,41,4,44,4,45,4,42,4,46,4,45,4,44,4,46,4,47,4,45,4,47,4,46,4,48,4,47,4,48,4,49,4,49,4,48,4,38,4,49,4,38,4,50,4,50,4,38,4,37,4,50,4,37,4,51,4,37,4,52,4,51,4,37,4,39,4,52,4,53,4,52,4,39,4,53,4,39,4,40,4,40,4,54,4,53,4,40,4,55,4,54,4,55,4,56,4,54,4,57,4,58,4,41,4,59,4,41,4,58,4,44,4,41,4,59,4,44,4,59,4,46,4,46,4,59,4,60,4,46,4,60,4,61,4,61,4,60,4,62,4,61,4,62,4,63,4,63,4,62,4,64,4,65,4,63,4,64,4,64,4,66,4,65,4,67,4,65,4,66,4,67,4,68,4,65,4,69,4,65,4,68,4,69,4,68,4,70,4,70,4,55,4,69,4,69,4,55,4,40,4,69,4,40,4,71,4,59,4,58,4,60,4,58,4,72,4,60,4,72,4,62,4,60,4,72,4,64,4,62,4,73,4,74,4,75,4,75,4,76,4,73,4,73,4,76,4,77,4,76,4,67,4,77,4,67,4,78,4,77,4,67,4,66,4,78,4,79,4,78,4,66,4,64,4,79,4,66,4,80,4,79,4,64,4,80,4,64,4,72,4,81,4,80,4,72,4,58,4,81,4,72,4,81,4,58,4,82,4,57,4,82,4,58,4,83,4,82,4,57,4,57,4,84,4,83,4,57,4,43,4,84,4,41,4,43,4,57,4,83,4,85,4,82,4,86,4,82,4,85,4,81,4,82,4,86,4,81,4,87,4,80,4,86,4,87,4,81,4,86,4,88,4,87,4,89,4,88,4,86,4,89,4,86,4,85,4,89,4,90,4,88,4,91,4,92,4,80,4,80,4,92,4,79,4,79,4,92,4,78,4,87,4,91,4,80,4,87,4,93,4,91,4,93,4,87,4,88,4,93,4,88,4,94,4,90,4,94,4,88,4,90,4,95,4,94,4,94,4,95,4,96,4,94,4,96,4,97,4,93,4,94,4,97,4,93,4,97,4,98,4,91,4,93,4,98,4,98,4,99,4,91,4,92,4,91,4,99,4,92,4,99,4,100,4,78,4,92,4,100,4,78,4,100,4,101,4,102,4,78,4,101,4,102,4,77,4,78,4,73,4,77,4,102,4,98,4,97,4,103,4,98,4,103,4,99,4,104,4,105,4,106,4,104,4,107,4,105,4,108,4,107,4,104,4,108,4,109,4,107,4,109,4,108,4,110,4,109,4,110,4,111,4,112,4,111,4,110,4,112,4,110,4,113,4,112,4,113,4,114,4,71,4,40,4,36,4,115,4,71,4,36,4,115,4,36,4,38,4,48,4,115,4,38,4,115,4,48,4,46,4,46,4,61,4,115,4,115,4,61,4,71,4,61,4,63,4,71,4,69,4,71,4,63,4,65,4,69,4,63,4,116,4,117,4,118,4,116,4,118,4,119,4,120,4,116,4,119,4,120,4,148,3,116,4,148,3,120,4,121,4,122,4,123,4,146,3,122,4,146,3,147,3,147,3,124,4,122,4,147,3,148,3,124,4,148,3,125,4,124,4,148,3,121,4,125,4,125,4,121,4,126,4,127,4,126,4,121,4,121,4,128,4,127,4,121,4,120,4,128,4,129,4,128,4,120,4,129,4,120,4,119,4,129,4,119,4,130,4,130,4,119,4,118,4,130,4,118,4,131,4,118,4,132,4,131,4,118,4,133,4,132,4,117,4,133,4,118,4,117,4,134,4,133,4,127,4,135,4,126,4,136,4,137,4,138,4,138,4,137,4,139,4,138,4,139,4,140,4,139,4,141,4,140,4,142,4,140,4,141,4,142,4,138,4,140,4,143,4,138,4,142,4,136,4,138,4,143,4,136,4,143,4,144,4,143,4,142,4,144,4,145,4,144,4,142,4,145,4,146,4,144,4,136,4,144,4,146,4,136,4,146,4,147,4,147,4,137,4,136,4,148,4,137,4,147,4,137,4,148,4,149,4,149,4,139,4,137,4,139,4,149,4,150,4,139,4,150,4,141,4,141,4,150,4,151,4,142,4,141,4,151,4,152,4,142,4,151,4,152,4,145,4,142,4,152,4,153,4,145,4,153,4,152,4,151,4,154,4,155,4,156,4,155,4,154,4,157,4,154,4,158,4,157,4,159,4,157,4,158,4,159,4,155,4,157,4,160,4,155,4,161,4,159,4,161,4,155,4,161,4,159,4,162,4,162,4,159,4,158,4,162,4,158,4,163,4,164,4,163,4,158,4,164,4,158,4,165,4,165,4,166,4,164,4,165,4,167,4,166,4,166,4,167,4,168,4,166,4,168,4,169,4,161,4,162,4,170,4,167,4,165,4,171,4,165,4,172,4,171,4,158,4,172,4,165,4,167,4,171,4,173,4,167,4,173,4,174,4,167,4,174,4,168,4,168,4,174,4,175,4,176,4,168,4,175,4,169,4,168,4,176,4,169,4,176,4,177,4,176,4,178,4,177,4,176,4,179,4,178,4,180,4,178,4,179,4,179,4,181,4,180,4,182,4,180,4,181,4,182,4,181,4,183,4,184,4,182,4,183,4,184,4,183,4,185,4,184,4,185,4,156,4,184,4,156,4,160,4,160,4,156,4,155,4,180,4,186,4,178,4,179,4,176,4,187,4,179,4,187,4,181,4,181,4,187,4,188,4,188,4,183,4,181,4,188,4,187,4,176,4,189,4,190,4,191,4,189,4,192,4,190,4,190,4,192,4,193,4,194,4,190,4,193,4,190,4,194,4,195,4,190,4,195,4,196,4,190,4,196,4,191,4,191,4,196,4,197,4,198,4,199,4,200,4,200,4,199,4,201,4,202,4,200,4,201,4,195,0,230,0,203,4,203,4,230,0,204,4,203,4,204,4,205,4,205,4,204,4,206,4,205,4,206,4,207,4,206,4,198,4,207,4,198,4,208,4,207,4,198,4,200,4,208,4,200,4,209,4,208,4,200,4,202,4,209,4,210,4,209,4,202,4,210,4,202,4,211,4,202,4,201,4,211,4,212,4,211,4,201,4,213,4,212,4,201,4,212,4,213,4,214,4,213,4,215,4,214,4,214,4,215,4,216,4,213,4,201,4,217,4,213,4,217,4,215,4,215,4,217,4,201,4,214,4,216,4,218,4,212,4,214,4,218,4,219,4,212,4,218,4,219,4,220,4,212,4,9,1,220,4,219,4,212,4,220,4,9,1,212,4,9,1,8,1,212,4,8,1,211,4,215,4,201,4,216,4,221,4,216,4,201,4,221,4,201,4,199,4,199,4,222,4,221,4,199,4,198,4,222,4,206,4,222,4,198,4,222,4,206,4,204,4,223,4,222,4,204,4,223,4,204,4,230,0,230,0,229,0,223,4,216,4,223,4,229,0,216,4,229,0,231,0,216,4,231,0,218,4,231,0,19,1,218,4,19,1,219,4,218,4,19,1,20,1,219,4,9,1,219,4,20,1,7,1,9,1,20,1,221,4,222,4,223,4,221,4,223,4,216,4,224,4,225,4,226,4,224,4,226,4,227,4,224,4,227,4,228,4,229,4,228,4,227,4,229,4,227,4,230,4,230,4,231,4,229,4,232,4,229,4,231,4,231,4,230,4,187,2,187,2,230,4,183,2,183,2,230,4,227,4,183,2,227,4,182,2,182,2,227,4,226,4,182,2,226,4,98,2,226,4,94,2,98,2,226,4,225,4,94,2,93,2,94,2,225,4,93,2,225,4,106,2,104,2,106,2,225,4,104,2,225,4,233,4,224,4,233,4,225,4,233,4,224,4,234,4,234,4,224,4,228,4,234,4,228,4,235,4,229,4,235,4,228,4,229,4,236,4,235,4,233,4,234,4,237,4,104,2,233,4,237,4,104,2,237,4,103,2,232,4,236,4,229,4,232,4,238,4,236,4,239,4,238,4,232,4,239,4,240,4,238,4,218,0,223,0,241,4,241,4,242,4,218,0,241,4,223,0,29,0,241,4,29,0,27,0,241,4,27,0,242,4,242,4,27,0,35,0,218,0,242,4,35,0,218,0,35,0,219,0,35,0,36,0,219,0,219,0,36,0,243,4,19,0,243,4,36,0,19,0,244,4,243,4,19,0,17,0,244,4,244,4,17,0,245,4,16,0,245,4,17,0,238,0,245,4,16,0,238,0,239,0,245,4,239,0,244,4,245,4,239,0,243,4,244,4,239,0,240,0,243,4,219,0,243,4,240,0,246,4,247,4,248,4,246,4,248,4,249,4,250,4,246,4,249,4,250,4,249,4,251,4,252,4,250,4,251,4,252,4,251,4,253,4,254,4,252,4,253,4,254,4,255,4,252,4,254,4,0,5,255,4,55,4,1,5,56,4,55,4,2,5,1,5,55,4,70,4,2,5,3,5,2,5,70,4,3,5,70,4,68,4,68,4,4,5,3,5,68,4,67,4,4,5,76,4,4,5,67,4,76,4,5,5,4,5,75,4,5,5,76,4,0,0,0,0,8,0,0,0,1,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,3,0,0,0,10,0,0,0,4,0,0,0,44,0,0,0,5,0,0,0,48,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,33,0,0,0,8,0,0,0,45,0,0,0,9,0,0,0,46,0,0,0,10,0,0,0,47,0,0,0,11,0,0,0,9,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,6,0,0,0,2,0,0,0,10,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,44,0,0,0,5,0,0,0,9,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,9,0,0,0,33,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,53,0,0,0,13,0,0,0,3,0,0,0,14,0,0,0,56,0,0,0,15,0,0,0,57,0,0,0,16,0,0,0,58,0,0,0,17,0,0,0,34,0,0,0,18,0,0,0,35,0,0,0,19,0,0,0,37,0,0,0,20,0,0,0,40,0,0,0,21,0,0,0,41,0,0,0,22,0,0,0,42,0,0,0,23,0,0,0,38,0,0,0,24,0,0,0,43,0,0,0,25,0,0,0,11,0,0,0,26,0,0,0,13,0,0,0,27,0,0,0,14,0,0,0,28,0,0,0,18,0,0,0,29,0,0,0,15,0,0,0,30,0,0,0,19,0,0,0,31,0,0,0,20,0,0,0,32,0,0,0,21,0,0,0,33,0,0,0,16,0,0,0,34,0,0,0,22,0,0,0,35,0,0,0,54,0,0,0,36,0,0,0,55,0,0,0,37,0,0,0,45,0,0,0,38,0,0,0,46,0,0,0,39,0,0,0,36,0,0,0,40,0,0,0,39,0,0,0,0,0,0,0,44,0,0,0,1,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,3,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,48,0,0,0,6,0,0,0,54,0,0,0,7,0,0,0,53,0,0,0,8,0,0,0,55,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,0,0,0,0,11,0,0,0,57,0,0,0,12,0,0,0,56,0,0,0,13,0,0,0,58,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,35,0,0,0,16,0,0,0,34,0,0,0,17,0,0,0,33,0,0,0,18,0,0,0,7,0,0,0,19,0,0,0,36,0,0,0,20,0,0,0,39,0,0,0,21,0,0,0,37,0,0,0,22,0,0,0,40,0,0,0,23,0,0,0,41,0,0,0,24,0,0,0,6,0,0,0,25,0,0,0,4,0,0,0,26,0,0,0,1,0,0,0,27,0,0,0,10,0,0,0,28,0,0,0,9,0,0,0,29,0,0,0]);fileData0.push.apply(fileData0,[47,0,0,0,30,0,0,0,11,0,0,0,31,0,0,0,13,0,0,0,32,0,0,0,14,0,0,0,33,0,0,0,18,0,0,0,34,0,0,0,22,0,0,0,35,0,0,0,21,0,0,0,36,0,0,0,19,0,0,0,37,0,0,0,15,0,0,0,38,0,0,0,20,0,0,0,39,0,0,0,16,0,0,0,40,0,0,0,38,0,0,0,41,0,0,0,42,0,0,0,42,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255]);Module["FS_createDataFile"]("/testbin","axe.dx90.vtx",fileData0,true,true)}if(Module["calledRun"]){runWithFS()}else{if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(runWithFS)}}))();var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=typeof window==="object";var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB;var ENVIRONMENT_IS_WORKER=typeof importScripts==="function";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=function print(x){process["stdout"].write(x+"\n")};if(!Module["printErr"])Module["printErr"]=function printErr(x){process["stderr"].write(x+"\n")};var nodeFS=require("fs");var nodePath=require("path");Module["read"]=function read(filename,binary){filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){return Module["read"](filename,true)};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}))}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.log(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type==="double"||type==="i64"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var __THREW__=0;var ABORT=false;var EXITSTATUS=0;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat;var tempI64,tempI64b;var tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var globalScope=this;function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){funcstr+="var stack = "+JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"="+convertCode.returnValue+";"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){funcstr+=JSsource["stackRestore"].body.replace("()","(stack)")+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["cwrap"]=cwrap;Module["ccall"]=ccall;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;function UTF16ToString(ptr){var i=0;var str="";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)return str;++i;str+=String.fromCharCode(codeUnit)}}Module["UTF16ToString"]=UTF16ToString;function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}Module["stringToUTF16"]=stringToUTF16;function lengthBytesUTF16(str){return str.length*2}Module["lengthBytesUTF16"]=lengthBytesUTF16;function UTF32ToString(ptr){var i=0;var str="";while(1){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)return str;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}}Module["UTF32ToString"]=UTF32ToString;function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}Module["stringToUTF32"]=stringToUTF32;function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}Module["lengthBytesUTF32"]=lengthBytesUTF32;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}var i=3;var basicTypes={"v":"void","b":"bool","c":"char","s":"short","i":"int","l":"long","f":"float","d":"double","w":"wchar_t","a":"signed char","h":"unsigned char","t":"unsigned short","j":"unsigned int","m":"unsigned long","x":"long long","y":"unsigned long long","z":"..."};var subs=[];var first=true;function dump(x){if(x)Module.print(x);Module.print(func);var pre="";for(var a=0;a<i;a++)pre+=" ";Module.print(pre+"^")}function parseNested(){i++;if(func[i]==="K")i++;var parts=[];while(func[i]!=="E"){if(func[i]==="S"){i++;var next=func.indexOf("_",i);var num=func.substring(i,next)||0;parts.push(subs[num]||"?");i=next+1;continue}if(func[i]==="C"){parts.push(parts[parts.length-1]);i+=2;continue}var size=parseInt(func.substr(i));var pre=size.toString().length;if(!size||!pre){i--;break}var curr=func.substr(i+pre,size);parts.push(curr);subs.push(curr);i+=pre+size}i++;return parts}function parse(rawList,limit,allowVoid){limit=limit||Infinity;var ret="",list=[];function flushList(){return"("+list.join(", ")+")"}var name;if(func[i]==="N"){name=parseNested().join("::");limit--;if(limit===0)return rawList?[name]:name}else{if(func[i]==="K"||first&&func[i]==="L")i++;var size=parseInt(func.substr(i));if(size){var pre=size.toString().length;name=func.substr(i+pre,size);i+=pre+size}}first=false;if(func[i]==="I"){i++;var iList=parse(true);var iRet=parse(true,1,true);ret+=iRet[0]+" "+name+"<"+iList.join(", ")+">"}else{ret=name}paramLoop:while(i<func.length&&limit-->0){var c=func[i++];if(c in basicTypes){list.push(basicTypes[c])}else{switch(c){case"P":list.push(parse(true,1,true)[0]+"*");break;case"R":list.push(parse(true,1,true)[0]+"&");break;case"L":{i++;var end=func.indexOf("E",i);var size=end-i;list.push(func.substr(i,size));i+=size+2;break};case"A":{var size=parseInt(func.substr(i));i+=size.toString().length;if(func[i]!=="_")throw"?";i++;list.push(parse(true,1,true)[0]+" ["+size+"]");break};case"E":break paramLoop;default:ret+="?"+c;break paramLoop}}}if(!allowVoid&&list.length===1&&list[0]==="void")list=[];if(rawList){if(ret){list.push(ret+"?")}return list}else{return ret+flushList()}}var parsed=func;try{if(func=="Object._main"||func=="_main"){return"main()"}if(typeof func==="number")func=Pointer_stringify(func);if(func[0]!=="_")return func;if(func[1]!=="_")return func;if(func[2]!=="Z")return func;switch(func[3]){case"n":return"operator new()";case"d":return"operator delete()"}parsed=parse()}catch(e){parsed+="?"}if(parsed.indexOf("?")>=0&&!hasLibcxxabi){Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling")}return parsed}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+TOTAL_MEMORY+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.")}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){Module.printErr("increasing TOTAL_MEMORY to "+totalMemory+" to be compliant with the asm.js spec (and given that TOTAL_STACK="+TOTAL_STACK+")");TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&!!(new Int32Array(1))["subarray"]&&!!(new Int32Array(1))["set"],"JS engine does not provide full typed array support");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,"Typed arrays 2 must be run on a little-endian system");Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=Module.addOnPreRun=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=Module.addOnInit=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=Module.addOnPreMain=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=Module.addOnExit=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=Module.addOnPostRun=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;var ASM_CONSTS=[];STATIC_BASE=8;STATICTOP=STATIC_BASE+1568;__ATINIT__.push();var memoryInitializer="mdlInfo.js.mem";var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);assert(tempDoublePtr%8==0);function copyTempFloat(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3]}function copyTempDouble(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3];HEAP8[tempDoublePtr+4]=HEAP8[ptr+4];HEAP8[tempDoublePtr+5]=HEAP8[ptr+5];HEAP8[tempDoublePtr+6]=HEAP8[ptr+6];HEAP8[tempDoublePtr+7]=HEAP8[ptr+7]}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var ___errno_state=0;function ___setErrNo(value){HEAP32[___errno_state>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null);if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.buffer.byteLength:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:"binary",canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var errored=false;var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:(function(flags){if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{return flags}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var _stdin=allocate(1,"i32*",ALLOC_STATIC);var _stdout=allocate(1,"i32*",ALLOC_STATIC);var _stderr=allocate(1,"i32*",ALLOC_STATIC);function _fflush(stream){}var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var accmode=flag&2097155;var perms=["r","w","rw"][accmode];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if((flags&2097155)!==0||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),getStreamFromPtr:(function(ptr){return FS.streams[ptr-1]}),getPtrForStream:(function(stream){return stream?stream.fd+1:0}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}var mounts=FS.getMounts(FS.root.mount);var completed=0;function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=mounts.length){callback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){if(err===ERRNO_CODES.EISDIR)err=ERRNO_CODES.EPERM;throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(lookup.node.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";opts.encoding=opts.encoding||"utf8";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding==="utf8"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding==="binary"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(){return 0})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");HEAP32[_stdin>>2]=FS.getPtrForStream(stdin);assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");HEAP32[_stdout>>2]=FS.getPtrForStream(stdout);assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");HEAP32[_stderr>>2]=FS.getPtrForStream(stderr);assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices()}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperty(lazyArray,"length",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})});Object.defineProperty(lazyArray,"chunkSize",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperty(node,"usedBytes",{get:(function(){return this.contents.length})});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;function processData(byteArray){function finish(byteArray){if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency("cp "+fullname)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency("cp "+fullname)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency("cp "+fullname);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};function _mkport(){throw"TODO"}var SOCKFS={mount:(function(mount){Module["websocket"]=Module["websocket"]&&"object"===typeof Module["websocket"]?Module["websocket"]:{};Module["websocket"]._callbacks={};Module["websocket"]["on"]=(function(event,callback){if("function"===typeof callback){this._callbacks[event]=callback}return this});Module["websocket"].emit=(function(event,param){if("function"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}});return FS.createNode(null,"/",16384|511,0)}),createSocket:(function(family,type,protocol){var streaming=type==1;if(protocol){assert(streaming==(protocol==6))}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:FS.modeStringToFlags("r+"),seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock}),getSocket:(function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock}),stream_ops:{poll:(function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)}),ioctl:(function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)}),read:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length}),write:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)}),close:(function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)})},nextname:(function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return"socket["+SOCKFS.nextname.current++ +"]"}),websocket_sock_ops:{createPeer:(function(sock,addr,port){var ws;if(typeof addr==="object"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);if(!result){throw new Error("WebSocket URL must be in the format ws(s)://address:port")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module["websocket"]&&"object"===typeof Module["websocket"];var url="ws:#".replace("#","//");if(runtimeConfig){if("string"===typeof Module["websocket"]["url"]){url=Module["websocket"]["url"]}}if(url==="ws://"||url==="wss://"){var parts=addr.split("/");url=url+parts[0]+":"+port+"/"+parts.slice(1).join("/")}var subProtocols="binary";if(runtimeConfig){if("string"===typeof Module["websocket"]["subprotocol"]){subProtocols=Module["websocket"]["subprotocol"]}}subProtocols=subProtocols.replace(/^ +| +$/g,"").split(/ *, */);var opts=ENVIRONMENT_IS_NODE?{"protocol":subProtocols.toString()}:subProtocols;var WebSocket=ENVIRONMENT_IS_NODE?require("ws"):window["WebSocket"];ws=new WebSocket(url,opts);ws.binaryType="arraybuffer"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!=="undefined"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,"p".charCodeAt(0),"o".charCodeAt(0),"r".charCodeAt(0),"t".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer}),getPeer:(function(sock,addr,port){return sock.peers[addr+":"+port]}),addPeer:(function(sock,peer){sock.peers[peer.addr+":"+peer.port]=peer}),removePeer:(function(sock,peer){delete sock.peers[peer.addr+":"+peer.port]}),handlePeerEvents:(function(sock,peer){var first=true;var handleOpen=(function(){Module["websocket"].emit("open",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}});function handleMessage(data){assert(typeof data!=="string"&&data.byteLength!==undefined);data=new Uint8Array(data);var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]==="p".charCodeAt(0)&&data[5]==="o".charCodeAt(0)&&data[6]==="r".charCodeAt(0)&&data[7]==="t".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module["websocket"].emit("message",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on("open",handleOpen);peer.socket.on("message",(function(data,flags){if(!flags.binary){return}handleMessage((new Uint8Array(data)).buffer)}));peer.socket.on("close",(function(){Module["websocket"].emit("close",sock.stream.fd)}));peer.socket.on("error",(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])}))}else{peer.socket.onopen=handleOpen;peer.socket.onclose=(function(){Module["websocket"].emit("close",sock.stream.fd)});peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])})}}),poll:(function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask}),ioctl:(function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return ERRNO_CODES.EINVAL}}),close:(function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0}),bind:(function(sock,addr,port){if(typeof sock.saddr!=="undefined"||typeof sock.sport!=="undefined"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}sock.saddr=addr;sock.sport=port||_mkport();if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==ERRNO_CODES.EOPNOTSUPP)throw e}}}),connect:(function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(typeof sock.daddr!=="undefined"&&typeof sock.dport!=="undefined"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EALREADY)}else{throw new FS.ErrnoError(ERRNO_CODES.EISCONN)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS)}),listen:(function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var WebSocketServer=require("ws").Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module["websocket"].emit("listen",sock.stream.fd);sock.server.on("connection",(function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module["websocket"].emit("connection",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module["websocket"].emit("connection",sock.stream.fd)}}));sock.server.on("closed",(function(){Module["websocket"].emit("close",sock.stream.fd);sock.server=null}));sock.server.on("error",(function(error){sock.error=ERRNO_CODES.EHOSTUNREACH;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"EHOSTUNREACH: Host is unreachable"])}))}),accept:(function(listensock){if(!listensock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock}),getname:(function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}}),sendmsg:(function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var data;if(buffer instanceof Array||buffer instanceof ArrayBuffer){data=buffer.slice(offset,offset+length)}else{data=buffer.buffer.slice(buffer.byteOffset+offset,buffer.byteOffset+offset+length)}if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),recvmsg:(function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res})}};function _recv(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _read(fd,buf,len)}function _pread(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _read(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fread(ptr,size,nitems,stream){var bytesToRead=nitems*size;if(bytesToRead==0){return 0}var bytesRead=0;var streamObj=FS.getStreamFromPtr(stream);if(!streamObj){___setErrNo(ERRNO_CODES.EBADF);return 0}while(streamObj.ungotten.length&&bytesToRead>0){HEAP8[ptr++>>0]=streamObj.ungotten.pop();bytesToRead--;bytesRead++}var err=_read(streamObj.fd,ptr,bytesToRead);if(err==-1){if(streamObj)streamObj.error=true;return 0}bytesRead+=err;if(bytesRead<bytesToRead)streamObj.eof=true;return bytesRead/size|0}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall("vi",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm["setTempRet0"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm["setTempRet0"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm["setTempRet0"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm["setTempRet0"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}Module["_memset"]=_memset;function _abort(){Module["abort"]()}function _send(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _write(fd,buf,len)}function _pwrite(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _write(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fileno(stream){stream=FS.getStreamFromPtr(stream);if(!stream)return-1;return stream.fd}function _fwrite(ptr,size,nitems,stream){var bytesToWrite=nitems*size;if(bytesToWrite==0)return 0;var fd=_fileno(stream);var bytesWritten=_write(fd,ptr,bytesToWrite);if(bytesWritten==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return 0}else{return bytesWritten/size|0}}Module["_strlen"]=_strlen;function __reallyNegative(x){return x<0||x===0&&1/x===-Infinity}function __formatString(format,varargs){assert((varargs&7)===0);var textIndex=format;var argIndex=0;function getNextArg(type){var ret;argIndex=Runtime.prepVararg(argIndex,type);if(type==="double"){ret=(HEAP32[tempDoublePtr>>2]=HEAP32[varargs+argIndex>>2],HEAP32[tempDoublePtr+4>>2]=HEAP32[varargs+(argIndex+4)>>2],+HEAPF64[tempDoublePtr>>3]);argIndex+=8}else if(type=="i64"){ret=[HEAP32[varargs+argIndex>>2],HEAP32[varargs+(argIndex+4)>>2]];argIndex+=8}else{assert((argIndex&3)===0);type="i32";ret=HEAP32[varargs+argIndex>>2];argIndex+=4}return ret}var ret=[];var curr,next,currArg;while(1){var startTextIndex=textIndex;curr=HEAP8[textIndex>>0];if(curr===0)break;next=HEAP8[textIndex+1>>0];if(curr==37){var flagAlwaysSigned=false;var flagLeftAlign=false;var flagAlternative=false;var flagZeroPad=false;var flagPadSign=false;flagsLoop:while(1){switch(next){case 43:flagAlwaysSigned=true;break;case 45:flagLeftAlign=true;break;case 35:flagAlternative=true;break;case 48:if(flagZeroPad){break flagsLoop}else{flagZeroPad=true;break};case 32:flagPadSign=true;break;default:break flagsLoop}textIndex++;next=HEAP8[textIndex+1>>0]}var width=0;if(next==42){width=getNextArg("i32");textIndex++;next=HEAP8[textIndex+1>>0]}else{while(next>=48&&next<=57){width=width*10+(next-48);textIndex++;next=HEAP8[textIndex+1>>0]}}var precisionSet=false,precision=-1;if(next==46){precision=0;precisionSet=true;textIndex++;next=HEAP8[textIndex+1>>0];if(next==42){precision=getNextArg("i32");textIndex++}else{while(1){var precisionChr=HEAP8[textIndex+1>>0];if(precisionChr<48||precisionChr>57)break;precision=precision*10+(precisionChr-48);textIndex++}}next=HEAP8[textIndex+1>>0]}if(precision<0){precision=6;precisionSet=false}var argSize;switch(String.fromCharCode(next)){case"h":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==104){textIndex++;argSize=1}else{argSize=2}break;case"l":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==108){textIndex++;argSize=8}else{argSize=4}break;case"L":case"q":case"j":argSize=8;break;case"z":case"t":case"I":argSize=4;break;default:argSize=null}if(argSize)textIndex++;next=HEAP8[textIndex+1>>0];switch(String.fromCharCode(next)){case"d":case"i":case"u":case"o":case"x":case"X":case"p":{var signed=next==100||next==105;argSize=argSize||4;var currArg=getNextArg("i"+argSize*8);var origArg=currArg;var argText;if(argSize==8){currArg=Runtime.makeBigInt(currArg[0],currArg[1],next==117)}if(argSize<=4){var limit=Math.pow(256,argSize)-1;currArg=(signed?reSign:unSign)(currArg&limit,argSize*8)}var currAbsArg=Math.abs(currArg);var prefix="";if(next==100||next==105){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],null);else argText=reSign(currArg,8*argSize,1).toString(10)}else if(next==117){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],true);else argText=unSign(currArg,8*argSize,1).toString(10);currArg=Math.abs(currArg)}else if(next==111){argText=(flagAlternative?"0":"")+currAbsArg.toString(8)}else if(next==120||next==88){prefix=flagAlternative&&currArg!=0?"0x":"";if(argSize==8&&i64Math){if(origArg[1]){argText=(origArg[1]>>>0).toString(16);var lower=(origArg[0]>>>0).toString(16);while(lower.length<8)lower="0"+lower;argText+=lower}else{argText=(origArg[0]>>>0).toString(16)}}else if(currArg<0){currArg=-currArg;argText=(currAbsArg-1).toString(16);var buffer=[];for(var i=0;i<argText.length;i++){buffer.push((15-parseInt(argText[i],16)).toString(16))}argText=buffer.join("");while(argText.length<argSize*2)argText="f"+argText}else{argText=currAbsArg.toString(16)}if(next==88){prefix=prefix.toUpperCase();argText=argText.toUpperCase()}}else if(next==112){if(currAbsArg===0){argText="(nil)"}else{prefix="0x";argText=currAbsArg.toString(16)}}if(precisionSet){while(argText.length<precision){argText="0"+argText}}if(currArg>=0){if(flagAlwaysSigned){prefix="+"+prefix}else if(flagPadSign){prefix=" "+prefix}}if(argText.charAt(0)=="-"){prefix="-"+prefix;argText=argText.substr(1)}while(prefix.length+argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad){argText="0"+argText}else{prefix=" "+prefix}}}argText=prefix+argText;argText.split("").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case"f":case"F":case"e":case"E":case"g":case"G":{var currArg=getNextArg("double");var argText;if(isNaN(currArg)){argText="nan";flagZeroPad=false}else if(!isFinite(currArg)){argText=(currArg<0?"-":"")+"inf";flagZeroPad=false}else{var isGeneral=false;var effectivePrecision=Math.min(precision,20);if(next==103||next==71){isGeneral=true;precision=precision||1;var exponent=parseInt(currArg.toExponential(effectivePrecision).split("e")[1],10);if(precision>exponent&&exponent>=-4){next=(next==103?"f":"F").charCodeAt(0);precision-=exponent+1}else{next=(next==103?"e":"E").charCodeAt(0);precision--}effectivePrecision=Math.min(precision,20)}if(next==101||next==69){argText=currArg.toExponential(effectivePrecision);if(/[eE][-+]\d$/.test(argText)){argText=argText.slice(0,-1)+"0"+argText.slice(-1)}}else if(next==102||next==70){argText=currArg.toFixed(effectivePrecision);if(currArg===0&&__reallyNegative(currArg)){argText="-"+argText}}var parts=argText.split("e");if(isGeneral&&!flagAlternative){while(parts[0].length>1&&parts[0].indexOf(".")!=-1&&(parts[0].slice(-1)=="0"||parts[0].slice(-1)==".")){parts[0]=parts[0].slice(0,-1)}}else{if(flagAlternative&&argText.indexOf(".")==-1)parts[0]+=".";while(precision>effectivePrecision++)parts[0]+="0"}argText=parts[0]+(parts.length>1?"e"+parts[1]:"");if(next==69)argText=argText.toUpperCase();if(currArg>=0){if(flagAlwaysSigned){argText="+"+argText}else if(flagPadSign){argText=" "+argText}}}while(argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad&&(argText[0]=="-"||argText[0]=="+")){argText=argText[0]+"0"+argText.slice(1)}else{argText=(flagZeroPad?"0":" ")+argText}}}if(next<97)argText=argText.toUpperCase();argText.split("").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case"s":{var arg=getNextArg("i8*");var argLength=arg?_strlen(arg):"(null)".length;if(precisionSet)argLength=Math.min(argLength,precision);if(!flagLeftAlign){while(argLength<width--){ret.push(32)}}if(arg){for(var i=0;i<argLength;i++){ret.push(HEAPU8[arg++>>0])}}else{ret=ret.concat(intArrayFromString("(null)".substr(0,argLength),true))}if(flagLeftAlign){while(argLength<width--){ret.push(32)}}break};case"c":{if(flagLeftAlign)ret.push(getNextArg("i8"));while(--width>0){ret.push(32)}if(!flagLeftAlign)ret.push(getNextArg("i8"));break};case"n":{var ptr=getNextArg("i32*");HEAP32[ptr>>2]=ret.length;break};case"%":{ret.push(curr);break};default:{for(var i=startTextIndex;i<textIndex+2;i++){ret.push(HEAP8[i>>0])}}}textIndex+=2}else{ret.push(curr);textIndex+=1}}return ret}function _fprintf(stream,format,varargs){var result=__formatString(format,varargs);var stack=Runtime.stackSave();var ret=_fwrite(allocate(result,"i8",ALLOC_STACK),1,result.length,stream);Runtime.stackRestore(stack);return ret}function _printf(format,varargs){var stdout=HEAP32[_stdout>>2];return _fprintf(stdout,format,varargs)}function _open(path,oflag,varargs){var mode=HEAP32[varargs>>2];path=Pointer_stringify(path);try{var stream=FS.open(path,oflag,mode);return stream.fd}catch(e){FS.handleFSError(e);return-1}}function _fopen(filename,mode){var flags;mode=Pointer_stringify(mode);if(mode[0]=="r"){if(mode.indexOf("+")!=-1){flags=2}else{flags=0}}else if(mode[0]=="w"){if(mode.indexOf("+")!=-1){flags=2}else{flags=1}flags|=64;flags|=512}else if(mode[0]=="a"){if(mode.indexOf("+")!=-1){flags=2}else{flags=1}flags|=64;flags|=1024}else{___setErrNo(ERRNO_CODES.EINVAL);return 0}var fd=_open(filename,flags,allocate([511,0,0,0],"i32",ALLOC_STACK));return fd===-1?0:FS.getPtrForStream(FS.getStream(fd))}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;function _fputc(c,stream){var chr=unSign(c&255);HEAP8[_fputc.ret>>0]=chr;var fd=_fileno(stream);var ret=_write(fd,_fputc.ret,1);if(ret==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return-1}else{return chr}}function _putchar(c){return _fputc(c,HEAP32[_stdout>>2])}function _fputs(s,stream){var fd=_fileno(stream);return _write(fd,s,_strlen(s))}function _puts(s){var stdout=HEAP32[_stdout>>2];var ret=_fputs(s,stdout);if(ret<0){return ret}else{var newlineRet=_fputc(10,stdout);return newlineRet<0?-1:ret+1}}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}function _lseek(fildes,offset,whence){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{return FS.llseek(stream,offset,whence)}catch(e){FS.handleFSError(e);return-1}}function _fseek(stream,offset,whence){var fd=_fileno(stream);var ret=_lseek(fd,offset,whence);if(ret==-1){return-1}stream=FS.getStreamFromPtr(stream);stream.eof=false;return 0}function ___errno_location(){return ___errno_state}function _ftell(stream){stream=FS.getStreamFromPtr(stream);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}if(FS.isChrdev(stream.node.mode)){___setErrNo(ERRNO_CODES.ESPIPE);return-1}else{return stream.position}}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){setTimeout(Browser.mainLoop.runner,value)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module["noExitRuntime"]=true;assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}if(Browser.mainLoop.method==="timeout"&&Module.ctx){Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");Browser.mainLoop.method=""}Browser.mainLoop.runIter((function(){if(typeof arg!=="undefined"){Runtime.dynCall("vi",func,[arg])}else{Runtime.dynCall("v",func)}}));if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"SimulateInfiniteLoop"}}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}}),runIter:(function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()})},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){Runtime.warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);var canvas=Module["canvas"];function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===canvas||document["mozPointerLockElement"]===canvas||document["webkitPointerLockElement"]===canvas||document["msPointerLockElement"]===canvas}if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||(function(){});canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",(function(ev){if(!Browser.pointerLock&&canvas.requestPointerLock){canvas.requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}canvas.style.backgroundColor="black"}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;if(typeof Browser.vrDevice==="undefined")Browser.vrDevice=null;var canvas=Module["canvas"];function fullScreenChange(){Browser.isFullScreen=false;var canvasContainer=canvas.parentNode;if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.cancelFullScreen=document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||document["msExitFullscreen"]||document["exitFullscreen"]||(function(){});canvas.cancelFullScreen=canvas.cancelFullScreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullScreen=true;if(Browser.resizeCanvas)Browser.setFullScreenCanvasSize()}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas)Browser.setWindowedCanvasSize()}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullScreen);Browser.updateCanvasDimensions(canvas)}if(!Browser.fullScreenHandlersInstalled){Browser.fullScreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullScreenChange,false);document.addEventListener("mozfullscreenchange",fullScreenChange,false);document.addEventListener("webkitfullscreenchange",fullScreenChange,false);document.addEventListener("MSFullscreenChange",fullScreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullScreen=canvasContainer["requestFullScreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullScreen"]?(function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null);if(vrDevice){canvasContainer.requestFullScreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullScreen()}}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module["noExitRuntime"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module["noExitRuntime"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)}),getMovementX:(function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0}),getMovementY:(function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail;break;case"mousewheel":delta=event.wheelDelta;break;case"wheel":delta=event["deltaY"];break;default:throw"unrecognized mouse wheel event: "+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){Browser.lastTouches[touch.identifier]=Browser.touches[touch.identifier];Browser.touches[touch.identifier]={x:adjustedX,y:adjustedY}}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),xhrLoad:(function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)}),asyncLoad:(function(url,onload,onerror,noRunDep){Browser.xhrLoad(url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(!noRunDep)removeRunDependency("al "+url)}),(function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}}));if(!noRunDep)addRunDependency("al "+url)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags|8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags&~8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module["_malloc"]=_malloc;function ___cxa_allocate_exception(size){return _malloc(size)}FS.staticInit();__ATINIT__.unshift({func:(function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()})});__ATMAIN__.push({func:(function(){FS.ignorePermissions=false})});__ATEXIT__.push({func:(function(){FS.quit()})});Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;___errno_state=Runtime.staticAlloc(4);HEAP32[___errno_state>>2]=0;__ATINIT__.unshift({func:(function(){TTY.init()})});__ATEXIT__.push({func:(function(){TTY.shutdown()})});if(ENVIRONMENT_IS_NODE){var fs=require("fs");var NODEJS_PATH=require("path");NODEFS.staticInit()}__ATINIT__.push({func:(function(){SOCKFS.root=FS.mount(SOCKFS,{},null)})});_fputc.ret=allocate([0],"i8",ALLOC_STATIC);Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};Module["createContext"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,"TOTAL_MEMORY not big enough for stack");function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"invoke_iiii":invoke_iiii,"invoke_viiiii":invoke_viiiii,"invoke_vi":invoke_vi,"invoke_ii":invoke_ii,"invoke_v":invoke_v,"invoke_viiiiii":invoke_viiiiii,"invoke_viiii":invoke_viiii,"_send":_send,"_fread":_fread,"_lseek":_lseek,"___setErrNo":___setErrNo,"_emscripten_set_main_loop_timing":_emscripten_set_main_loop_timing,"___cxa_allocate_exception":___cxa_allocate_exception,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"_fflush":_fflush,"_pwrite":_pwrite,"_open":_open,"_sbrk":_sbrk,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_fileno":_fileno,"___resumeException":___resumeException,"___cxa_find_matching_catch":___cxa_find_matching_catch,"_sysconf":_sysconf,"_putchar":_putchar,"_fseek":_fseek,"_pread":_pread,"_puts":_puts,"_mkport":_mkport,"__reallyNegative":__reallyNegative,"_write":_write,"_ftell":_ftell,"___errno_location":___errno_location,"_recv":_recv,"_printf":_printf,"___cxa_throw":___cxa_throw,"_read":_read,"_fputc":_fputc,"_emscripten_set_main_loop":_emscripten_set_main_loop,"_abort":_abort,"_fwrite":_fwrite,"_time":_time,"_fprintf":_fprintf,"__formatString":__formatString,"_fputs":_fputs,"_fopen":_fopen,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=0;var n=0;var o=0;var p=0;var q=global.NaN,r=global.Infinity;var s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0.0;var B=0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=global.Math.floor;var M=global.Math.abs;var N=global.Math.sqrt;var O=global.Math.pow;var P=global.Math.cos;var Q=global.Math.sin;var R=global.Math.tan;var S=global.Math.acos;var T=global.Math.asin;var U=global.Math.atan;var V=global.Math.atan2;var W=global.Math.exp;var X=global.Math.log;var Y=global.Math.ceil;var Z=global.Math.imul;var _=global.Math.min;var $=global.Math.clz32;var aa=env.abort;var ba=env.assert;var ca=env.invoke_iiii;var da=env.invoke_viiiii;var ea=env.invoke_vi;var fa=env.invoke_ii;var ga=env.invoke_v;var ha=env.invoke_viiiiii;var ia=env.invoke_viiii;var ja=env._send;var ka=env._fread;var la=env._lseek;var ma=env.___setErrNo;var na=env._emscripten_set_main_loop_timing;var oa=env.___cxa_allocate_exception;var pa=env.__ZSt18uncaught_exceptionv;var qa=env._fflush;var ra=env._pwrite;var sa=env._open;var ta=env._sbrk;var ua=env._emscripten_memcpy_big;var va=env._fileno;var wa=env.___resumeException;var xa=env.___cxa_find_matching_catch;var ya=env._sysconf;var za=env._putchar;var Aa=env._fseek;var Ba=env._pread;var Ca=env._puts;var Da=env._mkport;var Ea=env.__reallyNegative;var Fa=env._write;var Ga=env._ftell;var Ha=env.___errno_location;var Ia=env._recv;var Ja=env._printf;var Ka=env.___cxa_throw;var La=env._read;var Ma=env._fputc;var Na=env._emscripten_set_main_loop;var Oa=env._abort;var Pa=env._fwrite;var Qa=env._time;var Ra=env._fprintf;var Sa=env.__formatString;var Ta=env._fputs;var Ua=env._fopen;var Va=0.0;
// EMSCRIPTEN_START_FUNCS
function bb(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function cb(){return i|0}function db(a){a=a|0;i=a}function eb(a,b){a=a|0;b=b|0;if(!m){m=a;n=b}}function fb(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function gb(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function hb(a){a=a|0;B=a}function ib(){return B|0}function jb(){var a=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;a=i;i=i+160|0;f=a+152|0;g=a+144|0;h=a+136|0;j=a+128|0;k=a+120|0;l=a+112|0;m=a+104|0;n=a+96|0;o=a+88|0;p=a+80|0;q=a+72|0;r=a+64|0;s=a+56|0;t=a+48|0;u=a+40|0;v=a+32|0;w=a+24|0;x=a+16|0;y=a+8|0;z=a;Ca(480)|0;c[z>>2]=4;c[z+4>>2]=4;Ja(8,z|0)|0;Ca(504)|0;c[y>>2]=408;c[y+4>>2]=408;Ja(8,y|0)|0;Ca(536)|0;y=Ua(40,64)|0;Aa(y|0,0,2)|0;z=Ga(y|0)|0;Aa(y|0,0,0)|0;c[x>>2]=z;Ja(72,x|0)|0;x=Ib(z)|0;if(!(ka(x|0,z|0,z|0,y|0)|0)){Ca(664)|0;A=1;i=a;return A|0}c[w>>2]=x;Ja(96,w|0)|0;c[v>>2]=40;Ja(136,v|0)|0;c[u>>2]=d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24;Ja(152,u|0)|0;u=x+20|0;c[t>>2]=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;Ja(168,t|0)|0;t=x+28|0;c[s>>2]=d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24;Ja(184,s|0)|0;do if((d[t>>0]|d[t+1>>0]<<8|d[t+2>>0]<<16|d[t+3>>0]<<24|0)==1){s=x+32|0;u=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;s=x+u|0;c[r>>2]=d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24;Ja(208,r|0)|0;if((d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24|0)!=1){Ca(600)|0;break}s=x+(u+4)|0;v=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)+u|0;u=x+v|0;if((d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24|0)>0){s=x+(v+4)|0;w=0;y=0;while(1){z=(d[s>>0]|d[s+1>>0]<<8|d[s+2>>0]<<16|d[s+3>>0]<<24)+v|0;B=x+z+(y*12|0)|0;C=d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24;c[q>>2]=y;c[q+4>>2]=C;Ja(232,q|0)|0;if(!y)if((d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24|0)>0){C=x+(z+4)|0;z=w;D=0;while(1){E=B+(d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)|0;F=E+(D*9|0)|0;G=d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24;c[p>>2]=D;c[p+4>>2]=G;Ja(256,p|0)|0;if((d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24|0)>0){G=E+(D*9|0)+4|0;E=z;H=0;while(1){I=F+(d[G>>0]|d[G+1>>0]<<8|d[G+2>>0]<<16|d[G+3>>0]<<24)|0;J=I+(H*25|0)|0;c[o>>2]=H;Ja(296,o|0)|0;c[n>>2]=d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24;Ja(320,n|0)|0;K=I+(H*25|0)+8|0;c[m>>2]=d[K>>0]|d[K+1>>0]<<8|d[K+2>>0]<<16|d[K+3>>0]<<24;Ja(344,m|0)|0;L=I+(H*25|0)+16|0;c[l>>2]=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24;Ja(368,l|0)|0;c[k>>2]=d[I+(H*25|0)+24>>0];Ja(392,k|0)|0;L=I+(H*25|0)+20|0;M=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24;L=J+M|0;N=J+(M+8)|0;c[j>>2]=d[N>>0]|d[N+1>>0]<<8|d[N+2>>0]<<16|d[N+3>>0]<<24;Ja(416,j|0)|0;c[h>>2]=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24;Ja(440,h|0)|0;c[g>>2]=d[J+(M+18)>>0];Ja(392,g|0)|0;if((E|0)>0)O=E;else{M=d[K>>0]|d[K+1>>0]<<8|d[K+2>>0]<<16|d[K+3>>0]<<24;K=lb(M>>>0>2147483647?-1:M<<1)|0;L=I+(H*25|0)+4|0;N=J+(d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24)|0;L=I+(H*25|0)+12|0;I=J+(d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24)|0;L=(M|0)>0;if(L){J=M+-1|0;P=0;while(1){Q=N+((e[I+(P<<1)>>1]|0)*9|0)+4|0;b[K+(P<<1)>>1]=d[Q>>0]|d[Q+1>>0]<<8;if((P|0)==(J|0))break;else P=P+1|0}if(L){P=M+-1|0;J=0;while(1){c[f>>2]=e[K+(J<<1)>>1];Ja(472,f|0)|0;if((J|0)==(P|0))break;else J=J+1|0}}}za(10)|0;mb(K);O=M}H=H+1|0;if((H|0)>=(d[F>>0]|d[F+1>>0]<<8|d[F+2>>0]<<16|d[F+3>>0]<<24|0)){R=O;break}else E=O}}else R=z;D=D+1|0;if((D|0)>=(d[B>>0]|d[B+1>>0]<<8|d[B+2>>0]<<16|d[B+3>>0]<<24|0)){S=R;break}else z=R}}else S=w;else{Ca(632)|0;S=w}y=y+1|0;if((y|0)>=(d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24|0))break;else w=S}}}else Ca(560)|0;while(0);Jb(x);A=0;i=a;return A|0}function kb(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){a=Ib(b)|0;if(a){d=a;e=6;break}a=qb()|0;if(!a){e=5;break}_a[a&0]()}if((e|0)==5){b=oa(4)|0;c[b>>2]=696;Ka(b|0,744,1)}else if((e|0)==6)return d|0;return 0}function lb(a){a=a|0;return kb(a)|0}function mb(a){a=a|0;Jb(a);return}function nb(a){a=a|0;return}function ob(a){a=a|0;mb(a);return}function pb(a){a=a|0;return 712}function qb(){var a=0;a=c[190]|0;c[190]=a+0;return a|0}function rb(a){a=a|0;return}function sb(a){a=a|0;return}function tb(a){a=a|0;return}function ub(a){a=a|0;return}function vb(a){a=a|0;return}function wb(a){a=a|0;mb(a);return}function xb(a){a=a|0;mb(a);return}function yb(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+64|0;f=e;if((a|0)!=(b|0))if((b|0)!=0?(g=Cb(b,856,912,0)|0,(g|0)!=0):0){b=f+0|0;h=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;ab[c[(c[g>>2]|0)+28>>2]&3](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];j=1}else j=0;k=j}else k=0;else k=1;i=e;return k|0}function zb(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=d+16|0;g=c[b>>2]|0;do if(g){if((g|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}h=d+24|0;if((c[h>>2]|0)==2)c[h>>2]=f}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function Ab(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((a|0)==(c[b+8>>2]|0))zb(0,b,d,e);return}function Bb(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((a|0)==(c[b+8>>2]|0))zb(0,b,d,e);else{f=c[a+8>>2]|0;ab[c[(c[f>>2]|0)+28>>2]&3](f,b,d,e)}return}function Cb(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+-8>>2]|0)|0;m=c[k+-4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;k=j+28|0;n=j+32|0;o=j+40|0;p=(m|0)==(f|0);q=g+0|0;r=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(r|0));b[g+36>>1]=0;a[g+38>>0]=0;do if(p){c[j+48>>2]=1;$a[c[(c[f>>2]|0)+20>>2]&3](f,j,l,l,1,0);s=(c[d>>2]|0)==1?l:0}else{Xa[c[(c[m>>2]|0)+24>>2]&3](m,j,l,1,0);q=c[j+36>>2]|0;if(!q){s=(c[o>>2]|0)==1&(c[k>>2]|0)==1&(c[n>>2]|0)==1?c[e>>2]|0:0;break}else if((q|0)!=1){s=0;break}if((c[d>>2]|0)!=1?!((c[o>>2]|0)==0&(c[k>>2]|0)==1&(c[n>>2]|0)==1):0){s=0;break}s=c[g>>2]|0}while(0);i=h;return s|0}function Db(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;h=c[b>>2]|0;if(!h){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;break}h=d+24|0;b=c[h>>2]|0;if((b|0)==2){c[h>>2]=g;i=g}else i=b;if((i|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function Eb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;Xa[c[(c[h>>2]|0)+24>>2]&3](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;j=d+52|0;a[j>>0]=0;k=d+53|0;a[k>>0]=0;l=c[b+8>>2]|0;$a[c[(c[l>>2]|0)+20>>2]&3](l,d,e,e,1,g);if(a[k>>0]|0){if(!(a[j>>0]|0)){m=1;n=13}}else{m=0;n=13}do if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(m)break}else n=16;if((n|0)==16?m:0)break;c[i>>2]=4;break a}while(0);c[i>>2]=3;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Fb(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(g=d+28|0,(c[g>>2]|0)!=1):0)c[g>>2]=f}else if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(g=d+20|0,(c[g>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[g>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Gb(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if((a|0)==(c[b+8>>2]|0))Db(0,b,d,e,f);else{h=c[a+8>>2]|0;$a[c[(c[h>>2]|0)+20>>2]&3](h,b,d,e,f,g)}return}function Hb(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((a|0)==(c[b+8>>2]|0))Db(0,b,d,e,f);return}function Ib(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ua=0,va=0,wa=0,xa=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Pa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0;do if(a>>>0<245){if(a>>>0<11)b=16;else b=a+11&-8;d=b>>>3;e=c[266]|0;f=e>>>d;if(f&3){g=(f&1^1)+d|0;h=g<<1;i=1104+(h<<2)|0;j=1104+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do if((i|0)!=(l|0)){if(l>>>0<(c[270]|0)>>>0)Oa();m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else Oa()}else c[266]=e&~(1<<g);while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}j=c[268]|0;if(b>>>0>j>>>0){if(f){l=2<<d;i=f<<d&(l|0-l);l=(i&0-i)+-1|0;i=l>>>12&16;m=l>>>i;l=m>>>5&8;o=m>>>l;m=o>>>2&4;p=o>>>m;o=p>>>1&2;q=p>>>o;p=q>>>1&1;r=(l|i|m|o|p)+(q>>>p)|0;p=r<<1;q=1104+(p<<2)|0;o=1104+(p+2<<2)|0;p=c[o>>2]|0;m=p+8|0;i=c[m>>2]|0;do if((q|0)!=(i|0)){if(i>>>0<(c[270]|0)>>>0)Oa();l=i+12|0;if((c[l>>2]|0)==(p|0)){c[l>>2]=q;c[o>>2]=i;s=c[268]|0;break}else Oa()}else{c[266]=e&~(1<<r);s=j}while(0);j=r<<3;e=j-b|0;c[p+4>>2]=b|3;i=p+b|0;c[p+(b|4)>>2]=e|1;c[p+j>>2]=e;if(s){j=c[271]|0;o=s>>>3;q=o<<1;d=1104+(q<<2)|0;f=c[266]|0;k=1<<o;if(f&k){o=1104+(q+2<<2)|0;h=c[o>>2]|0;if(h>>>0<(c[270]|0)>>>0)Oa();else{t=o;u=h}}else{c[266]=f|k;t=1104+(q+2<<2)|0;u=d}c[t>>2]=j;c[u+12>>2]=j;c[j+8>>2]=u;c[j+12>>2]=d}c[268]=e;c[271]=i;n=m;return n|0}i=c[267]|0;if(i){e=(i&0-i)+-1|0;i=e>>>12&16;d=e>>>i;e=d>>>5&8;j=d>>>e;d=j>>>2&4;q=j>>>d;j=q>>>1&2;k=q>>>j;q=k>>>1&1;f=c[1368+((e|i|d|j|q)+(k>>>q)<<2)>>2]|0;q=(c[f+4>>2]&-8)-b|0;k=f;j=f;while(1){f=c[k+16>>2]|0;if(!f){d=c[k+20>>2]|0;if(!d){v=q;w=j;break}else x=d}else x=f;f=(c[x+4>>2]&-8)-b|0;d=f>>>0<q>>>0;q=d?f:q;k=x;j=d?x:j}j=c[270]|0;if(w>>>0<j>>>0)Oa();k=w+b|0;if(w>>>0>=k>>>0)Oa();q=c[w+24>>2]|0;m=c[w+12>>2]|0;do if((m|0)==(w|0)){p=w+20|0;r=c[p>>2]|0;if(!r){d=w+16|0;f=c[d>>2]|0;if(!f){y=0;break}else{z=f;A=d}}else{z=r;A=p}while(1){p=z+20|0;r=c[p>>2]|0;if(r){z=r;A=p;continue}p=z+16|0;r=c[p>>2]|0;if(!r){B=z;C=A;break}else{z=r;A=p}}if(C>>>0<j>>>0)Oa();else{c[C>>2]=0;y=B;break}}else{p=c[w+8>>2]|0;if(p>>>0<j>>>0)Oa();r=p+12|0;if((c[r>>2]|0)!=(w|0))Oa();d=m+8|0;if((c[d>>2]|0)==(w|0)){c[r>>2]=m;c[d>>2]=p;y=m;break}else Oa()}while(0);do if(q){m=c[w+28>>2]|0;j=1368+(m<<2)|0;if((w|0)==(c[j>>2]|0)){c[j>>2]=y;if(!y){c[267]=c[267]&~(1<<m);break}}else{if(q>>>0<(c[270]|0)>>>0)Oa();m=q+16|0;if((c[m>>2]|0)==(w|0))c[m>>2]=y;else c[q+20>>2]=y;if(!y)break}m=c[270]|0;if(y>>>0<m>>>0)Oa();c[y+24>>2]=q;j=c[w+16>>2]|0;do if(j)if(j>>>0<m>>>0)Oa();else{c[y+16>>2]=j;c[j+24>>2]=y;break}while(0);j=c[w+20>>2]|0;if(j)if(j>>>0<(c[270]|0)>>>0)Oa();else{c[y+20>>2]=j;c[j+24>>2]=y;break}}while(0);if(v>>>0<16){q=v+b|0;c[w+4>>2]=q|3;j=w+(q+4)|0;c[j>>2]=c[j>>2]|1}else{c[w+4>>2]=b|3;c[w+(b|4)>>2]=v|1;c[w+(v+b)>>2]=v;j=c[268]|0;if(j){q=c[271]|0;m=j>>>3;j=m<<1;p=1104+(j<<2)|0;d=c[266]|0;r=1<<m;if(d&r){m=1104+(j+2<<2)|0;f=c[m>>2]|0;if(f>>>0<(c[270]|0)>>>0)Oa();else{D=m;E=f}}else{c[266]=d|r;D=1104+(j+2<<2)|0;E=p}c[D>>2]=q;c[E+12>>2]=q;c[q+8>>2]=E;c[q+12>>2]=p}c[268]=v;c[271]=k}n=w+8|0;return n|0}else F=b}else F=b}else if(a>>>0<=4294967231){p=a+11|0;q=p&-8;j=c[267]|0;if(j){r=0-q|0;d=p>>>8;if(d)if(q>>>0>16777215)G=31;else{p=(d+1048320|0)>>>16&8;f=d<<p;d=(f+520192|0)>>>16&4;m=f<<d;f=(m+245760|0)>>>16&2;i=14-(d|p|f)+(m<<f>>>15)|0;G=q>>>(i+7|0)&1|i<<1}else G=0;i=c[1368+(G<<2)>>2]|0;a:do if(!i){H=r;I=0;J=0;K=90}else{if((G|0)==31)L=0;else L=25-(G>>>1)|0;f=r;m=0;p=q<<L;d=i;e=0;while(1){h=c[d+4>>2]&-8;o=h-q|0;if(o>>>0<f>>>0)if((h|0)==(q|0)){M=o;N=d;O=d;K=94;break a}else{P=o;Q=d}else{P=f;Q=e}o=c[d+20>>2]|0;d=c[d+(p>>>31<<2)+16>>2]|0;h=(o|0)==0|(o|0)==(d|0)?m:o;if(!d){H=P;I=h;J=Q;K=90;break}else{f=P;m=h;p=p<<1;e=Q}}}while(0);if((K|0)==90){if((I|0)==0&(J|0)==0){i=2<<G;r=j&(i|0-i);if(!r){F=q;break}i=(r&0-r)+-1|0;r=i>>>12&16;k=i>>>r;i=k>>>5&8;e=k>>>i;k=e>>>2&4;p=e>>>k;e=p>>>1&2;m=p>>>e;p=m>>>1&1;R=c[1368+((i|r|k|e|p)+(m>>>p)<<2)>>2]|0}else R=I;if(!R){S=H;T=J}else{M=H;N=R;O=J;K=94}}if((K|0)==94)while(1){K=0;p=(c[N+4>>2]&-8)-q|0;m=p>>>0<M>>>0;e=m?p:M;p=m?N:O;m=c[N+16>>2]|0;if(m){M=e;N=m;O=p;K=94;continue}N=c[N+20>>2]|0;if(!N){S=e;T=p;break}else{M=e;O=p;K=94}}if((T|0)!=0?S>>>0<((c[268]|0)-q|0)>>>0:0){j=c[270]|0;if(T>>>0<j>>>0)Oa();p=T+q|0;if(T>>>0>=p>>>0)Oa();e=c[T+24>>2]|0;m=c[T+12>>2]|0;do if((m|0)==(T|0)){k=T+20|0;r=c[k>>2]|0;if(!r){i=T+16|0;f=c[i>>2]|0;if(!f){U=0;break}else{V=f;W=i}}else{V=r;W=k}while(1){k=V+20|0;r=c[k>>2]|0;if(r){V=r;W=k;continue}k=V+16|0;r=c[k>>2]|0;if(!r){X=V;Y=W;break}else{V=r;W=k}}if(Y>>>0<j>>>0)Oa();else{c[Y>>2]=0;U=X;break}}else{k=c[T+8>>2]|0;if(k>>>0<j>>>0)Oa();r=k+12|0;if((c[r>>2]|0)!=(T|0))Oa();i=m+8|0;if((c[i>>2]|0)==(T|0)){c[r>>2]=m;c[i>>2]=k;U=m;break}else Oa()}while(0);do if(e){m=c[T+28>>2]|0;j=1368+(m<<2)|0;if((T|0)==(c[j>>2]|0)){c[j>>2]=U;if(!U){c[267]=c[267]&~(1<<m);break}}else{if(e>>>0<(c[270]|0)>>>0)Oa();m=e+16|0;if((c[m>>2]|0)==(T|0))c[m>>2]=U;else c[e+20>>2]=U;if(!U)break}m=c[270]|0;if(U>>>0<m>>>0)Oa();c[U+24>>2]=e;j=c[T+16>>2]|0;do if(j)if(j>>>0<m>>>0)Oa();else{c[U+16>>2]=j;c[j+24>>2]=U;break}while(0);j=c[T+20>>2]|0;if(j)if(j>>>0<(c[270]|0)>>>0)Oa();else{c[U+20>>2]=j;c[j+24>>2]=U;break}}while(0);b:do if(S>>>0>=16){c[T+4>>2]=q|3;c[T+(q|4)>>2]=S|1;c[T+(S+q)>>2]=S;e=S>>>3;if(S>>>0<256){j=e<<1;m=1104+(j<<2)|0;k=c[266]|0;i=1<<e;if(k&i){e=1104+(j+2<<2)|0;r=c[e>>2]|0;if(r>>>0<(c[270]|0)>>>0)Oa();else{Z=e;_=r}}else{c[266]=k|i;Z=1104+(j+2<<2)|0;_=m}c[Z>>2]=p;c[_+12>>2]=p;c[T+(q+8)>>2]=_;c[T+(q+12)>>2]=m;break}m=S>>>8;if(m)if(S>>>0>16777215)$=31;else{j=(m+1048320|0)>>>16&8;i=m<<j;m=(i+520192|0)>>>16&4;k=i<<m;i=(k+245760|0)>>>16&2;r=14-(m|j|i)+(k<<i>>>15)|0;$=S>>>(r+7|0)&1|r<<1}else $=0;r=1368+($<<2)|0;c[T+(q+28)>>2]=$;c[T+(q+20)>>2]=0;c[T+(q+16)>>2]=0;i=c[267]|0;k=1<<$;if(!(i&k)){c[267]=i|k;c[r>>2]=p;c[T+(q+24)>>2]=r;c[T+(q+12)>>2]=p;c[T+(q+8)>>2]=p;break}k=c[r>>2]|0;if(($|0)==31)aa=0;else aa=25-($>>>1)|0;c:do if((c[k+4>>2]&-8|0)!=(S|0)){r=S<<aa;i=k;while(1){j=i+(r>>>31<<2)+16|0;m=c[j>>2]|0;if(!m){ba=j;ca=i;break}if((c[m+4>>2]&-8|0)==(S|0)){da=m;break c}else{r=r<<1;i=m}}if(ba>>>0<(c[270]|0)>>>0)Oa();else{c[ba>>2]=p;c[T+(q+24)>>2]=ca;c[T+(q+12)>>2]=p;c[T+(q+8)>>2]=p;break b}}else da=k;while(0);k=da+8|0;i=c[k>>2]|0;r=c[270]|0;if(da>>>0>=r>>>0&i>>>0>=r>>>0){c[i+12>>2]=p;c[k>>2]=p;c[T+(q+8)>>2]=i;c[T+(q+12)>>2]=da;c[T+(q+24)>>2]=0;break}else Oa()}else{i=S+q|0;c[T+4>>2]=i|3;k=T+(i+4)|0;c[k>>2]=c[k>>2]|1}while(0);n=T+8|0;return n|0}else F=q}else F=q}else F=-1;while(0);T=c[268]|0;if(T>>>0>=F>>>0){S=T-F|0;da=c[271]|0;if(S>>>0>15){c[271]=da+F;c[268]=S;c[da+(F+4)>>2]=S|1;c[da+T>>2]=S;c[da+4>>2]=F|3}else{c[268]=0;c[271]=0;c[da+4>>2]=T|3;S=da+(T+4)|0;c[S>>2]=c[S>>2]|1}n=da+8|0;return n|0}da=c[269]|0;if(da>>>0>F>>>0){S=da-F|0;c[269]=S;da=c[272]|0;c[272]=da+F;c[da+(F+4)>>2]=S|1;c[da+4>>2]=F|3;n=da+8|0;return n|0}do if(!(c[384]|0)){da=ya(30)|0;if(!(da+-1&da)){c[386]=da;c[385]=da;c[387]=-1;c[388]=-1;c[389]=0;c[377]=0;c[384]=(Qa(0)|0)&-16^1431655768;break}else Oa()}while(0);da=F+48|0;S=c[386]|0;T=F+47|0;ca=S+T|0;ba=0-S|0;S=ca&ba;if(S>>>0<=F>>>0){n=0;return n|0}aa=c[376]|0;if((aa|0)!=0?($=c[374]|0,_=$+S|0,_>>>0<=$>>>0|_>>>0>aa>>>0):0){n=0;return n|0}d:do if(!(c[377]&4)){aa=c[272]|0;e:do if(aa){_=1512|0;while(1){$=c[_>>2]|0;if($>>>0<=aa>>>0?(Z=_+4|0,($+(c[Z>>2]|0)|0)>>>0>aa>>>0):0){ea=_;fa=Z;break}_=c[_+8>>2]|0;if(!_){K=180;break e}}_=ca-(c[269]|0)&ba;if(_>>>0<2147483647){Z=ta(_|0)|0;if((Z|0)==((c[ea>>2]|0)+(c[fa>>2]|0)|0))if((Z|0)==(-1|0))ga=_;else{ha=Z;ia=_;K=200;break d}else{ja=Z;ka=_;K=190}}else ga=0}else K=180;while(0);do if((K|0)==180){aa=ta(0)|0;if((aa|0)!=(-1|0)){q=aa;_=c[385]|0;Z=_+-1|0;if(!(Z&q))la=S;else la=S-q+(Z+q&0-_)|0;_=c[374]|0;q=_+la|0;if(la>>>0>F>>>0&la>>>0<2147483647){Z=c[376]|0;if((Z|0)!=0?q>>>0<=_>>>0|q>>>0>Z>>>0:0){ga=0;break}Z=ta(la|0)|0;if((Z|0)==(aa|0)){ha=aa;ia=la;K=200;break d}else{ja=Z;ka=la;K=190}}else ga=0}else ga=0}while(0);f:do if((K|0)==190){Z=0-ka|0;do if(da>>>0>ka>>>0&(ka>>>0<2147483647&(ja|0)!=(-1|0))?(aa=c[386]|0,q=T-ka+aa&0-aa,q>>>0<2147483647):0)if((ta(q|0)|0)==(-1|0)){ta(Z|0)|0;ga=0;break f}else{ma=q+ka|0;break}else ma=ka;while(0);if((ja|0)==(-1|0))ga=0;else{ha=ja;ia=ma;K=200;break d}}while(0);c[377]=c[377]|4;na=ga;K=197}else{na=0;K=197}while(0);if((((K|0)==197?S>>>0<2147483647:0)?(ga=ta(S|0)|0,S=ta(0)|0,ga>>>0<S>>>0&((ga|0)!=(-1|0)&(S|0)!=(-1|0))):0)?(ma=S-ga|0,S=ma>>>0>(F+40|0)>>>0,S):0){ha=ga;ia=S?ma:na;K=200}if((K|0)==200){na=(c[374]|0)+ia|0;c[374]=na;if(na>>>0>(c[375]|0)>>>0)c[375]=na;na=c[272]|0;g:do if(na){ma=1512|0;do{S=c[ma>>2]|0;ga=ma+4|0;ja=c[ga>>2]|0;if((ha|0)==(S+ja|0)){oa=S;pa=ga;qa=ja;ra=ma;K=212;break}ma=c[ma+8>>2]|0}while((ma|0)!=0);if(((K|0)==212?(c[ra+12>>2]&8|0)==0:0)?na>>>0<ha>>>0&na>>>0>=oa>>>0:0){c[pa>>2]=qa+ia;ma=(c[269]|0)+ia|0;ja=na+8|0;if(!(ja&7))sa=0;else sa=0-ja&7;ja=ma-sa|0;c[272]=na+sa;c[269]=ja;c[na+(sa+4)>>2]=ja|1;c[na+(ma+4)>>2]=40;c[273]=c[388];break}ma=c[270]|0;if(ha>>>0<ma>>>0){c[270]=ha;ua=ha}else ua=ma;ma=ha+ia|0;ja=1512|0;while(1){if((c[ja>>2]|0)==(ma|0)){va=ja;wa=ja;K=222;break}ja=c[ja+8>>2]|0;if(!ja){xa=1512|0;break}}if((K|0)==222)if(!(c[wa+12>>2]&8)){c[va>>2]=ha;ja=wa+4|0;c[ja>>2]=(c[ja>>2]|0)+ia;ja=ha+8|0;if(!(ja&7))za=0;else za=0-ja&7;ja=ha+(ia+8)|0;if(!(ja&7))Aa=0;else Aa=0-ja&7;ja=ha+(Aa+ia)|0;ma=za+F|0;ga=ha+ma|0;S=ja-(ha+za)-F|0;c[ha+(za+4)>>2]=F|3;h:do if((ja|0)!=(na|0)){if((ja|0)==(c[271]|0)){ka=(c[268]|0)+S|0;c[268]=ka;c[271]=ga;c[ha+(ma+4)>>2]=ka|1;c[ha+(ka+ma)>>2]=ka;break}ka=ia+4|0;T=c[ha+(ka+Aa)>>2]|0;if((T&3|0)==1){da=T&-8;la=T>>>3;i:do if(T>>>0>=256){fa=c[ha+((Aa|24)+ia)>>2]|0;ea=c[ha+(ia+12+Aa)>>2]|0;do if((ea|0)==(ja|0)){ba=Aa|16;ca=ha+(ka+ba)|0;Z=c[ca>>2]|0;if(!Z){q=ha+(ba+ia)|0;ba=c[q>>2]|0;if(!ba){Ba=0;break}else{Ca=ba;Da=q}}else{Ca=Z;Da=ca}while(1){ca=Ca+20|0;Z=c[ca>>2]|0;if(Z){Ca=Z;Da=ca;continue}ca=Ca+16|0;Z=c[ca>>2]|0;if(!Z){Ea=Ca;Fa=Da;break}else{Ca=Z;Da=ca}}if(Fa>>>0<ua>>>0)Oa();else{c[Fa>>2]=0;Ba=Ea;break}}else{ca=c[ha+((Aa|8)+ia)>>2]|0;if(ca>>>0<ua>>>0)Oa();Z=ca+12|0;if((c[Z>>2]|0)!=(ja|0))Oa();q=ea+8|0;if((c[q>>2]|0)==(ja|0)){c[Z>>2]=ea;c[q>>2]=ca;Ba=ea;break}else Oa()}while(0);if(!fa)break;ea=c[ha+(ia+28+Aa)>>2]|0;ca=1368+(ea<<2)|0;do if((ja|0)!=(c[ca>>2]|0)){if(fa>>>0<(c[270]|0)>>>0)Oa();q=fa+16|0;if((c[q>>2]|0)==(ja|0))c[q>>2]=Ba;else c[fa+20>>2]=Ba;if(!Ba)break i}else{c[ca>>2]=Ba;if(Ba)break;c[267]=c[267]&~(1<<ea);break i}while(0);ea=c[270]|0;if(Ba>>>0<ea>>>0)Oa();c[Ba+24>>2]=fa;ca=Aa|16;q=c[ha+(ca+ia)>>2]|0;do if(q)if(q>>>0<ea>>>0)Oa();else{c[Ba+16>>2]=q;c[q+24>>2]=Ba;break}while(0);q=c[ha+(ka+ca)>>2]|0;if(!q)break;if(q>>>0<(c[270]|0)>>>0)Oa();else{c[Ba+20>>2]=q;c[q+24>>2]=Ba;break}}else{q=c[ha+((Aa|8)+ia)>>2]|0;ea=c[ha+(ia+12+Aa)>>2]|0;fa=1104+(la<<1<<2)|0;do if((q|0)!=(fa|0)){if(q>>>0<ua>>>0)Oa();if((c[q+12>>2]|0)==(ja|0))break;Oa()}while(0);if((ea|0)==(q|0)){c[266]=c[266]&~(1<<la);break}do if((ea|0)==(fa|0))Ga=ea+8|0;else{if(ea>>>0<ua>>>0)Oa();ca=ea+8|0;if((c[ca>>2]|0)==(ja|0)){Ga=ca;break}Oa()}while(0);c[q+12>>2]=ea;c[Ga>>2]=q}while(0);Ia=ha+((da|Aa)+ia)|0;Ja=da+S|0}else{Ia=ja;Ja=S}la=Ia+4|0;c[la>>2]=c[la>>2]&-2;c[ha+(ma+4)>>2]=Ja|1;c[ha+(Ja+ma)>>2]=Ja;la=Ja>>>3;if(Ja>>>0<256){ka=la<<1;T=1104+(ka<<2)|0;fa=c[266]|0;ca=1<<la;do if(!(fa&ca)){c[266]=fa|ca;Ka=1104+(ka+2<<2)|0;La=T}else{la=1104+(ka+2<<2)|0;Z=c[la>>2]|0;if(Z>>>0>=(c[270]|0)>>>0){Ka=la;La=Z;break}Oa()}while(0);c[Ka>>2]=ga;c[La+12>>2]=ga;c[ha+(ma+8)>>2]=La;c[ha+(ma+12)>>2]=T;break}ka=Ja>>>8;do if(!ka)Ma=0;else{if(Ja>>>0>16777215){Ma=31;break}ca=(ka+1048320|0)>>>16&8;fa=ka<<ca;da=(fa+520192|0)>>>16&4;Z=fa<<da;fa=(Z+245760|0)>>>16&2;la=14-(da|ca|fa)+(Z<<fa>>>15)|0;Ma=Ja>>>(la+7|0)&1|la<<1}while(0);ka=1368+(Ma<<2)|0;c[ha+(ma+28)>>2]=Ma;c[ha+(ma+20)>>2]=0;c[ha+(ma+16)>>2]=0;T=c[267]|0;la=1<<Ma;if(!(T&la)){c[267]=T|la;c[ka>>2]=ga;c[ha+(ma+24)>>2]=ka;c[ha+(ma+12)>>2]=ga;c[ha+(ma+8)>>2]=ga;break}la=c[ka>>2]|0;if((Ma|0)==31)Na=0;else Na=25-(Ma>>>1)|0;j:do if((c[la+4>>2]&-8|0)!=(Ja|0)){ka=Ja<<Na;T=la;while(1){fa=T+(ka>>>31<<2)+16|0;Z=c[fa>>2]|0;if(!Z){Pa=fa;Ra=T;break}if((c[Z+4>>2]&-8|0)==(Ja|0)){Sa=Z;break j}else{ka=ka<<1;T=Z}}if(Pa>>>0<(c[270]|0)>>>0)Oa();else{c[Pa>>2]=ga;c[ha+(ma+24)>>2]=Ra;c[ha+(ma+12)>>2]=ga;c[ha+(ma+8)>>2]=ga;break h}}else Sa=la;while(0);la=Sa+8|0;T=c[la>>2]|0;ka=c[270]|0;if(Sa>>>0>=ka>>>0&T>>>0>=ka>>>0){c[T+12>>2]=ga;c[la>>2]=ga;c[ha+(ma+8)>>2]=T;c[ha+(ma+12)>>2]=Sa;c[ha+(ma+24)>>2]=0;break}else Oa()}else{T=(c[269]|0)+S|0;c[269]=T;c[272]=ga;c[ha+(ma+4)>>2]=T|1}while(0);n=ha+(za|8)|0;return n|0}else xa=1512|0;while(1){ma=c[xa>>2]|0;if(ma>>>0<=na>>>0?(ga=c[xa+4>>2]|0,S=ma+ga|0,S>>>0>na>>>0):0){Ta=ma;Ua=ga;Va=S;break}xa=c[xa+8>>2]|0}S=Ta+(Ua+-39)|0;if(!(S&7))Wa=0;else Wa=0-S&7;S=Ta+(Ua+-47+Wa)|0;ga=na+16|0;ma=S>>>0<ga>>>0?na:S;S=ma+8|0;ja=ha+8|0;if(!(ja&7))Xa=0;else Xa=0-ja&7;ja=ia+-40-Xa|0;c[272]=ha+Xa;c[269]=ja;c[ha+(Xa+4)>>2]=ja|1;c[ha+(ia+-36)>>2]=40;c[273]=c[388];ja=ma+4|0;c[ja>>2]=27;c[S+0>>2]=c[378];c[S+4>>2]=c[379];c[S+8>>2]=c[380];c[S+12>>2]=c[381];c[378]=ha;c[379]=ia;c[381]=0;c[380]=S;S=ma+28|0;c[S>>2]=7;if((ma+32|0)>>>0<Va>>>0){T=S;do{S=T;T=T+4|0;c[T>>2]=7}while((S+8|0)>>>0<Va>>>0)}if((ma|0)!=(na|0)){T=ma-na|0;c[ja>>2]=c[ja>>2]&-2;c[na+4>>2]=T|1;c[ma>>2]=T;S=T>>>3;if(T>>>0<256){la=S<<1;ka=1104+(la<<2)|0;q=c[266]|0;ea=1<<S;do if(!(q&ea)){c[266]=q|ea;Ya=1104+(la+2<<2)|0;Za=ka}else{S=1104+(la+2<<2)|0;Z=c[S>>2]|0;if(Z>>>0>=(c[270]|0)>>>0){Ya=S;Za=Z;break}Oa()}while(0);c[Ya>>2]=na;c[Za+12>>2]=na;c[na+8>>2]=Za;c[na+12>>2]=ka;break}la=T>>>8;if(la)if(T>>>0>16777215)_a=31;else{ea=(la+1048320|0)>>>16&8;q=la<<ea;la=(q+520192|0)>>>16&4;ma=q<<la;q=(ma+245760|0)>>>16&2;ja=14-(la|ea|q)+(ma<<q>>>15)|0;_a=T>>>(ja+7|0)&1|ja<<1}else _a=0;ja=1368+(_a<<2)|0;c[na+28>>2]=_a;c[na+20>>2]=0;c[ga>>2]=0;q=c[267]|0;ma=1<<_a;if(!(q&ma)){c[267]=q|ma;c[ja>>2]=na;c[na+24>>2]=ja;c[na+12>>2]=na;c[na+8>>2]=na;break}ma=c[ja>>2]|0;if((_a|0)==31)$a=0;else $a=25-(_a>>>1)|0;k:do if((c[ma+4>>2]&-8|0)!=(T|0)){ja=T<<$a;q=ma;while(1){ea=q+(ja>>>31<<2)+16|0;la=c[ea>>2]|0;if(!la){ab=ea;bb=q;break}if((c[la+4>>2]&-8|0)==(T|0)){cb=la;break k}else{ja=ja<<1;q=la}}if(ab>>>0<(c[270]|0)>>>0)Oa();else{c[ab>>2]=na;c[na+24>>2]=bb;c[na+12>>2]=na;c[na+8>>2]=na;break g}}else cb=ma;while(0);ma=cb+8|0;T=c[ma>>2]|0;ga=c[270]|0;if(cb>>>0>=ga>>>0&T>>>0>=ga>>>0){c[T+12>>2]=na;c[ma>>2]=na;c[na+8>>2]=T;c[na+12>>2]=cb;c[na+24>>2]=0;break}else Oa()}}else{T=c[270]|0;if((T|0)==0|ha>>>0<T>>>0)c[270]=ha;c[378]=ha;c[379]=ia;c[381]=0;c[275]=c[384];c[274]=-1;T=0;do{ma=T<<1;ga=1104+(ma<<2)|0;c[1104+(ma+3<<2)>>2]=ga;c[1104+(ma+2<<2)>>2]=ga;T=T+1|0}while((T|0)!=32);T=ha+8|0;if(!(T&7))db=0;else db=0-T&7;T=ia+-40-db|0;c[272]=ha+db;c[269]=T;c[ha+(db+4)>>2]=T|1;c[ha+(ia+-36)>>2]=40;c[273]=c[388]}while(0);ia=c[269]|0;if(ia>>>0>F>>>0){ha=ia-F|0;c[269]=ha;ia=c[272]|0;c[272]=ia+F;c[ia+(F+4)>>2]=ha|1;c[ia+4>>2]=F|3;n=ia+8|0;return n|0}}c[(Ha()|0)>>2]=12;n=0;return n|0}function Jb(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;if(!a)return;b=a+-8|0;d=c[270]|0;if(b>>>0<d>>>0)Oa();e=c[a+-4>>2]|0;f=e&3;if((f|0)==1)Oa();g=e&-8;h=a+(g+-8)|0;do if(!(e&1)){i=c[b>>2]|0;if(!f)return;j=-8-i|0;k=a+j|0;l=i+g|0;if(k>>>0<d>>>0)Oa();if((k|0)==(c[271]|0)){m=a+(g+-4)|0;n=c[m>>2]|0;if((n&3|0)!=3){o=k;p=l;break}c[268]=l;c[m>>2]=n&-2;c[a+(j+4)>>2]=l|1;c[h>>2]=l;return}n=i>>>3;if(i>>>0<256){i=c[a+(j+8)>>2]|0;m=c[a+(j+12)>>2]|0;q=1104+(n<<1<<2)|0;if((i|0)!=(q|0)){if(i>>>0<d>>>0)Oa();if((c[i+12>>2]|0)!=(k|0))Oa()}if((m|0)==(i|0)){c[266]=c[266]&~(1<<n);o=k;p=l;break}if((m|0)!=(q|0)){if(m>>>0<d>>>0)Oa();q=m+8|0;if((c[q>>2]|0)==(k|0))r=q;else Oa()}else r=m+8|0;c[i+12>>2]=m;c[r>>2]=i;o=k;p=l;break}i=c[a+(j+24)>>2]|0;m=c[a+(j+12)>>2]|0;do if((m|0)==(k|0)){q=a+(j+20)|0;n=c[q>>2]|0;if(!n){s=a+(j+16)|0;t=c[s>>2]|0;if(!t){u=0;break}else{v=t;w=s}}else{v=n;w=q}while(1){q=v+20|0;n=c[q>>2]|0;if(n){v=n;w=q;continue}q=v+16|0;n=c[q>>2]|0;if(!n){x=v;y=w;break}else{v=n;w=q}}if(y>>>0<d>>>0)Oa();else{c[y>>2]=0;u=x;break}}else{q=c[a+(j+8)>>2]|0;if(q>>>0<d>>>0)Oa();n=q+12|0;if((c[n>>2]|0)!=(k|0))Oa();s=m+8|0;if((c[s>>2]|0)==(k|0)){c[n>>2]=m;c[s>>2]=q;u=m;break}else Oa()}while(0);if(i){m=c[a+(j+28)>>2]|0;q=1368+(m<<2)|0;if((k|0)==(c[q>>2]|0)){c[q>>2]=u;if(!u){c[267]=c[267]&~(1<<m);o=k;p=l;break}}else{if(i>>>0<(c[270]|0)>>>0)Oa();m=i+16|0;if((c[m>>2]|0)==(k|0))c[m>>2]=u;else c[i+20>>2]=u;if(!u){o=k;p=l;break}}m=c[270]|0;if(u>>>0<m>>>0)Oa();c[u+24>>2]=i;q=c[a+(j+16)>>2]|0;do if(q)if(q>>>0<m>>>0)Oa();else{c[u+16>>2]=q;c[q+24>>2]=u;break}while(0);q=c[a+(j+20)>>2]|0;if(q)if(q>>>0<(c[270]|0)>>>0)Oa();else{c[u+20>>2]=q;c[q+24>>2]=u;o=k;p=l;break}else{o=k;p=l}}else{o=k;p=l}}else{o=b;p=g}while(0);if(o>>>0>=h>>>0)Oa();b=a+(g+-4)|0;u=c[b>>2]|0;if(!(u&1))Oa();if(!(u&2)){if((h|0)==(c[272]|0)){d=(c[269]|0)+p|0;c[269]=d;c[272]=o;c[o+4>>2]=d|1;if((o|0)!=(c[271]|0))return;c[271]=0;c[268]=0;return}if((h|0)==(c[271]|0)){d=(c[268]|0)+p|0;c[268]=d;c[271]=o;c[o+4>>2]=d|1;c[o+d>>2]=d;return}d=(u&-8)+p|0;x=u>>>3;do if(u>>>0>=256){y=c[a+(g+16)>>2]|0;w=c[a+(g|4)>>2]|0;do if((w|0)==(h|0)){v=a+(g+12)|0;r=c[v>>2]|0;if(!r){f=a+(g+8)|0;e=c[f>>2]|0;if(!e){z=0;break}else{A=e;B=f}}else{A=r;B=v}while(1){v=A+20|0;r=c[v>>2]|0;if(r){A=r;B=v;continue}v=A+16|0;r=c[v>>2]|0;if(!r){C=A;D=B;break}else{A=r;B=v}}if(D>>>0<(c[270]|0)>>>0)Oa();else{c[D>>2]=0;z=C;break}}else{v=c[a+g>>2]|0;if(v>>>0<(c[270]|0)>>>0)Oa();r=v+12|0;if((c[r>>2]|0)!=(h|0))Oa();f=w+8|0;if((c[f>>2]|0)==(h|0)){c[r>>2]=w;c[f>>2]=v;z=w;break}else Oa()}while(0);if(y){w=c[a+(g+20)>>2]|0;l=1368+(w<<2)|0;if((h|0)==(c[l>>2]|0)){c[l>>2]=z;if(!z){c[267]=c[267]&~(1<<w);break}}else{if(y>>>0<(c[270]|0)>>>0)Oa();w=y+16|0;if((c[w>>2]|0)==(h|0))c[w>>2]=z;else c[y+20>>2]=z;if(!z)break}w=c[270]|0;if(z>>>0<w>>>0)Oa();c[z+24>>2]=y;l=c[a+(g+8)>>2]|0;do if(l)if(l>>>0<w>>>0)Oa();else{c[z+16>>2]=l;c[l+24>>2]=z;break}while(0);l=c[a+(g+12)>>2]|0;if(l)if(l>>>0<(c[270]|0)>>>0)Oa();else{c[z+20>>2]=l;c[l+24>>2]=z;break}}}else{l=c[a+g>>2]|0;w=c[a+(g|4)>>2]|0;y=1104+(x<<1<<2)|0;if((l|0)!=(y|0)){if(l>>>0<(c[270]|0)>>>0)Oa();if((c[l+12>>2]|0)!=(h|0))Oa()}if((w|0)==(l|0)){c[266]=c[266]&~(1<<x);break}if((w|0)!=(y|0)){if(w>>>0<(c[270]|0)>>>0)Oa();y=w+8|0;if((c[y>>2]|0)==(h|0))E=y;else Oa()}else E=w+8|0;c[l+12>>2]=w;c[E>>2]=l}while(0);c[o+4>>2]=d|1;c[o+d>>2]=d;if((o|0)==(c[271]|0)){c[268]=d;return}else F=d}else{c[b>>2]=u&-2;c[o+4>>2]=p|1;c[o+p>>2]=p;F=p}p=F>>>3;if(F>>>0<256){u=p<<1;b=1104+(u<<2)|0;d=c[266]|0;E=1<<p;if(d&E){p=1104+(u+2<<2)|0;h=c[p>>2]|0;if(h>>>0<(c[270]|0)>>>0)Oa();else{G=p;H=h}}else{c[266]=d|E;G=1104+(u+2<<2)|0;H=b}c[G>>2]=o;c[H+12>>2]=o;c[o+8>>2]=H;c[o+12>>2]=b;return}b=F>>>8;if(b)if(F>>>0>16777215)I=31;else{H=(b+1048320|0)>>>16&8;G=b<<H;b=(G+520192|0)>>>16&4;u=G<<b;G=(u+245760|0)>>>16&2;E=14-(b|H|G)+(u<<G>>>15)|0;I=F>>>(E+7|0)&1|E<<1}else I=0;E=1368+(I<<2)|0;c[o+28>>2]=I;c[o+20>>2]=0;c[o+16>>2]=0;G=c[267]|0;u=1<<I;a:do if(G&u){H=c[E>>2]|0;if((I|0)==31)J=0;else J=25-(I>>>1)|0;b:do if((c[H+4>>2]&-8|0)!=(F|0)){b=F<<J;d=H;while(1){h=d+(b>>>31<<2)+16|0;p=c[h>>2]|0;if(!p){K=h;L=d;break}if((c[p+4>>2]&-8|0)==(F|0)){M=p;break b}else{b=b<<1;d=p}}if(K>>>0<(c[270]|0)>>>0)Oa();else{c[K>>2]=o;c[o+24>>2]=L;c[o+12>>2]=o;c[o+8>>2]=o;break a}}else M=H;while(0);H=M+8|0;d=c[H>>2]|0;b=c[270]|0;if(M>>>0>=b>>>0&d>>>0>=b>>>0){c[d+12>>2]=o;c[H>>2]=o;c[o+8>>2]=d;c[o+12>>2]=M;c[o+24>>2]=0;break}else Oa()}else{c[267]=G|u;c[E>>2]=o;c[o+24>>2]=E;c[o+12>>2]=o;c[o+8>>2]=o}while(0);o=(c[274]|0)+-1|0;c[274]=o;if(!o)N=1520|0;else return;while(1){o=c[N>>2]|0;if(!o)break;else N=o+8|0}c[274]=-1;return}function Kb(){}function Lb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function Mb(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function Nb(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return ua(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Ob(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Wa[a&1](b|0,c|0,d|0)|0}function Pb(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Xa[a&3](b|0,c|0,d|0,e|0,f|0)}function Qb(a,b){a=a|0;b=b|0;Ya[a&7](b|0)}function Rb(a,b){a=a|0;b=b|0;return Za[a&1](b|0)|0}function Sb(a){a=a|0;_a[a&0]()}function Tb(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;$a[a&3](b|0,c|0,d|0,e|0,f|0,g|0)}function Ub(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ab[a&3](b|0,c|0,d|0,e|0)}function Vb(a,b,c){a=a|0;b=b|0;c=c|0;aa(0);return 0}function Wb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;aa(1)}function Xb(a){a=a|0;aa(2)}function Yb(a){a=a|0;aa(3);return 0}function Zb(){aa(4)}function _b(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;aa(5)}function $b(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;aa(6)}

// EMSCRIPTEN_END_FUNCS
var Wa=[Vb,yb];var Xa=[Wb,Fb,Eb,Wb];var Ya=[Xb,nb,ob,tb,wb,ub,vb,xb];var Za=[Yb,pb];var _a=[Zb];var $a=[_b,Hb,Gb,_b];var ab=[$b,Ab,Bb,$b];return{_strlen:Mb,_free:Jb,_main:jb,_memset:Lb,_malloc:Ib,_memcpy:Nb,runPostSets:Kb,stackAlloc:bb,stackSave:cb,stackRestore:db,setThrew:eb,setTempRet0:hb,getTempRet0:ib,dynCall_iiii:Ob,dynCall_viiiii:Pb,dynCall_vi:Qb,dynCall_ii:Rb,dynCall_v:Sb,dynCall_viiiiii:Tb,dynCall_viiii:Ub}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var _strlen=Module["_strlen"]=asm["_strlen"];var _free=Module["_free"]=asm["_free"];var _main=Module["_main"]=asm["_main"];var _memset=Module["_memset"]=asm["_memset"];var _malloc=Module["_malloc"]=asm["_malloc"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];var i64Math=null;if(memoryInitializer){if(typeof Module["locateFile"]==="function"){memoryInitializer=Module["locateFile"](memoryInitializer)}else if(Module["memoryInitializerPrefixURL"]){memoryInitializer=Module["memoryInitializerPrefixURL"]+memoryInitializer}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,STATIC_BASE)}else{addRunDependency("memory initializer");var applyMemoryInitializer=(function(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,STATIC_BASE);removeRunDependency("memory initializer")});var request=Module["memoryInitializerRequest"];if(request){if(request.response){setTimeout((function(){applyMemoryInitializer(request.response)}),0)}else{request.addEventListener("load",(function(){if(request.status!==200&&request.status!==0){console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status)}if(!request.response||typeof request.response!=="object"||!request.response.byteLength){console.warn("a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): "+request.response)}applyMemoryInitializer(request.response)}))}}else{Browser.asyncLoad(memoryInitializer,applyMemoryInitializer,(function(){throw"could not load memory initializer "+memoryInitializer}))}}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){assert(runDependencies==0,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(__ATPRERUN__.length==0,"cannot call main when preRun functions remain to be called");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);initialStackTop=STACKTOP;try{var ret=Module["_main"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(ENVIRONMENT_IS_WEB&&preloadStartTime!==null){Module.printErr("pre-main prep time: "+(Date.now()-preloadStartTime)+" ms")}if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["stdout"]["once"]("drain",(function(){process["exit"](status)}));console.log(" ");setTimeout((function(){process["exit"](status)}),500)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;abortDecorators.forEach((function(decorator){output=decorator(output,what)}));throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run()




